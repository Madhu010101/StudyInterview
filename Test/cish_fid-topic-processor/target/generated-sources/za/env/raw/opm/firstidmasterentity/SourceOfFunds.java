/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class SourceOfFunds extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 757748860998093197L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"SourceOfFunds\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"sourceOfFundsAmount\",\"type\":[\"null\",{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}],\"default\":null},{\"name\":\"sourceOfFundsDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfFundsEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfFundsActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfFundsCurrencyEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfFundsFrequencyEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceOfFundsPaymentDay\",\"type\":[\"null\",{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}],\"default\":null},{\"name\":\"primarySourceOfFundsIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<SourceOfFunds> ENCODER =
      new BinaryMessageEncoder<SourceOfFunds>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<SourceOfFunds> DECODER =
      new BinaryMessageDecoder<SourceOfFunds>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<SourceOfFunds> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<SourceOfFunds> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<SourceOfFunds> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<SourceOfFunds>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this SourceOfFunds to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a SourceOfFunds from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a SourceOfFunds instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static SourceOfFunds fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Integer sourceOfFundsAmount;
  @Deprecated public java.lang.String sourceOfFundsDate;
  @Deprecated public java.lang.String sourceOfFundsEntpsTypeCode;
  @Deprecated public java.lang.String sourceOfFundsActiveIndicator;
  @Deprecated public java.lang.String sourceOfFundsCurrencyEntpsTypeCode;
  @Deprecated public java.lang.String sourceOfFundsFrequencyEntpsTypeCode;
  @Deprecated public java.lang.Integer sourceOfFundsPaymentDay;
  @Deprecated public java.lang.String primarySourceOfFundsIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public SourceOfFunds() {}

  /**
   * All-args constructor.
   * @param sourceOfFundsAmount The new value for sourceOfFundsAmount
   * @param sourceOfFundsDate The new value for sourceOfFundsDate
   * @param sourceOfFundsEntpsTypeCode The new value for sourceOfFundsEntpsTypeCode
   * @param sourceOfFundsActiveIndicator The new value for sourceOfFundsActiveIndicator
   * @param sourceOfFundsCurrencyEntpsTypeCode The new value for sourceOfFundsCurrencyEntpsTypeCode
   * @param sourceOfFundsFrequencyEntpsTypeCode The new value for sourceOfFundsFrequencyEntpsTypeCode
   * @param sourceOfFundsPaymentDay The new value for sourceOfFundsPaymentDay
   * @param primarySourceOfFundsIndicator The new value for primarySourceOfFundsIndicator
   */
  public SourceOfFunds(java.lang.Integer sourceOfFundsAmount, java.lang.String sourceOfFundsDate, java.lang.String sourceOfFundsEntpsTypeCode, java.lang.String sourceOfFundsActiveIndicator, java.lang.String sourceOfFundsCurrencyEntpsTypeCode, java.lang.String sourceOfFundsFrequencyEntpsTypeCode, java.lang.Integer sourceOfFundsPaymentDay, java.lang.String primarySourceOfFundsIndicator) {
    this.sourceOfFundsAmount = sourceOfFundsAmount;
    this.sourceOfFundsDate = sourceOfFundsDate;
    this.sourceOfFundsEntpsTypeCode = sourceOfFundsEntpsTypeCode;
    this.sourceOfFundsActiveIndicator = sourceOfFundsActiveIndicator;
    this.sourceOfFundsCurrencyEntpsTypeCode = sourceOfFundsCurrencyEntpsTypeCode;
    this.sourceOfFundsFrequencyEntpsTypeCode = sourceOfFundsFrequencyEntpsTypeCode;
    this.sourceOfFundsPaymentDay = sourceOfFundsPaymentDay;
    this.primarySourceOfFundsIndicator = primarySourceOfFundsIndicator;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return sourceOfFundsAmount;
    case 1: return sourceOfFundsDate;
    case 2: return sourceOfFundsEntpsTypeCode;
    case 3: return sourceOfFundsActiveIndicator;
    case 4: return sourceOfFundsCurrencyEntpsTypeCode;
    case 5: return sourceOfFundsFrequencyEntpsTypeCode;
    case 6: return sourceOfFundsPaymentDay;
    case 7: return primarySourceOfFundsIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: sourceOfFundsAmount = (java.lang.Integer)value$; break;
    case 1: sourceOfFundsDate = value$ != null ? value$.toString() : null; break;
    case 2: sourceOfFundsEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 3: sourceOfFundsActiveIndicator = value$ != null ? value$.toString() : null; break;
    case 4: sourceOfFundsCurrencyEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 5: sourceOfFundsFrequencyEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 6: sourceOfFundsPaymentDay = (java.lang.Integer)value$; break;
    case 7: primarySourceOfFundsIndicator = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'sourceOfFundsAmount' field.
   * @return The value of the 'sourceOfFundsAmount' field.
   */
  public java.lang.Integer getSourceOfFundsAmount() {
    return sourceOfFundsAmount;
  }


  /**
   * Sets the value of the 'sourceOfFundsAmount' field.
   * @param value the value to set.
   */
  public void setSourceOfFundsAmount(java.lang.Integer value) {
    this.sourceOfFundsAmount = value;
  }

  /**
   * Gets the value of the 'sourceOfFundsDate' field.
   * @return The value of the 'sourceOfFundsDate' field.
   */
  public java.lang.String getSourceOfFundsDate() {
    return sourceOfFundsDate;
  }


  /**
   * Sets the value of the 'sourceOfFundsDate' field.
   * @param value the value to set.
   */
  public void setSourceOfFundsDate(java.lang.String value) {
    this.sourceOfFundsDate = value;
  }

  /**
   * Gets the value of the 'sourceOfFundsEntpsTypeCode' field.
   * @return The value of the 'sourceOfFundsEntpsTypeCode' field.
   */
  public java.lang.String getSourceOfFundsEntpsTypeCode() {
    return sourceOfFundsEntpsTypeCode;
  }


  /**
   * Sets the value of the 'sourceOfFundsEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setSourceOfFundsEntpsTypeCode(java.lang.String value) {
    this.sourceOfFundsEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'sourceOfFundsActiveIndicator' field.
   * @return The value of the 'sourceOfFundsActiveIndicator' field.
   */
  public java.lang.String getSourceOfFundsActiveIndicator() {
    return sourceOfFundsActiveIndicator;
  }


  /**
   * Sets the value of the 'sourceOfFundsActiveIndicator' field.
   * @param value the value to set.
   */
  public void setSourceOfFundsActiveIndicator(java.lang.String value) {
    this.sourceOfFundsActiveIndicator = value;
  }

  /**
   * Gets the value of the 'sourceOfFundsCurrencyEntpsTypeCode' field.
   * @return The value of the 'sourceOfFundsCurrencyEntpsTypeCode' field.
   */
  public java.lang.String getSourceOfFundsCurrencyEntpsTypeCode() {
    return sourceOfFundsCurrencyEntpsTypeCode;
  }


  /**
   * Sets the value of the 'sourceOfFundsCurrencyEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setSourceOfFundsCurrencyEntpsTypeCode(java.lang.String value) {
    this.sourceOfFundsCurrencyEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'sourceOfFundsFrequencyEntpsTypeCode' field.
   * @return The value of the 'sourceOfFundsFrequencyEntpsTypeCode' field.
   */
  public java.lang.String getSourceOfFundsFrequencyEntpsTypeCode() {
    return sourceOfFundsFrequencyEntpsTypeCode;
  }


  /**
   * Sets the value of the 'sourceOfFundsFrequencyEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setSourceOfFundsFrequencyEntpsTypeCode(java.lang.String value) {
    this.sourceOfFundsFrequencyEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'sourceOfFundsPaymentDay' field.
   * @return The value of the 'sourceOfFundsPaymentDay' field.
   */
  public java.lang.Integer getSourceOfFundsPaymentDay() {
    return sourceOfFundsPaymentDay;
  }


  /**
   * Sets the value of the 'sourceOfFundsPaymentDay' field.
   * @param value the value to set.
   */
  public void setSourceOfFundsPaymentDay(java.lang.Integer value) {
    this.sourceOfFundsPaymentDay = value;
  }

  /**
   * Gets the value of the 'primarySourceOfFundsIndicator' field.
   * @return The value of the 'primarySourceOfFundsIndicator' field.
   */
  public java.lang.String getPrimarySourceOfFundsIndicator() {
    return primarySourceOfFundsIndicator;
  }


  /**
   * Sets the value of the 'primarySourceOfFundsIndicator' field.
   * @param value the value to set.
   */
  public void setPrimarySourceOfFundsIndicator(java.lang.String value) {
    this.primarySourceOfFundsIndicator = value;
  }

  /**
   * Creates a new SourceOfFunds RecordBuilder.
   * @return A new SourceOfFunds RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder();
  }

  /**
   * Creates a new SourceOfFunds RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new SourceOfFunds RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder newBuilder(za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder(other);
    }
  }

  /**
   * Creates a new SourceOfFunds RecordBuilder by copying an existing SourceOfFunds instance.
   * @param other The existing instance to copy.
   * @return A new SourceOfFunds RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder newBuilder(za.env.raw.opm.firstidmasterentity.SourceOfFunds other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder(other);
    }
  }

  /**
   * RecordBuilder for SourceOfFunds instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<SourceOfFunds>
    implements org.apache.avro.data.RecordBuilder<SourceOfFunds> {

    private java.lang.Integer sourceOfFundsAmount;
    private java.lang.String sourceOfFundsDate;
    private java.lang.String sourceOfFundsEntpsTypeCode;
    private java.lang.String sourceOfFundsActiveIndicator;
    private java.lang.String sourceOfFundsCurrencyEntpsTypeCode;
    private java.lang.String sourceOfFundsFrequencyEntpsTypeCode;
    private java.lang.Integer sourceOfFundsPaymentDay;
    private java.lang.String primarySourceOfFundsIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.sourceOfFundsAmount)) {
        this.sourceOfFundsAmount = data().deepCopy(fields()[0].schema(), other.sourceOfFundsAmount);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sourceOfFundsDate)) {
        this.sourceOfFundsDate = data().deepCopy(fields()[1].schema(), other.sourceOfFundsDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.sourceOfFundsEntpsTypeCode)) {
        this.sourceOfFundsEntpsTypeCode = data().deepCopy(fields()[2].schema(), other.sourceOfFundsEntpsTypeCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.sourceOfFundsActiveIndicator)) {
        this.sourceOfFundsActiveIndicator = data().deepCopy(fields()[3].schema(), other.sourceOfFundsActiveIndicator);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.sourceOfFundsCurrencyEntpsTypeCode)) {
        this.sourceOfFundsCurrencyEntpsTypeCode = data().deepCopy(fields()[4].schema(), other.sourceOfFundsCurrencyEntpsTypeCode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.sourceOfFundsFrequencyEntpsTypeCode)) {
        this.sourceOfFundsFrequencyEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.sourceOfFundsFrequencyEntpsTypeCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.sourceOfFundsPaymentDay)) {
        this.sourceOfFundsPaymentDay = data().deepCopy(fields()[6].schema(), other.sourceOfFundsPaymentDay);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.primarySourceOfFundsIndicator)) {
        this.primarySourceOfFundsIndicator = data().deepCopy(fields()[7].schema(), other.primarySourceOfFundsIndicator);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing SourceOfFunds instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.SourceOfFunds other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.sourceOfFundsAmount)) {
        this.sourceOfFundsAmount = data().deepCopy(fields()[0].schema(), other.sourceOfFundsAmount);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sourceOfFundsDate)) {
        this.sourceOfFundsDate = data().deepCopy(fields()[1].schema(), other.sourceOfFundsDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.sourceOfFundsEntpsTypeCode)) {
        this.sourceOfFundsEntpsTypeCode = data().deepCopy(fields()[2].schema(), other.sourceOfFundsEntpsTypeCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.sourceOfFundsActiveIndicator)) {
        this.sourceOfFundsActiveIndicator = data().deepCopy(fields()[3].schema(), other.sourceOfFundsActiveIndicator);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.sourceOfFundsCurrencyEntpsTypeCode)) {
        this.sourceOfFundsCurrencyEntpsTypeCode = data().deepCopy(fields()[4].schema(), other.sourceOfFundsCurrencyEntpsTypeCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.sourceOfFundsFrequencyEntpsTypeCode)) {
        this.sourceOfFundsFrequencyEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.sourceOfFundsFrequencyEntpsTypeCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sourceOfFundsPaymentDay)) {
        this.sourceOfFundsPaymentDay = data().deepCopy(fields()[6].schema(), other.sourceOfFundsPaymentDay);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.primarySourceOfFundsIndicator)) {
        this.primarySourceOfFundsIndicator = data().deepCopy(fields()[7].schema(), other.primarySourceOfFundsIndicator);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'sourceOfFundsAmount' field.
      * @return The value.
      */
    public java.lang.Integer getSourceOfFundsAmount() {
      return sourceOfFundsAmount;
    }


    /**
      * Sets the value of the 'sourceOfFundsAmount' field.
      * @param value The value of 'sourceOfFundsAmount'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setSourceOfFundsAmount(java.lang.Integer value) {
      validate(fields()[0], value);
      this.sourceOfFundsAmount = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfFundsAmount' field has been set.
      * @return True if the 'sourceOfFundsAmount' field has been set, false otherwise.
      */
    public boolean hasSourceOfFundsAmount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'sourceOfFundsAmount' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearSourceOfFundsAmount() {
      sourceOfFundsAmount = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceOfFundsDate' field.
      * @return The value.
      */
    public java.lang.String getSourceOfFundsDate() {
      return sourceOfFundsDate;
    }


    /**
      * Sets the value of the 'sourceOfFundsDate' field.
      * @param value The value of 'sourceOfFundsDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setSourceOfFundsDate(java.lang.String value) {
      validate(fields()[1], value);
      this.sourceOfFundsDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfFundsDate' field has been set.
      * @return True if the 'sourceOfFundsDate' field has been set, false otherwise.
      */
    public boolean hasSourceOfFundsDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sourceOfFundsDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearSourceOfFundsDate() {
      sourceOfFundsDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceOfFundsEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getSourceOfFundsEntpsTypeCode() {
      return sourceOfFundsEntpsTypeCode;
    }


    /**
      * Sets the value of the 'sourceOfFundsEntpsTypeCode' field.
      * @param value The value of 'sourceOfFundsEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setSourceOfFundsEntpsTypeCode(java.lang.String value) {
      validate(fields()[2], value);
      this.sourceOfFundsEntpsTypeCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfFundsEntpsTypeCode' field has been set.
      * @return True if the 'sourceOfFundsEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasSourceOfFundsEntpsTypeCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'sourceOfFundsEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearSourceOfFundsEntpsTypeCode() {
      sourceOfFundsEntpsTypeCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceOfFundsActiveIndicator' field.
      * @return The value.
      */
    public java.lang.String getSourceOfFundsActiveIndicator() {
      return sourceOfFundsActiveIndicator;
    }


    /**
      * Sets the value of the 'sourceOfFundsActiveIndicator' field.
      * @param value The value of 'sourceOfFundsActiveIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setSourceOfFundsActiveIndicator(java.lang.String value) {
      validate(fields()[3], value);
      this.sourceOfFundsActiveIndicator = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfFundsActiveIndicator' field has been set.
      * @return True if the 'sourceOfFundsActiveIndicator' field has been set, false otherwise.
      */
    public boolean hasSourceOfFundsActiveIndicator() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'sourceOfFundsActiveIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearSourceOfFundsActiveIndicator() {
      sourceOfFundsActiveIndicator = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceOfFundsCurrencyEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getSourceOfFundsCurrencyEntpsTypeCode() {
      return sourceOfFundsCurrencyEntpsTypeCode;
    }


    /**
      * Sets the value of the 'sourceOfFundsCurrencyEntpsTypeCode' field.
      * @param value The value of 'sourceOfFundsCurrencyEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setSourceOfFundsCurrencyEntpsTypeCode(java.lang.String value) {
      validate(fields()[4], value);
      this.sourceOfFundsCurrencyEntpsTypeCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfFundsCurrencyEntpsTypeCode' field has been set.
      * @return True if the 'sourceOfFundsCurrencyEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasSourceOfFundsCurrencyEntpsTypeCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'sourceOfFundsCurrencyEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearSourceOfFundsCurrencyEntpsTypeCode() {
      sourceOfFundsCurrencyEntpsTypeCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceOfFundsFrequencyEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getSourceOfFundsFrequencyEntpsTypeCode() {
      return sourceOfFundsFrequencyEntpsTypeCode;
    }


    /**
      * Sets the value of the 'sourceOfFundsFrequencyEntpsTypeCode' field.
      * @param value The value of 'sourceOfFundsFrequencyEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setSourceOfFundsFrequencyEntpsTypeCode(java.lang.String value) {
      validate(fields()[5], value);
      this.sourceOfFundsFrequencyEntpsTypeCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfFundsFrequencyEntpsTypeCode' field has been set.
      * @return True if the 'sourceOfFundsFrequencyEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasSourceOfFundsFrequencyEntpsTypeCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'sourceOfFundsFrequencyEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearSourceOfFundsFrequencyEntpsTypeCode() {
      sourceOfFundsFrequencyEntpsTypeCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceOfFundsPaymentDay' field.
      * @return The value.
      */
    public java.lang.Integer getSourceOfFundsPaymentDay() {
      return sourceOfFundsPaymentDay;
    }


    /**
      * Sets the value of the 'sourceOfFundsPaymentDay' field.
      * @param value The value of 'sourceOfFundsPaymentDay'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setSourceOfFundsPaymentDay(java.lang.Integer value) {
      validate(fields()[6], value);
      this.sourceOfFundsPaymentDay = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceOfFundsPaymentDay' field has been set.
      * @return True if the 'sourceOfFundsPaymentDay' field has been set, false otherwise.
      */
    public boolean hasSourceOfFundsPaymentDay() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sourceOfFundsPaymentDay' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearSourceOfFundsPaymentDay() {
      sourceOfFundsPaymentDay = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'primarySourceOfFundsIndicator' field.
      * @return The value.
      */
    public java.lang.String getPrimarySourceOfFundsIndicator() {
      return primarySourceOfFundsIndicator;
    }


    /**
      * Sets the value of the 'primarySourceOfFundsIndicator' field.
      * @param value The value of 'primarySourceOfFundsIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder setPrimarySourceOfFundsIndicator(java.lang.String value) {
      validate(fields()[7], value);
      this.primarySourceOfFundsIndicator = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'primarySourceOfFundsIndicator' field has been set.
      * @return True if the 'primarySourceOfFundsIndicator' field has been set, false otherwise.
      */
    public boolean hasPrimarySourceOfFundsIndicator() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'primarySourceOfFundsIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.SourceOfFunds.Builder clearPrimarySourceOfFundsIndicator() {
      primarySourceOfFundsIndicator = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public SourceOfFunds build() {
      try {
        SourceOfFunds record = new SourceOfFunds();
        record.sourceOfFundsAmount = fieldSetFlags()[0] ? this.sourceOfFundsAmount : (java.lang.Integer) defaultValue(fields()[0]);
        record.sourceOfFundsDate = fieldSetFlags()[1] ? this.sourceOfFundsDate : (java.lang.String) defaultValue(fields()[1]);
        record.sourceOfFundsEntpsTypeCode = fieldSetFlags()[2] ? this.sourceOfFundsEntpsTypeCode : (java.lang.String) defaultValue(fields()[2]);
        record.sourceOfFundsActiveIndicator = fieldSetFlags()[3] ? this.sourceOfFundsActiveIndicator : (java.lang.String) defaultValue(fields()[3]);
        record.sourceOfFundsCurrencyEntpsTypeCode = fieldSetFlags()[4] ? this.sourceOfFundsCurrencyEntpsTypeCode : (java.lang.String) defaultValue(fields()[4]);
        record.sourceOfFundsFrequencyEntpsTypeCode = fieldSetFlags()[5] ? this.sourceOfFundsFrequencyEntpsTypeCode : (java.lang.String) defaultValue(fields()[5]);
        record.sourceOfFundsPaymentDay = fieldSetFlags()[6] ? this.sourceOfFundsPaymentDay : (java.lang.Integer) defaultValue(fields()[6]);
        record.primarySourceOfFundsIndicator = fieldSetFlags()[7] ? this.primarySourceOfFundsIndicator : (java.lang.String) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<SourceOfFunds>
    WRITER$ = (org.apache.avro.io.DatumWriter<SourceOfFunds>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<SourceOfFunds>
    READER$ = (org.apache.avro.io.DatumReader<SourceOfFunds>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.sourceOfFundsAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.sourceOfFundsAmount);
    }

    if (this.sourceOfFundsDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sourceOfFundsDate);
    }

    if (this.sourceOfFundsEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sourceOfFundsEntpsTypeCode);
    }

    if (this.sourceOfFundsActiveIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sourceOfFundsActiveIndicator);
    }

    if (this.sourceOfFundsCurrencyEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sourceOfFundsCurrencyEntpsTypeCode);
    }

    if (this.sourceOfFundsFrequencyEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sourceOfFundsFrequencyEntpsTypeCode);
    }

    if (this.sourceOfFundsPaymentDay == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.sourceOfFundsPaymentDay);
    }

    if (this.primarySourceOfFundsIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.primarySourceOfFundsIndicator);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceOfFundsAmount = null;
      } else {
        this.sourceOfFundsAmount = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceOfFundsDate = null;
      } else {
        this.sourceOfFundsDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceOfFundsEntpsTypeCode = null;
      } else {
        this.sourceOfFundsEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceOfFundsActiveIndicator = null;
      } else {
        this.sourceOfFundsActiveIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceOfFundsCurrencyEntpsTypeCode = null;
      } else {
        this.sourceOfFundsCurrencyEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceOfFundsFrequencyEntpsTypeCode = null;
      } else {
        this.sourceOfFundsFrequencyEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceOfFundsPaymentDay = null;
      } else {
        this.sourceOfFundsPaymentDay = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.primarySourceOfFundsIndicator = null;
      } else {
        this.primarySourceOfFundsIndicator = in.readString();
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceOfFundsAmount = null;
          } else {
            this.sourceOfFundsAmount = in.readInt();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceOfFundsDate = null;
          } else {
            this.sourceOfFundsDate = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceOfFundsEntpsTypeCode = null;
          } else {
            this.sourceOfFundsEntpsTypeCode = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceOfFundsActiveIndicator = null;
          } else {
            this.sourceOfFundsActiveIndicator = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceOfFundsCurrencyEntpsTypeCode = null;
          } else {
            this.sourceOfFundsCurrencyEntpsTypeCode = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceOfFundsFrequencyEntpsTypeCode = null;
          } else {
            this.sourceOfFundsFrequencyEntpsTypeCode = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceOfFundsPaymentDay = null;
          } else {
            this.sourceOfFundsPaymentDay = in.readInt();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.primarySourceOfFundsIndicator = null;
          } else {
            this.primarySourceOfFundsIndicator = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










