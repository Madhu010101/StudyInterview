/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Employment extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7347183886354588004L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Employment\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"annualGrossIncomeAmount\",\"type\":[\"null\",{\"type\":\"double\",\"java-class\":\"java.lang.Double\"}]},{\"name\":\"employerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentEndDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentStartDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"occupationEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentStatusEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"primaryEmploymentIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nettIncomeAmount\",\"type\":[\"null\",{\"type\":\"double\",\"java-class\":\"java.lang.Double\"}]},{\"name\":\"nettIncomeCurrencyEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nettIncomeFrequencyEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nettIncomePaymentDay\",\"type\":[\"null\",{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Employment> ENCODER =
      new BinaryMessageEncoder<Employment>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Employment> DECODER =
      new BinaryMessageDecoder<Employment>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Employment> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Employment> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Employment> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Employment>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Employment to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Employment from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Employment instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Employment fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.Double annualGrossIncomeAmount;
  @Deprecated public java.lang.String employerName;
  @Deprecated public java.lang.String employmentEndDate;
  @Deprecated public java.lang.String employmentStartDate;
  @Deprecated public java.lang.String occupationEntpsTypeCode;
  @Deprecated public java.lang.String employmentStatusEntpsTypeCode;
  @Deprecated public java.lang.String employmentActiveIndicator;
  @Deprecated public java.lang.String primaryEmploymentIndicator;
  @Deprecated public java.lang.Double nettIncomeAmount;
  @Deprecated public java.lang.String nettIncomeCurrencyEntpsTypeCode;
  @Deprecated public java.lang.String nettIncomeFrequencyEntpsTypeCode;
  @Deprecated public java.lang.Integer nettIncomePaymentDay;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Employment() {}

  /**
   * All-args constructor.
   * @param annualGrossIncomeAmount The new value for annualGrossIncomeAmount
   * @param employerName The new value for employerName
   * @param employmentEndDate The new value for employmentEndDate
   * @param employmentStartDate The new value for employmentStartDate
   * @param occupationEntpsTypeCode The new value for occupationEntpsTypeCode
   * @param employmentStatusEntpsTypeCode The new value for employmentStatusEntpsTypeCode
   * @param employmentActiveIndicator The new value for employmentActiveIndicator
   * @param primaryEmploymentIndicator The new value for primaryEmploymentIndicator
   * @param nettIncomeAmount The new value for nettIncomeAmount
   * @param nettIncomeCurrencyEntpsTypeCode The new value for nettIncomeCurrencyEntpsTypeCode
   * @param nettIncomeFrequencyEntpsTypeCode The new value for nettIncomeFrequencyEntpsTypeCode
   * @param nettIncomePaymentDay The new value for nettIncomePaymentDay
   */
  public Employment(java.lang.Double annualGrossIncomeAmount, java.lang.String employerName, java.lang.String employmentEndDate, java.lang.String employmentStartDate, java.lang.String occupationEntpsTypeCode, java.lang.String employmentStatusEntpsTypeCode, java.lang.String employmentActiveIndicator, java.lang.String primaryEmploymentIndicator, java.lang.Double nettIncomeAmount, java.lang.String nettIncomeCurrencyEntpsTypeCode, java.lang.String nettIncomeFrequencyEntpsTypeCode, java.lang.Integer nettIncomePaymentDay) {
    this.annualGrossIncomeAmount = annualGrossIncomeAmount;
    this.employerName = employerName;
    this.employmentEndDate = employmentEndDate;
    this.employmentStartDate = employmentStartDate;
    this.occupationEntpsTypeCode = occupationEntpsTypeCode;
    this.employmentStatusEntpsTypeCode = employmentStatusEntpsTypeCode;
    this.employmentActiveIndicator = employmentActiveIndicator;
    this.primaryEmploymentIndicator = primaryEmploymentIndicator;
    this.nettIncomeAmount = nettIncomeAmount;
    this.nettIncomeCurrencyEntpsTypeCode = nettIncomeCurrencyEntpsTypeCode;
    this.nettIncomeFrequencyEntpsTypeCode = nettIncomeFrequencyEntpsTypeCode;
    this.nettIncomePaymentDay = nettIncomePaymentDay;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return annualGrossIncomeAmount;
    case 1: return employerName;
    case 2: return employmentEndDate;
    case 3: return employmentStartDate;
    case 4: return occupationEntpsTypeCode;
    case 5: return employmentStatusEntpsTypeCode;
    case 6: return employmentActiveIndicator;
    case 7: return primaryEmploymentIndicator;
    case 8: return nettIncomeAmount;
    case 9: return nettIncomeCurrencyEntpsTypeCode;
    case 10: return nettIncomeFrequencyEntpsTypeCode;
    case 11: return nettIncomePaymentDay;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: annualGrossIncomeAmount = (java.lang.Double)value$; break;
    case 1: employerName = value$ != null ? value$.toString() : null; break;
    case 2: employmentEndDate = value$ != null ? value$.toString() : null; break;
    case 3: employmentStartDate = value$ != null ? value$.toString() : null; break;
    case 4: occupationEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 5: employmentStatusEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 6: employmentActiveIndicator = value$ != null ? value$.toString() : null; break;
    case 7: primaryEmploymentIndicator = value$ != null ? value$.toString() : null; break;
    case 8: nettIncomeAmount = (java.lang.Double)value$; break;
    case 9: nettIncomeCurrencyEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 10: nettIncomeFrequencyEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 11: nettIncomePaymentDay = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'annualGrossIncomeAmount' field.
   * @return The value of the 'annualGrossIncomeAmount' field.
   */
  public java.lang.Double getAnnualGrossIncomeAmount() {
    return annualGrossIncomeAmount;
  }


  /**
   * Sets the value of the 'annualGrossIncomeAmount' field.
   * @param value the value to set.
   */
  public void setAnnualGrossIncomeAmount(java.lang.Double value) {
    this.annualGrossIncomeAmount = value;
  }

  /**
   * Gets the value of the 'employerName' field.
   * @return The value of the 'employerName' field.
   */
  public java.lang.String getEmployerName() {
    return employerName;
  }


  /**
   * Sets the value of the 'employerName' field.
   * @param value the value to set.
   */
  public void setEmployerName(java.lang.String value) {
    this.employerName = value;
  }

  /**
   * Gets the value of the 'employmentEndDate' field.
   * @return The value of the 'employmentEndDate' field.
   */
  public java.lang.String getEmploymentEndDate() {
    return employmentEndDate;
  }


  /**
   * Sets the value of the 'employmentEndDate' field.
   * @param value the value to set.
   */
  public void setEmploymentEndDate(java.lang.String value) {
    this.employmentEndDate = value;
  }

  /**
   * Gets the value of the 'employmentStartDate' field.
   * @return The value of the 'employmentStartDate' field.
   */
  public java.lang.String getEmploymentStartDate() {
    return employmentStartDate;
  }


  /**
   * Sets the value of the 'employmentStartDate' field.
   * @param value the value to set.
   */
  public void setEmploymentStartDate(java.lang.String value) {
    this.employmentStartDate = value;
  }

  /**
   * Gets the value of the 'occupationEntpsTypeCode' field.
   * @return The value of the 'occupationEntpsTypeCode' field.
   */
  public java.lang.String getOccupationEntpsTypeCode() {
    return occupationEntpsTypeCode;
  }


  /**
   * Sets the value of the 'occupationEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setOccupationEntpsTypeCode(java.lang.String value) {
    this.occupationEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'employmentStatusEntpsTypeCode' field.
   * @return The value of the 'employmentStatusEntpsTypeCode' field.
   */
  public java.lang.String getEmploymentStatusEntpsTypeCode() {
    return employmentStatusEntpsTypeCode;
  }


  /**
   * Sets the value of the 'employmentStatusEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setEmploymentStatusEntpsTypeCode(java.lang.String value) {
    this.employmentStatusEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'employmentActiveIndicator' field.
   * @return The value of the 'employmentActiveIndicator' field.
   */
  public java.lang.String getEmploymentActiveIndicator() {
    return employmentActiveIndicator;
  }


  /**
   * Sets the value of the 'employmentActiveIndicator' field.
   * @param value the value to set.
   */
  public void setEmploymentActiveIndicator(java.lang.String value) {
    this.employmentActiveIndicator = value;
  }

  /**
   * Gets the value of the 'primaryEmploymentIndicator' field.
   * @return The value of the 'primaryEmploymentIndicator' field.
   */
  public java.lang.String getPrimaryEmploymentIndicator() {
    return primaryEmploymentIndicator;
  }


  /**
   * Sets the value of the 'primaryEmploymentIndicator' field.
   * @param value the value to set.
   */
  public void setPrimaryEmploymentIndicator(java.lang.String value) {
    this.primaryEmploymentIndicator = value;
  }

  /**
   * Gets the value of the 'nettIncomeAmount' field.
   * @return The value of the 'nettIncomeAmount' field.
   */
  public java.lang.Double getNettIncomeAmount() {
    return nettIncomeAmount;
  }


  /**
   * Sets the value of the 'nettIncomeAmount' field.
   * @param value the value to set.
   */
  public void setNettIncomeAmount(java.lang.Double value) {
    this.nettIncomeAmount = value;
  }

  /**
   * Gets the value of the 'nettIncomeCurrencyEntpsTypeCode' field.
   * @return The value of the 'nettIncomeCurrencyEntpsTypeCode' field.
   */
  public java.lang.String getNettIncomeCurrencyEntpsTypeCode() {
    return nettIncomeCurrencyEntpsTypeCode;
  }


  /**
   * Sets the value of the 'nettIncomeCurrencyEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setNettIncomeCurrencyEntpsTypeCode(java.lang.String value) {
    this.nettIncomeCurrencyEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'nettIncomeFrequencyEntpsTypeCode' field.
   * @return The value of the 'nettIncomeFrequencyEntpsTypeCode' field.
   */
  public java.lang.String getNettIncomeFrequencyEntpsTypeCode() {
    return nettIncomeFrequencyEntpsTypeCode;
  }


  /**
   * Sets the value of the 'nettIncomeFrequencyEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setNettIncomeFrequencyEntpsTypeCode(java.lang.String value) {
    this.nettIncomeFrequencyEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'nettIncomePaymentDay' field.
   * @return The value of the 'nettIncomePaymentDay' field.
   */
  public java.lang.Integer getNettIncomePaymentDay() {
    return nettIncomePaymentDay;
  }


  /**
   * Sets the value of the 'nettIncomePaymentDay' field.
   * @param value the value to set.
   */
  public void setNettIncomePaymentDay(java.lang.Integer value) {
    this.nettIncomePaymentDay = value;
  }

  /**
   * Creates a new Employment RecordBuilder.
   * @return A new Employment RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Employment.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.Employment.Builder();
  }

  /**
   * Creates a new Employment RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Employment RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Employment.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Employment.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Employment.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Employment.Builder(other);
    }
  }

  /**
   * Creates a new Employment RecordBuilder by copying an existing Employment instance.
   * @param other The existing instance to copy.
   * @return A new Employment RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Employment.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Employment other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Employment.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Employment.Builder(other);
    }
  }

  /**
   * RecordBuilder for Employment instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Employment>
    implements org.apache.avro.data.RecordBuilder<Employment> {

    private java.lang.Double annualGrossIncomeAmount;
    private java.lang.String employerName;
    private java.lang.String employmentEndDate;
    private java.lang.String employmentStartDate;
    private java.lang.String occupationEntpsTypeCode;
    private java.lang.String employmentStatusEntpsTypeCode;
    private java.lang.String employmentActiveIndicator;
    private java.lang.String primaryEmploymentIndicator;
    private java.lang.Double nettIncomeAmount;
    private java.lang.String nettIncomeCurrencyEntpsTypeCode;
    private java.lang.String nettIncomeFrequencyEntpsTypeCode;
    private java.lang.Integer nettIncomePaymentDay;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Employment.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.annualGrossIncomeAmount)) {
        this.annualGrossIncomeAmount = data().deepCopy(fields()[0].schema(), other.annualGrossIncomeAmount);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.employerName)) {
        this.employerName = data().deepCopy(fields()[1].schema(), other.employerName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.employmentEndDate)) {
        this.employmentEndDate = data().deepCopy(fields()[2].schema(), other.employmentEndDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.employmentStartDate)) {
        this.employmentStartDate = data().deepCopy(fields()[3].schema(), other.employmentStartDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.occupationEntpsTypeCode)) {
        this.occupationEntpsTypeCode = data().deepCopy(fields()[4].schema(), other.occupationEntpsTypeCode);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.employmentStatusEntpsTypeCode)) {
        this.employmentStatusEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.employmentStatusEntpsTypeCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.employmentActiveIndicator)) {
        this.employmentActiveIndicator = data().deepCopy(fields()[6].schema(), other.employmentActiveIndicator);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.primaryEmploymentIndicator)) {
        this.primaryEmploymentIndicator = data().deepCopy(fields()[7].schema(), other.primaryEmploymentIndicator);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.nettIncomeAmount)) {
        this.nettIncomeAmount = data().deepCopy(fields()[8].schema(), other.nettIncomeAmount);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.nettIncomeCurrencyEntpsTypeCode)) {
        this.nettIncomeCurrencyEntpsTypeCode = data().deepCopy(fields()[9].schema(), other.nettIncomeCurrencyEntpsTypeCode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.nettIncomeFrequencyEntpsTypeCode)) {
        this.nettIncomeFrequencyEntpsTypeCode = data().deepCopy(fields()[10].schema(), other.nettIncomeFrequencyEntpsTypeCode);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.nettIncomePaymentDay)) {
        this.nettIncomePaymentDay = data().deepCopy(fields()[11].schema(), other.nettIncomePaymentDay);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
    }

    /**
     * Creates a Builder by copying an existing Employment instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Employment other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.annualGrossIncomeAmount)) {
        this.annualGrossIncomeAmount = data().deepCopy(fields()[0].schema(), other.annualGrossIncomeAmount);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.employerName)) {
        this.employerName = data().deepCopy(fields()[1].schema(), other.employerName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.employmentEndDate)) {
        this.employmentEndDate = data().deepCopy(fields()[2].schema(), other.employmentEndDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.employmentStartDate)) {
        this.employmentStartDate = data().deepCopy(fields()[3].schema(), other.employmentStartDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.occupationEntpsTypeCode)) {
        this.occupationEntpsTypeCode = data().deepCopy(fields()[4].schema(), other.occupationEntpsTypeCode);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.employmentStatusEntpsTypeCode)) {
        this.employmentStatusEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.employmentStatusEntpsTypeCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.employmentActiveIndicator)) {
        this.employmentActiveIndicator = data().deepCopy(fields()[6].schema(), other.employmentActiveIndicator);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.primaryEmploymentIndicator)) {
        this.primaryEmploymentIndicator = data().deepCopy(fields()[7].schema(), other.primaryEmploymentIndicator);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.nettIncomeAmount)) {
        this.nettIncomeAmount = data().deepCopy(fields()[8].schema(), other.nettIncomeAmount);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.nettIncomeCurrencyEntpsTypeCode)) {
        this.nettIncomeCurrencyEntpsTypeCode = data().deepCopy(fields()[9].schema(), other.nettIncomeCurrencyEntpsTypeCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.nettIncomeFrequencyEntpsTypeCode)) {
        this.nettIncomeFrequencyEntpsTypeCode = data().deepCopy(fields()[10].schema(), other.nettIncomeFrequencyEntpsTypeCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.nettIncomePaymentDay)) {
        this.nettIncomePaymentDay = data().deepCopy(fields()[11].schema(), other.nettIncomePaymentDay);
        fieldSetFlags()[11] = true;
      }
    }

    /**
      * Gets the value of the 'annualGrossIncomeAmount' field.
      * @return The value.
      */
    public java.lang.Double getAnnualGrossIncomeAmount() {
      return annualGrossIncomeAmount;
    }


    /**
      * Sets the value of the 'annualGrossIncomeAmount' field.
      * @param value The value of 'annualGrossIncomeAmount'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setAnnualGrossIncomeAmount(java.lang.Double value) {
      validate(fields()[0], value);
      this.annualGrossIncomeAmount = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'annualGrossIncomeAmount' field has been set.
      * @return True if the 'annualGrossIncomeAmount' field has been set, false otherwise.
      */
    public boolean hasAnnualGrossIncomeAmount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'annualGrossIncomeAmount' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearAnnualGrossIncomeAmount() {
      annualGrossIncomeAmount = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'employerName' field.
      * @return The value.
      */
    public java.lang.String getEmployerName() {
      return employerName;
    }


    /**
      * Sets the value of the 'employerName' field.
      * @param value The value of 'employerName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setEmployerName(java.lang.String value) {
      validate(fields()[1], value);
      this.employerName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'employerName' field has been set.
      * @return True if the 'employerName' field has been set, false otherwise.
      */
    public boolean hasEmployerName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'employerName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearEmployerName() {
      employerName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'employmentEndDate' field.
      * @return The value.
      */
    public java.lang.String getEmploymentEndDate() {
      return employmentEndDate;
    }


    /**
      * Sets the value of the 'employmentEndDate' field.
      * @param value The value of 'employmentEndDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setEmploymentEndDate(java.lang.String value) {
      validate(fields()[2], value);
      this.employmentEndDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'employmentEndDate' field has been set.
      * @return True if the 'employmentEndDate' field has been set, false otherwise.
      */
    public boolean hasEmploymentEndDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'employmentEndDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearEmploymentEndDate() {
      employmentEndDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'employmentStartDate' field.
      * @return The value.
      */
    public java.lang.String getEmploymentStartDate() {
      return employmentStartDate;
    }


    /**
      * Sets the value of the 'employmentStartDate' field.
      * @param value The value of 'employmentStartDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setEmploymentStartDate(java.lang.String value) {
      validate(fields()[3], value);
      this.employmentStartDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'employmentStartDate' field has been set.
      * @return True if the 'employmentStartDate' field has been set, false otherwise.
      */
    public boolean hasEmploymentStartDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'employmentStartDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearEmploymentStartDate() {
      employmentStartDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'occupationEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getOccupationEntpsTypeCode() {
      return occupationEntpsTypeCode;
    }


    /**
      * Sets the value of the 'occupationEntpsTypeCode' field.
      * @param value The value of 'occupationEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setOccupationEntpsTypeCode(java.lang.String value) {
      validate(fields()[4], value);
      this.occupationEntpsTypeCode = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'occupationEntpsTypeCode' field has been set.
      * @return True if the 'occupationEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasOccupationEntpsTypeCode() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'occupationEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearOccupationEntpsTypeCode() {
      occupationEntpsTypeCode = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'employmentStatusEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getEmploymentStatusEntpsTypeCode() {
      return employmentStatusEntpsTypeCode;
    }


    /**
      * Sets the value of the 'employmentStatusEntpsTypeCode' field.
      * @param value The value of 'employmentStatusEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setEmploymentStatusEntpsTypeCode(java.lang.String value) {
      validate(fields()[5], value);
      this.employmentStatusEntpsTypeCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'employmentStatusEntpsTypeCode' field has been set.
      * @return True if the 'employmentStatusEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasEmploymentStatusEntpsTypeCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'employmentStatusEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearEmploymentStatusEntpsTypeCode() {
      employmentStatusEntpsTypeCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'employmentActiveIndicator' field.
      * @return The value.
      */
    public java.lang.String getEmploymentActiveIndicator() {
      return employmentActiveIndicator;
    }


    /**
      * Sets the value of the 'employmentActiveIndicator' field.
      * @param value The value of 'employmentActiveIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setEmploymentActiveIndicator(java.lang.String value) {
      validate(fields()[6], value);
      this.employmentActiveIndicator = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'employmentActiveIndicator' field has been set.
      * @return True if the 'employmentActiveIndicator' field has been set, false otherwise.
      */
    public boolean hasEmploymentActiveIndicator() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'employmentActiveIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearEmploymentActiveIndicator() {
      employmentActiveIndicator = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'primaryEmploymentIndicator' field.
      * @return The value.
      */
    public java.lang.String getPrimaryEmploymentIndicator() {
      return primaryEmploymentIndicator;
    }


    /**
      * Sets the value of the 'primaryEmploymentIndicator' field.
      * @param value The value of 'primaryEmploymentIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setPrimaryEmploymentIndicator(java.lang.String value) {
      validate(fields()[7], value);
      this.primaryEmploymentIndicator = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'primaryEmploymentIndicator' field has been set.
      * @return True if the 'primaryEmploymentIndicator' field has been set, false otherwise.
      */
    public boolean hasPrimaryEmploymentIndicator() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'primaryEmploymentIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearPrimaryEmploymentIndicator() {
      primaryEmploymentIndicator = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'nettIncomeAmount' field.
      * @return The value.
      */
    public java.lang.Double getNettIncomeAmount() {
      return nettIncomeAmount;
    }


    /**
      * Sets the value of the 'nettIncomeAmount' field.
      * @param value The value of 'nettIncomeAmount'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setNettIncomeAmount(java.lang.Double value) {
      validate(fields()[8], value);
      this.nettIncomeAmount = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'nettIncomeAmount' field has been set.
      * @return True if the 'nettIncomeAmount' field has been set, false otherwise.
      */
    public boolean hasNettIncomeAmount() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'nettIncomeAmount' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearNettIncomeAmount() {
      nettIncomeAmount = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'nettIncomeCurrencyEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getNettIncomeCurrencyEntpsTypeCode() {
      return nettIncomeCurrencyEntpsTypeCode;
    }


    /**
      * Sets the value of the 'nettIncomeCurrencyEntpsTypeCode' field.
      * @param value The value of 'nettIncomeCurrencyEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setNettIncomeCurrencyEntpsTypeCode(java.lang.String value) {
      validate(fields()[9], value);
      this.nettIncomeCurrencyEntpsTypeCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'nettIncomeCurrencyEntpsTypeCode' field has been set.
      * @return True if the 'nettIncomeCurrencyEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasNettIncomeCurrencyEntpsTypeCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'nettIncomeCurrencyEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearNettIncomeCurrencyEntpsTypeCode() {
      nettIncomeCurrencyEntpsTypeCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'nettIncomeFrequencyEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getNettIncomeFrequencyEntpsTypeCode() {
      return nettIncomeFrequencyEntpsTypeCode;
    }


    /**
      * Sets the value of the 'nettIncomeFrequencyEntpsTypeCode' field.
      * @param value The value of 'nettIncomeFrequencyEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setNettIncomeFrequencyEntpsTypeCode(java.lang.String value) {
      validate(fields()[10], value);
      this.nettIncomeFrequencyEntpsTypeCode = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'nettIncomeFrequencyEntpsTypeCode' field has been set.
      * @return True if the 'nettIncomeFrequencyEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasNettIncomeFrequencyEntpsTypeCode() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'nettIncomeFrequencyEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearNettIncomeFrequencyEntpsTypeCode() {
      nettIncomeFrequencyEntpsTypeCode = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'nettIncomePaymentDay' field.
      * @return The value.
      */
    public java.lang.Integer getNettIncomePaymentDay() {
      return nettIncomePaymentDay;
    }


    /**
      * Sets the value of the 'nettIncomePaymentDay' field.
      * @param value The value of 'nettIncomePaymentDay'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder setNettIncomePaymentDay(java.lang.Integer value) {
      validate(fields()[11], value);
      this.nettIncomePaymentDay = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'nettIncomePaymentDay' field has been set.
      * @return True if the 'nettIncomePaymentDay' field has been set, false otherwise.
      */
    public boolean hasNettIncomePaymentDay() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'nettIncomePaymentDay' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Employment.Builder clearNettIncomePaymentDay() {
      nettIncomePaymentDay = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Employment build() {
      try {
        Employment record = new Employment();
        record.annualGrossIncomeAmount = fieldSetFlags()[0] ? this.annualGrossIncomeAmount : (java.lang.Double) defaultValue(fields()[0]);
        record.employerName = fieldSetFlags()[1] ? this.employerName : (java.lang.String) defaultValue(fields()[1]);
        record.employmentEndDate = fieldSetFlags()[2] ? this.employmentEndDate : (java.lang.String) defaultValue(fields()[2]);
        record.employmentStartDate = fieldSetFlags()[3] ? this.employmentStartDate : (java.lang.String) defaultValue(fields()[3]);
        record.occupationEntpsTypeCode = fieldSetFlags()[4] ? this.occupationEntpsTypeCode : (java.lang.String) defaultValue(fields()[4]);
        record.employmentStatusEntpsTypeCode = fieldSetFlags()[5] ? this.employmentStatusEntpsTypeCode : (java.lang.String) defaultValue(fields()[5]);
        record.employmentActiveIndicator = fieldSetFlags()[6] ? this.employmentActiveIndicator : (java.lang.String) defaultValue(fields()[6]);
        record.primaryEmploymentIndicator = fieldSetFlags()[7] ? this.primaryEmploymentIndicator : (java.lang.String) defaultValue(fields()[7]);
        record.nettIncomeAmount = fieldSetFlags()[8] ? this.nettIncomeAmount : (java.lang.Double) defaultValue(fields()[8]);
        record.nettIncomeCurrencyEntpsTypeCode = fieldSetFlags()[9] ? this.nettIncomeCurrencyEntpsTypeCode : (java.lang.String) defaultValue(fields()[9]);
        record.nettIncomeFrequencyEntpsTypeCode = fieldSetFlags()[10] ? this.nettIncomeFrequencyEntpsTypeCode : (java.lang.String) defaultValue(fields()[10]);
        record.nettIncomePaymentDay = fieldSetFlags()[11] ? this.nettIncomePaymentDay : (java.lang.Integer) defaultValue(fields()[11]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Employment>
    WRITER$ = (org.apache.avro.io.DatumWriter<Employment>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Employment>
    READER$ = (org.apache.avro.io.DatumReader<Employment>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.annualGrossIncomeAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.annualGrossIncomeAmount);
    }

    if (this.employerName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.employerName);
    }

    if (this.employmentEndDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.employmentEndDate);
    }

    if (this.employmentStartDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.employmentStartDate);
    }

    if (this.occupationEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.occupationEntpsTypeCode);
    }

    if (this.employmentStatusEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.employmentStatusEntpsTypeCode);
    }

    if (this.employmentActiveIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.employmentActiveIndicator);
    }

    if (this.primaryEmploymentIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.primaryEmploymentIndicator);
    }

    if (this.nettIncomeAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.nettIncomeAmount);
    }

    if (this.nettIncomeCurrencyEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nettIncomeCurrencyEntpsTypeCode);
    }

    if (this.nettIncomeFrequencyEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nettIncomeFrequencyEntpsTypeCode);
    }

    if (this.nettIncomePaymentDay == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.nettIncomePaymentDay);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.annualGrossIncomeAmount = null;
      } else {
        this.annualGrossIncomeAmount = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.employerName = null;
      } else {
        this.employerName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.employmentEndDate = null;
      } else {
        this.employmentEndDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.employmentStartDate = null;
      } else {
        this.employmentStartDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.occupationEntpsTypeCode = null;
      } else {
        this.occupationEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.employmentStatusEntpsTypeCode = null;
      } else {
        this.employmentStatusEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.employmentActiveIndicator = null;
      } else {
        this.employmentActiveIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.primaryEmploymentIndicator = null;
      } else {
        this.primaryEmploymentIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nettIncomeAmount = null;
      } else {
        this.nettIncomeAmount = in.readDouble();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nettIncomeCurrencyEntpsTypeCode = null;
      } else {
        this.nettIncomeCurrencyEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nettIncomeFrequencyEntpsTypeCode = null;
      } else {
        this.nettIncomeFrequencyEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nettIncomePaymentDay = null;
      } else {
        this.nettIncomePaymentDay = in.readInt();
      }

    } else {
      for (int i = 0; i < 12; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.annualGrossIncomeAmount = null;
          } else {
            this.annualGrossIncomeAmount = in.readDouble();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.employerName = null;
          } else {
            this.employerName = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.employmentEndDate = null;
          } else {
            this.employmentEndDate = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.employmentStartDate = null;
          } else {
            this.employmentStartDate = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.occupationEntpsTypeCode = null;
          } else {
            this.occupationEntpsTypeCode = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.employmentStatusEntpsTypeCode = null;
          } else {
            this.employmentStatusEntpsTypeCode = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.employmentActiveIndicator = null;
          } else {
            this.employmentActiveIndicator = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.primaryEmploymentIndicator = null;
          } else {
            this.primaryEmploymentIndicator = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nettIncomeAmount = null;
          } else {
            this.nettIncomeAmount = in.readDouble();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nettIncomeCurrencyEntpsTypeCode = null;
          } else {
            this.nettIncomeCurrencyEntpsTypeCode = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nettIncomeFrequencyEntpsTypeCode = null;
          } else {
            this.nettIncomeFrequencyEntpsTypeCode = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nettIncomePaymentDay = null;
          } else {
            this.nettIncomePaymentDay = in.readInt();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










