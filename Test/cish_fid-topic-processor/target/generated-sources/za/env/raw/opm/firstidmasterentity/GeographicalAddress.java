/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class GeographicalAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 8061216826737152983L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"GeographicalAddress\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"addressEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressLine1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressLine2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"buildingName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"careOfName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cityName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"complexName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"countryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"floorNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postalAreaNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"stateDistrictProvinceEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"stateDistrictProvinceName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"streetName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"streetNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subAreaName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"suburbName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"suiteName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unitNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"googlePlusCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<GeographicalAddress> ENCODER =
      new BinaryMessageEncoder<GeographicalAddress>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<GeographicalAddress> DECODER =
      new BinaryMessageDecoder<GeographicalAddress>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<GeographicalAddress> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<GeographicalAddress> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<GeographicalAddress> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<GeographicalAddress>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this GeographicalAddress to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a GeographicalAddress from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a GeographicalAddress instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static GeographicalAddress fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String addressEntpsTypeCode;
  @Deprecated public java.lang.String addressLine1;
  @Deprecated public java.lang.String addressLine2;
  @Deprecated public java.lang.String buildingName;
  @Deprecated public java.lang.String careOfName;
  @Deprecated public java.lang.String cityName;
  @Deprecated public java.lang.String complexName;
  @Deprecated public java.lang.String countryEntpsCode;
  @Deprecated public java.lang.String floorNumber;
  @Deprecated public java.lang.String postalAreaNumber;
  @Deprecated public java.lang.String stateDistrictProvinceEntpsTypeCode;
  @Deprecated public java.lang.String stateDistrictProvinceName;
  @Deprecated public java.lang.String streetName;
  @Deprecated public java.lang.String streetNumber;
  @Deprecated public java.lang.String subAreaName;
  @Deprecated public java.lang.String suburbName;
  @Deprecated public java.lang.String suiteName;
  @Deprecated public java.lang.String unitNumber;
  @Deprecated public java.lang.String googlePlusCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public GeographicalAddress() {}

  /**
   * All-args constructor.
   * @param addressEntpsTypeCode The new value for addressEntpsTypeCode
   * @param addressLine1 The new value for addressLine1
   * @param addressLine2 The new value for addressLine2
   * @param buildingName The new value for buildingName
   * @param careOfName The new value for careOfName
   * @param cityName The new value for cityName
   * @param complexName The new value for complexName
   * @param countryEntpsCode The new value for countryEntpsCode
   * @param floorNumber The new value for floorNumber
   * @param postalAreaNumber The new value for postalAreaNumber
   * @param stateDistrictProvinceEntpsTypeCode The new value for stateDistrictProvinceEntpsTypeCode
   * @param stateDistrictProvinceName The new value for stateDistrictProvinceName
   * @param streetName The new value for streetName
   * @param streetNumber The new value for streetNumber
   * @param subAreaName The new value for subAreaName
   * @param suburbName The new value for suburbName
   * @param suiteName The new value for suiteName
   * @param unitNumber The new value for unitNumber
   * @param googlePlusCode The new value for googlePlusCode
   */
  public GeographicalAddress(java.lang.String addressEntpsTypeCode, java.lang.String addressLine1, java.lang.String addressLine2, java.lang.String buildingName, java.lang.String careOfName, java.lang.String cityName, java.lang.String complexName, java.lang.String countryEntpsCode, java.lang.String floorNumber, java.lang.String postalAreaNumber, java.lang.String stateDistrictProvinceEntpsTypeCode, java.lang.String stateDistrictProvinceName, java.lang.String streetName, java.lang.String streetNumber, java.lang.String subAreaName, java.lang.String suburbName, java.lang.String suiteName, java.lang.String unitNumber, java.lang.String googlePlusCode) {
    this.addressEntpsTypeCode = addressEntpsTypeCode;
    this.addressLine1 = addressLine1;
    this.addressLine2 = addressLine2;
    this.buildingName = buildingName;
    this.careOfName = careOfName;
    this.cityName = cityName;
    this.complexName = complexName;
    this.countryEntpsCode = countryEntpsCode;
    this.floorNumber = floorNumber;
    this.postalAreaNumber = postalAreaNumber;
    this.stateDistrictProvinceEntpsTypeCode = stateDistrictProvinceEntpsTypeCode;
    this.stateDistrictProvinceName = stateDistrictProvinceName;
    this.streetName = streetName;
    this.streetNumber = streetNumber;
    this.subAreaName = subAreaName;
    this.suburbName = suburbName;
    this.suiteName = suiteName;
    this.unitNumber = unitNumber;
    this.googlePlusCode = googlePlusCode;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return addressEntpsTypeCode;
    case 1: return addressLine1;
    case 2: return addressLine2;
    case 3: return buildingName;
    case 4: return careOfName;
    case 5: return cityName;
    case 6: return complexName;
    case 7: return countryEntpsCode;
    case 8: return floorNumber;
    case 9: return postalAreaNumber;
    case 10: return stateDistrictProvinceEntpsTypeCode;
    case 11: return stateDistrictProvinceName;
    case 12: return streetName;
    case 13: return streetNumber;
    case 14: return subAreaName;
    case 15: return suburbName;
    case 16: return suiteName;
    case 17: return unitNumber;
    case 18: return googlePlusCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: addressEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 1: addressLine1 = value$ != null ? value$.toString() : null; break;
    case 2: addressLine2 = value$ != null ? value$.toString() : null; break;
    case 3: buildingName = value$ != null ? value$.toString() : null; break;
    case 4: careOfName = value$ != null ? value$.toString() : null; break;
    case 5: cityName = value$ != null ? value$.toString() : null; break;
    case 6: complexName = value$ != null ? value$.toString() : null; break;
    case 7: countryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 8: floorNumber = value$ != null ? value$.toString() : null; break;
    case 9: postalAreaNumber = value$ != null ? value$.toString() : null; break;
    case 10: stateDistrictProvinceEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 11: stateDistrictProvinceName = value$ != null ? value$.toString() : null; break;
    case 12: streetName = value$ != null ? value$.toString() : null; break;
    case 13: streetNumber = value$ != null ? value$.toString() : null; break;
    case 14: subAreaName = value$ != null ? value$.toString() : null; break;
    case 15: suburbName = value$ != null ? value$.toString() : null; break;
    case 16: suiteName = value$ != null ? value$.toString() : null; break;
    case 17: unitNumber = value$ != null ? value$.toString() : null; break;
    case 18: googlePlusCode = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'addressEntpsTypeCode' field.
   * @return The value of the 'addressEntpsTypeCode' field.
   */
  public java.lang.String getAddressEntpsTypeCode() {
    return addressEntpsTypeCode;
  }


  /**
   * Sets the value of the 'addressEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setAddressEntpsTypeCode(java.lang.String value) {
    this.addressEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'addressLine1' field.
   * @return The value of the 'addressLine1' field.
   */
  public java.lang.String getAddressLine1() {
    return addressLine1;
  }


  /**
   * Sets the value of the 'addressLine1' field.
   * @param value the value to set.
   */
  public void setAddressLine1(java.lang.String value) {
    this.addressLine1 = value;
  }

  /**
   * Gets the value of the 'addressLine2' field.
   * @return The value of the 'addressLine2' field.
   */
  public java.lang.String getAddressLine2() {
    return addressLine2;
  }


  /**
   * Sets the value of the 'addressLine2' field.
   * @param value the value to set.
   */
  public void setAddressLine2(java.lang.String value) {
    this.addressLine2 = value;
  }

  /**
   * Gets the value of the 'buildingName' field.
   * @return The value of the 'buildingName' field.
   */
  public java.lang.String getBuildingName() {
    return buildingName;
  }


  /**
   * Sets the value of the 'buildingName' field.
   * @param value the value to set.
   */
  public void setBuildingName(java.lang.String value) {
    this.buildingName = value;
  }

  /**
   * Gets the value of the 'careOfName' field.
   * @return The value of the 'careOfName' field.
   */
  public java.lang.String getCareOfName() {
    return careOfName;
  }


  /**
   * Sets the value of the 'careOfName' field.
   * @param value the value to set.
   */
  public void setCareOfName(java.lang.String value) {
    this.careOfName = value;
  }

  /**
   * Gets the value of the 'cityName' field.
   * @return The value of the 'cityName' field.
   */
  public java.lang.String getCityName() {
    return cityName;
  }


  /**
   * Sets the value of the 'cityName' field.
   * @param value the value to set.
   */
  public void setCityName(java.lang.String value) {
    this.cityName = value;
  }

  /**
   * Gets the value of the 'complexName' field.
   * @return The value of the 'complexName' field.
   */
  public java.lang.String getComplexName() {
    return complexName;
  }


  /**
   * Sets the value of the 'complexName' field.
   * @param value the value to set.
   */
  public void setComplexName(java.lang.String value) {
    this.complexName = value;
  }

  /**
   * Gets the value of the 'countryEntpsCode' field.
   * @return The value of the 'countryEntpsCode' field.
   */
  public java.lang.String getCountryEntpsCode() {
    return countryEntpsCode;
  }


  /**
   * Sets the value of the 'countryEntpsCode' field.
   * @param value the value to set.
   */
  public void setCountryEntpsCode(java.lang.String value) {
    this.countryEntpsCode = value;
  }

  /**
   * Gets the value of the 'floorNumber' field.
   * @return The value of the 'floorNumber' field.
   */
  public java.lang.String getFloorNumber() {
    return floorNumber;
  }


  /**
   * Sets the value of the 'floorNumber' field.
   * @param value the value to set.
   */
  public void setFloorNumber(java.lang.String value) {
    this.floorNumber = value;
  }

  /**
   * Gets the value of the 'postalAreaNumber' field.
   * @return The value of the 'postalAreaNumber' field.
   */
  public java.lang.String getPostalAreaNumber() {
    return postalAreaNumber;
  }


  /**
   * Sets the value of the 'postalAreaNumber' field.
   * @param value the value to set.
   */
  public void setPostalAreaNumber(java.lang.String value) {
    this.postalAreaNumber = value;
  }

  /**
   * Gets the value of the 'stateDistrictProvinceEntpsTypeCode' field.
   * @return The value of the 'stateDistrictProvinceEntpsTypeCode' field.
   */
  public java.lang.String getStateDistrictProvinceEntpsTypeCode() {
    return stateDistrictProvinceEntpsTypeCode;
  }


  /**
   * Sets the value of the 'stateDistrictProvinceEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setStateDistrictProvinceEntpsTypeCode(java.lang.String value) {
    this.stateDistrictProvinceEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'stateDistrictProvinceName' field.
   * @return The value of the 'stateDistrictProvinceName' field.
   */
  public java.lang.String getStateDistrictProvinceName() {
    return stateDistrictProvinceName;
  }


  /**
   * Sets the value of the 'stateDistrictProvinceName' field.
   * @param value the value to set.
   */
  public void setStateDistrictProvinceName(java.lang.String value) {
    this.stateDistrictProvinceName = value;
  }

  /**
   * Gets the value of the 'streetName' field.
   * @return The value of the 'streetName' field.
   */
  public java.lang.String getStreetName() {
    return streetName;
  }


  /**
   * Sets the value of the 'streetName' field.
   * @param value the value to set.
   */
  public void setStreetName(java.lang.String value) {
    this.streetName = value;
  }

  /**
   * Gets the value of the 'streetNumber' field.
   * @return The value of the 'streetNumber' field.
   */
  public java.lang.String getStreetNumber() {
    return streetNumber;
  }


  /**
   * Sets the value of the 'streetNumber' field.
   * @param value the value to set.
   */
  public void setStreetNumber(java.lang.String value) {
    this.streetNumber = value;
  }

  /**
   * Gets the value of the 'subAreaName' field.
   * @return The value of the 'subAreaName' field.
   */
  public java.lang.String getSubAreaName() {
    return subAreaName;
  }


  /**
   * Sets the value of the 'subAreaName' field.
   * @param value the value to set.
   */
  public void setSubAreaName(java.lang.String value) {
    this.subAreaName = value;
  }

  /**
   * Gets the value of the 'suburbName' field.
   * @return The value of the 'suburbName' field.
   */
  public java.lang.String getSuburbName() {
    return suburbName;
  }


  /**
   * Sets the value of the 'suburbName' field.
   * @param value the value to set.
   */
  public void setSuburbName(java.lang.String value) {
    this.suburbName = value;
  }

  /**
   * Gets the value of the 'suiteName' field.
   * @return The value of the 'suiteName' field.
   */
  public java.lang.String getSuiteName() {
    return suiteName;
  }


  /**
   * Sets the value of the 'suiteName' field.
   * @param value the value to set.
   */
  public void setSuiteName(java.lang.String value) {
    this.suiteName = value;
  }

  /**
   * Gets the value of the 'unitNumber' field.
   * @return The value of the 'unitNumber' field.
   */
  public java.lang.String getUnitNumber() {
    return unitNumber;
  }


  /**
   * Sets the value of the 'unitNumber' field.
   * @param value the value to set.
   */
  public void setUnitNumber(java.lang.String value) {
    this.unitNumber = value;
  }

  /**
   * Gets the value of the 'googlePlusCode' field.
   * @return The value of the 'googlePlusCode' field.
   */
  public java.lang.String getGooglePlusCode() {
    return googlePlusCode;
  }


  /**
   * Sets the value of the 'googlePlusCode' field.
   * @param value the value to set.
   */
  public void setGooglePlusCode(java.lang.String value) {
    this.googlePlusCode = value;
  }

  /**
   * Creates a new GeographicalAddress RecordBuilder.
   * @return A new GeographicalAddress RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder();
  }

  /**
   * Creates a new GeographicalAddress RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new GeographicalAddress RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder newBuilder(za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder(other);
    }
  }

  /**
   * Creates a new GeographicalAddress RecordBuilder by copying an existing GeographicalAddress instance.
   * @param other The existing instance to copy.
   * @return A new GeographicalAddress RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder newBuilder(za.env.raw.opm.firstidmasterentity.GeographicalAddress other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder(other);
    }
  }

  /**
   * RecordBuilder for GeographicalAddress instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<GeographicalAddress>
    implements org.apache.avro.data.RecordBuilder<GeographicalAddress> {

    private java.lang.String addressEntpsTypeCode;
    private java.lang.String addressLine1;
    private java.lang.String addressLine2;
    private java.lang.String buildingName;
    private java.lang.String careOfName;
    private java.lang.String cityName;
    private java.lang.String complexName;
    private java.lang.String countryEntpsCode;
    private java.lang.String floorNumber;
    private java.lang.String postalAreaNumber;
    private java.lang.String stateDistrictProvinceEntpsTypeCode;
    private java.lang.String stateDistrictProvinceName;
    private java.lang.String streetName;
    private java.lang.String streetNumber;
    private java.lang.String subAreaName;
    private java.lang.String suburbName;
    private java.lang.String suiteName;
    private java.lang.String unitNumber;
    private java.lang.String googlePlusCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.addressEntpsTypeCode)) {
        this.addressEntpsTypeCode = data().deepCopy(fields()[0].schema(), other.addressEntpsTypeCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.addressLine1)) {
        this.addressLine1 = data().deepCopy(fields()[1].schema(), other.addressLine1);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.addressLine2)) {
        this.addressLine2 = data().deepCopy(fields()[2].schema(), other.addressLine2);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.buildingName)) {
        this.buildingName = data().deepCopy(fields()[3].schema(), other.buildingName);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.careOfName)) {
        this.careOfName = data().deepCopy(fields()[4].schema(), other.careOfName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.cityName)) {
        this.cityName = data().deepCopy(fields()[5].schema(), other.cityName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.complexName)) {
        this.complexName = data().deepCopy(fields()[6].schema(), other.complexName);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.countryEntpsCode)) {
        this.countryEntpsCode = data().deepCopy(fields()[7].schema(), other.countryEntpsCode);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.floorNumber)) {
        this.floorNumber = data().deepCopy(fields()[8].schema(), other.floorNumber);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.postalAreaNumber)) {
        this.postalAreaNumber = data().deepCopy(fields()[9].schema(), other.postalAreaNumber);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.stateDistrictProvinceEntpsTypeCode)) {
        this.stateDistrictProvinceEntpsTypeCode = data().deepCopy(fields()[10].schema(), other.stateDistrictProvinceEntpsTypeCode);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.stateDistrictProvinceName)) {
        this.stateDistrictProvinceName = data().deepCopy(fields()[11].schema(), other.stateDistrictProvinceName);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.streetName)) {
        this.streetName = data().deepCopy(fields()[12].schema(), other.streetName);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.streetNumber)) {
        this.streetNumber = data().deepCopy(fields()[13].schema(), other.streetNumber);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.subAreaName)) {
        this.subAreaName = data().deepCopy(fields()[14].schema(), other.subAreaName);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.suburbName)) {
        this.suburbName = data().deepCopy(fields()[15].schema(), other.suburbName);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.suiteName)) {
        this.suiteName = data().deepCopy(fields()[16].schema(), other.suiteName);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.unitNumber)) {
        this.unitNumber = data().deepCopy(fields()[17].schema(), other.unitNumber);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.googlePlusCode)) {
        this.googlePlusCode = data().deepCopy(fields()[18].schema(), other.googlePlusCode);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
    }

    /**
     * Creates a Builder by copying an existing GeographicalAddress instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.GeographicalAddress other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.addressEntpsTypeCode)) {
        this.addressEntpsTypeCode = data().deepCopy(fields()[0].schema(), other.addressEntpsTypeCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.addressLine1)) {
        this.addressLine1 = data().deepCopy(fields()[1].schema(), other.addressLine1);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.addressLine2)) {
        this.addressLine2 = data().deepCopy(fields()[2].schema(), other.addressLine2);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.buildingName)) {
        this.buildingName = data().deepCopy(fields()[3].schema(), other.buildingName);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.careOfName)) {
        this.careOfName = data().deepCopy(fields()[4].schema(), other.careOfName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.cityName)) {
        this.cityName = data().deepCopy(fields()[5].schema(), other.cityName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.complexName)) {
        this.complexName = data().deepCopy(fields()[6].schema(), other.complexName);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.countryEntpsCode)) {
        this.countryEntpsCode = data().deepCopy(fields()[7].schema(), other.countryEntpsCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.floorNumber)) {
        this.floorNumber = data().deepCopy(fields()[8].schema(), other.floorNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.postalAreaNumber)) {
        this.postalAreaNumber = data().deepCopy(fields()[9].schema(), other.postalAreaNumber);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.stateDistrictProvinceEntpsTypeCode)) {
        this.stateDistrictProvinceEntpsTypeCode = data().deepCopy(fields()[10].schema(), other.stateDistrictProvinceEntpsTypeCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.stateDistrictProvinceName)) {
        this.stateDistrictProvinceName = data().deepCopy(fields()[11].schema(), other.stateDistrictProvinceName);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.streetName)) {
        this.streetName = data().deepCopy(fields()[12].schema(), other.streetName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.streetNumber)) {
        this.streetNumber = data().deepCopy(fields()[13].schema(), other.streetNumber);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.subAreaName)) {
        this.subAreaName = data().deepCopy(fields()[14].schema(), other.subAreaName);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.suburbName)) {
        this.suburbName = data().deepCopy(fields()[15].schema(), other.suburbName);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.suiteName)) {
        this.suiteName = data().deepCopy(fields()[16].schema(), other.suiteName);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.unitNumber)) {
        this.unitNumber = data().deepCopy(fields()[17].schema(), other.unitNumber);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.googlePlusCode)) {
        this.googlePlusCode = data().deepCopy(fields()[18].schema(), other.googlePlusCode);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'addressEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getAddressEntpsTypeCode() {
      return addressEntpsTypeCode;
    }


    /**
      * Sets the value of the 'addressEntpsTypeCode' field.
      * @param value The value of 'addressEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setAddressEntpsTypeCode(java.lang.String value) {
      validate(fields()[0], value);
      this.addressEntpsTypeCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'addressEntpsTypeCode' field has been set.
      * @return True if the 'addressEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasAddressEntpsTypeCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'addressEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearAddressEntpsTypeCode() {
      addressEntpsTypeCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressLine1' field.
      * @return The value.
      */
    public java.lang.String getAddressLine1() {
      return addressLine1;
    }


    /**
      * Sets the value of the 'addressLine1' field.
      * @param value The value of 'addressLine1'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setAddressLine1(java.lang.String value) {
      validate(fields()[1], value);
      this.addressLine1 = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'addressLine1' field has been set.
      * @return True if the 'addressLine1' field has been set, false otherwise.
      */
    public boolean hasAddressLine1() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'addressLine1' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearAddressLine1() {
      addressLine1 = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'addressLine2' field.
      * @return The value.
      */
    public java.lang.String getAddressLine2() {
      return addressLine2;
    }


    /**
      * Sets the value of the 'addressLine2' field.
      * @param value The value of 'addressLine2'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setAddressLine2(java.lang.String value) {
      validate(fields()[2], value);
      this.addressLine2 = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'addressLine2' field has been set.
      * @return True if the 'addressLine2' field has been set, false otherwise.
      */
    public boolean hasAddressLine2() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'addressLine2' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearAddressLine2() {
      addressLine2 = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'buildingName' field.
      * @return The value.
      */
    public java.lang.String getBuildingName() {
      return buildingName;
    }


    /**
      * Sets the value of the 'buildingName' field.
      * @param value The value of 'buildingName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setBuildingName(java.lang.String value) {
      validate(fields()[3], value);
      this.buildingName = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'buildingName' field has been set.
      * @return True if the 'buildingName' field has been set, false otherwise.
      */
    public boolean hasBuildingName() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'buildingName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearBuildingName() {
      buildingName = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'careOfName' field.
      * @return The value.
      */
    public java.lang.String getCareOfName() {
      return careOfName;
    }


    /**
      * Sets the value of the 'careOfName' field.
      * @param value The value of 'careOfName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setCareOfName(java.lang.String value) {
      validate(fields()[4], value);
      this.careOfName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'careOfName' field has been set.
      * @return True if the 'careOfName' field has been set, false otherwise.
      */
    public boolean hasCareOfName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'careOfName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearCareOfName() {
      careOfName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'cityName' field.
      * @return The value.
      */
    public java.lang.String getCityName() {
      return cityName;
    }


    /**
      * Sets the value of the 'cityName' field.
      * @param value The value of 'cityName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setCityName(java.lang.String value) {
      validate(fields()[5], value);
      this.cityName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'cityName' field has been set.
      * @return True if the 'cityName' field has been set, false otherwise.
      */
    public boolean hasCityName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'cityName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearCityName() {
      cityName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'complexName' field.
      * @return The value.
      */
    public java.lang.String getComplexName() {
      return complexName;
    }


    /**
      * Sets the value of the 'complexName' field.
      * @param value The value of 'complexName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setComplexName(java.lang.String value) {
      validate(fields()[6], value);
      this.complexName = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'complexName' field has been set.
      * @return True if the 'complexName' field has been set, false otherwise.
      */
    public boolean hasComplexName() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'complexName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearComplexName() {
      complexName = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'countryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getCountryEntpsCode() {
      return countryEntpsCode;
    }


    /**
      * Sets the value of the 'countryEntpsCode' field.
      * @param value The value of 'countryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setCountryEntpsCode(java.lang.String value) {
      validate(fields()[7], value);
      this.countryEntpsCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'countryEntpsCode' field has been set.
      * @return True if the 'countryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasCountryEntpsCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'countryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearCountryEntpsCode() {
      countryEntpsCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'floorNumber' field.
      * @return The value.
      */
    public java.lang.String getFloorNumber() {
      return floorNumber;
    }


    /**
      * Sets the value of the 'floorNumber' field.
      * @param value The value of 'floorNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setFloorNumber(java.lang.String value) {
      validate(fields()[8], value);
      this.floorNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'floorNumber' field has been set.
      * @return True if the 'floorNumber' field has been set, false otherwise.
      */
    public boolean hasFloorNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'floorNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearFloorNumber() {
      floorNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'postalAreaNumber' field.
      * @return The value.
      */
    public java.lang.String getPostalAreaNumber() {
      return postalAreaNumber;
    }


    /**
      * Sets the value of the 'postalAreaNumber' field.
      * @param value The value of 'postalAreaNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setPostalAreaNumber(java.lang.String value) {
      validate(fields()[9], value);
      this.postalAreaNumber = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'postalAreaNumber' field has been set.
      * @return True if the 'postalAreaNumber' field has been set, false otherwise.
      */
    public boolean hasPostalAreaNumber() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'postalAreaNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearPostalAreaNumber() {
      postalAreaNumber = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'stateDistrictProvinceEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getStateDistrictProvinceEntpsTypeCode() {
      return stateDistrictProvinceEntpsTypeCode;
    }


    /**
      * Sets the value of the 'stateDistrictProvinceEntpsTypeCode' field.
      * @param value The value of 'stateDistrictProvinceEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setStateDistrictProvinceEntpsTypeCode(java.lang.String value) {
      validate(fields()[10], value);
      this.stateDistrictProvinceEntpsTypeCode = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'stateDistrictProvinceEntpsTypeCode' field has been set.
      * @return True if the 'stateDistrictProvinceEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasStateDistrictProvinceEntpsTypeCode() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'stateDistrictProvinceEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearStateDistrictProvinceEntpsTypeCode() {
      stateDistrictProvinceEntpsTypeCode = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'stateDistrictProvinceName' field.
      * @return The value.
      */
    public java.lang.String getStateDistrictProvinceName() {
      return stateDistrictProvinceName;
    }


    /**
      * Sets the value of the 'stateDistrictProvinceName' field.
      * @param value The value of 'stateDistrictProvinceName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setStateDistrictProvinceName(java.lang.String value) {
      validate(fields()[11], value);
      this.stateDistrictProvinceName = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'stateDistrictProvinceName' field has been set.
      * @return True if the 'stateDistrictProvinceName' field has been set, false otherwise.
      */
    public boolean hasStateDistrictProvinceName() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'stateDistrictProvinceName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearStateDistrictProvinceName() {
      stateDistrictProvinceName = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'streetName' field.
      * @return The value.
      */
    public java.lang.String getStreetName() {
      return streetName;
    }


    /**
      * Sets the value of the 'streetName' field.
      * @param value The value of 'streetName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setStreetName(java.lang.String value) {
      validate(fields()[12], value);
      this.streetName = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'streetName' field has been set.
      * @return True if the 'streetName' field has been set, false otherwise.
      */
    public boolean hasStreetName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'streetName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearStreetName() {
      streetName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'streetNumber' field.
      * @return The value.
      */
    public java.lang.String getStreetNumber() {
      return streetNumber;
    }


    /**
      * Sets the value of the 'streetNumber' field.
      * @param value The value of 'streetNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setStreetNumber(java.lang.String value) {
      validate(fields()[13], value);
      this.streetNumber = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'streetNumber' field has been set.
      * @return True if the 'streetNumber' field has been set, false otherwise.
      */
    public boolean hasStreetNumber() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'streetNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearStreetNumber() {
      streetNumber = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'subAreaName' field.
      * @return The value.
      */
    public java.lang.String getSubAreaName() {
      return subAreaName;
    }


    /**
      * Sets the value of the 'subAreaName' field.
      * @param value The value of 'subAreaName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setSubAreaName(java.lang.String value) {
      validate(fields()[14], value);
      this.subAreaName = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'subAreaName' field has been set.
      * @return True if the 'subAreaName' field has been set, false otherwise.
      */
    public boolean hasSubAreaName() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'subAreaName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearSubAreaName() {
      subAreaName = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'suburbName' field.
      * @return The value.
      */
    public java.lang.String getSuburbName() {
      return suburbName;
    }


    /**
      * Sets the value of the 'suburbName' field.
      * @param value The value of 'suburbName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setSuburbName(java.lang.String value) {
      validate(fields()[15], value);
      this.suburbName = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'suburbName' field has been set.
      * @return True if the 'suburbName' field has been set, false otherwise.
      */
    public boolean hasSuburbName() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'suburbName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearSuburbName() {
      suburbName = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'suiteName' field.
      * @return The value.
      */
    public java.lang.String getSuiteName() {
      return suiteName;
    }


    /**
      * Sets the value of the 'suiteName' field.
      * @param value The value of 'suiteName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setSuiteName(java.lang.String value) {
      validate(fields()[16], value);
      this.suiteName = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'suiteName' field has been set.
      * @return True if the 'suiteName' field has been set, false otherwise.
      */
    public boolean hasSuiteName() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'suiteName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearSuiteName() {
      suiteName = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'unitNumber' field.
      * @return The value.
      */
    public java.lang.String getUnitNumber() {
      return unitNumber;
    }


    /**
      * Sets the value of the 'unitNumber' field.
      * @param value The value of 'unitNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setUnitNumber(java.lang.String value) {
      validate(fields()[17], value);
      this.unitNumber = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'unitNumber' field has been set.
      * @return True if the 'unitNumber' field has been set, false otherwise.
      */
    public boolean hasUnitNumber() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'unitNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearUnitNumber() {
      unitNumber = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'googlePlusCode' field.
      * @return The value.
      */
    public java.lang.String getGooglePlusCode() {
      return googlePlusCode;
    }


    /**
      * Sets the value of the 'googlePlusCode' field.
      * @param value The value of 'googlePlusCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder setGooglePlusCode(java.lang.String value) {
      validate(fields()[18], value);
      this.googlePlusCode = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'googlePlusCode' field has been set.
      * @return True if the 'googlePlusCode' field has been set, false otherwise.
      */
    public boolean hasGooglePlusCode() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'googlePlusCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.GeographicalAddress.Builder clearGooglePlusCode() {
      googlePlusCode = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public GeographicalAddress build() {
      try {
        GeographicalAddress record = new GeographicalAddress();
        record.addressEntpsTypeCode = fieldSetFlags()[0] ? this.addressEntpsTypeCode : (java.lang.String) defaultValue(fields()[0]);
        record.addressLine1 = fieldSetFlags()[1] ? this.addressLine1 : (java.lang.String) defaultValue(fields()[1]);
        record.addressLine2 = fieldSetFlags()[2] ? this.addressLine2 : (java.lang.String) defaultValue(fields()[2]);
        record.buildingName = fieldSetFlags()[3] ? this.buildingName : (java.lang.String) defaultValue(fields()[3]);
        record.careOfName = fieldSetFlags()[4] ? this.careOfName : (java.lang.String) defaultValue(fields()[4]);
        record.cityName = fieldSetFlags()[5] ? this.cityName : (java.lang.String) defaultValue(fields()[5]);
        record.complexName = fieldSetFlags()[6] ? this.complexName : (java.lang.String) defaultValue(fields()[6]);
        record.countryEntpsCode = fieldSetFlags()[7] ? this.countryEntpsCode : (java.lang.String) defaultValue(fields()[7]);
        record.floorNumber = fieldSetFlags()[8] ? this.floorNumber : (java.lang.String) defaultValue(fields()[8]);
        record.postalAreaNumber = fieldSetFlags()[9] ? this.postalAreaNumber : (java.lang.String) defaultValue(fields()[9]);
        record.stateDistrictProvinceEntpsTypeCode = fieldSetFlags()[10] ? this.stateDistrictProvinceEntpsTypeCode : (java.lang.String) defaultValue(fields()[10]);
        record.stateDistrictProvinceName = fieldSetFlags()[11] ? this.stateDistrictProvinceName : (java.lang.String) defaultValue(fields()[11]);
        record.streetName = fieldSetFlags()[12] ? this.streetName : (java.lang.String) defaultValue(fields()[12]);
        record.streetNumber = fieldSetFlags()[13] ? this.streetNumber : (java.lang.String) defaultValue(fields()[13]);
        record.subAreaName = fieldSetFlags()[14] ? this.subAreaName : (java.lang.String) defaultValue(fields()[14]);
        record.suburbName = fieldSetFlags()[15] ? this.suburbName : (java.lang.String) defaultValue(fields()[15]);
        record.suiteName = fieldSetFlags()[16] ? this.suiteName : (java.lang.String) defaultValue(fields()[16]);
        record.unitNumber = fieldSetFlags()[17] ? this.unitNumber : (java.lang.String) defaultValue(fields()[17]);
        record.googlePlusCode = fieldSetFlags()[18] ? this.googlePlusCode : (java.lang.String) defaultValue(fields()[18]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<GeographicalAddress>
    WRITER$ = (org.apache.avro.io.DatumWriter<GeographicalAddress>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<GeographicalAddress>
    READER$ = (org.apache.avro.io.DatumReader<GeographicalAddress>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.addressEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.addressEntpsTypeCode);
    }

    if (this.addressLine1 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.addressLine1);
    }

    if (this.addressLine2 == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.addressLine2);
    }

    if (this.buildingName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.buildingName);
    }

    if (this.careOfName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.careOfName);
    }

    if (this.cityName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.cityName);
    }

    if (this.complexName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.complexName);
    }

    if (this.countryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.countryEntpsCode);
    }

    if (this.floorNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.floorNumber);
    }

    if (this.postalAreaNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.postalAreaNumber);
    }

    if (this.stateDistrictProvinceEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.stateDistrictProvinceEntpsTypeCode);
    }

    if (this.stateDistrictProvinceName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.stateDistrictProvinceName);
    }

    if (this.streetName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.streetName);
    }

    if (this.streetNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.streetNumber);
    }

    if (this.subAreaName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.subAreaName);
    }

    if (this.suburbName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.suburbName);
    }

    if (this.suiteName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.suiteName);
    }

    if (this.unitNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.unitNumber);
    }

    if (this.googlePlusCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.googlePlusCode);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.addressEntpsTypeCode = null;
      } else {
        this.addressEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.addressLine1 = null;
      } else {
        this.addressLine1 = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.addressLine2 = null;
      } else {
        this.addressLine2 = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.buildingName = null;
      } else {
        this.buildingName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.careOfName = null;
      } else {
        this.careOfName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.cityName = null;
      } else {
        this.cityName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.complexName = null;
      } else {
        this.complexName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.countryEntpsCode = null;
      } else {
        this.countryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.floorNumber = null;
      } else {
        this.floorNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.postalAreaNumber = null;
      } else {
        this.postalAreaNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.stateDistrictProvinceEntpsTypeCode = null;
      } else {
        this.stateDistrictProvinceEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.stateDistrictProvinceName = null;
      } else {
        this.stateDistrictProvinceName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.streetName = null;
      } else {
        this.streetName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.streetNumber = null;
      } else {
        this.streetNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.subAreaName = null;
      } else {
        this.subAreaName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.suburbName = null;
      } else {
        this.suburbName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.suiteName = null;
      } else {
        this.suiteName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.unitNumber = null;
      } else {
        this.unitNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.googlePlusCode = null;
      } else {
        this.googlePlusCode = in.readString();
      }

    } else {
      for (int i = 0; i < 19; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addressEntpsTypeCode = null;
          } else {
            this.addressEntpsTypeCode = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addressLine1 = null;
          } else {
            this.addressLine1 = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.addressLine2 = null;
          } else {
            this.addressLine2 = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.buildingName = null;
          } else {
            this.buildingName = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.careOfName = null;
          } else {
            this.careOfName = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.cityName = null;
          } else {
            this.cityName = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.complexName = null;
          } else {
            this.complexName = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.countryEntpsCode = null;
          } else {
            this.countryEntpsCode = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.floorNumber = null;
          } else {
            this.floorNumber = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.postalAreaNumber = null;
          } else {
            this.postalAreaNumber = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.stateDistrictProvinceEntpsTypeCode = null;
          } else {
            this.stateDistrictProvinceEntpsTypeCode = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.stateDistrictProvinceName = null;
          } else {
            this.stateDistrictProvinceName = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.streetName = null;
          } else {
            this.streetName = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.streetNumber = null;
          } else {
            this.streetNumber = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.subAreaName = null;
          } else {
            this.subAreaName = in.readString();
          }
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.suburbName = null;
          } else {
            this.suburbName = in.readString();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.suiteName = null;
          } else {
            this.suiteName = in.readString();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.unitNumber = null;
          } else {
            this.unitNumber = in.readString();
          }
          break;

        case 18:
          if (in.readIndex() != 1) {
            in.readNull();
            this.googlePlusCode = null;
          } else {
            this.googlePlusCode = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










