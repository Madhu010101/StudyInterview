/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Organisation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3619352635138124966L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Organisation\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"establishedCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"establishedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"legalResponsibilityIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"operationCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"operationStartDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationStatusDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationStatusEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationClassifications\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"OrganisationClassification\",\"fields\":[{\"name\":\"organisationClassificationTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationClassificationAttributeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationClassificationValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationClassificationActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]},{\"name\":\"registeredHeadOfficeCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"stateOwnedCompanyIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"taxYearEndMonth\",\"type\":[\"null\",{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}],\"default\":null},{\"name\":\"tradingName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"annualTurnoverAmount\",\"type\":[\"null\",{\"type\":\"double\",\"java-class\":\"java.lang.Double\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Organisation> ENCODER =
      new BinaryMessageEncoder<Organisation>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Organisation> DECODER =
      new BinaryMessageDecoder<Organisation>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Organisation> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Organisation> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Organisation> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Organisation>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Organisation to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Organisation from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Organisation instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Organisation fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String establishedCountryEntpsCode;
  @Deprecated public java.lang.String establishedDate;
  @Deprecated public java.lang.String legalResponsibilityIndicator;
  @Deprecated public java.lang.String operationCountryEntpsCode;
  @Deprecated public java.lang.String operationStartDate;
  @Deprecated public java.lang.String organisationEntpsTypeCode;
  @Deprecated public java.lang.String organisationStatusDate;
  @Deprecated public java.lang.String organisationStatusEntpsTypeCode;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> organisationClassifications;
  @Deprecated public java.lang.String registeredHeadOfficeCountryEntpsCode;
  @Deprecated public java.lang.String stateOwnedCompanyIndicator;
  @Deprecated public java.lang.Integer taxYearEndMonth;
  @Deprecated public java.lang.String tradingName;
  @Deprecated public java.lang.Double annualTurnoverAmount;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Organisation() {}

  /**
   * All-args constructor.
   * @param establishedCountryEntpsCode The new value for establishedCountryEntpsCode
   * @param establishedDate The new value for establishedDate
   * @param legalResponsibilityIndicator The new value for legalResponsibilityIndicator
   * @param operationCountryEntpsCode The new value for operationCountryEntpsCode
   * @param operationStartDate The new value for operationStartDate
   * @param organisationEntpsTypeCode The new value for organisationEntpsTypeCode
   * @param organisationStatusDate The new value for organisationStatusDate
   * @param organisationStatusEntpsTypeCode The new value for organisationStatusEntpsTypeCode
   * @param organisationClassifications The new value for organisationClassifications
   * @param registeredHeadOfficeCountryEntpsCode The new value for registeredHeadOfficeCountryEntpsCode
   * @param stateOwnedCompanyIndicator The new value for stateOwnedCompanyIndicator
   * @param taxYearEndMonth The new value for taxYearEndMonth
   * @param tradingName The new value for tradingName
   * @param annualTurnoverAmount The new value for annualTurnoverAmount
   */
  public Organisation(java.lang.String establishedCountryEntpsCode, java.lang.String establishedDate, java.lang.String legalResponsibilityIndicator, java.lang.String operationCountryEntpsCode, java.lang.String operationStartDate, java.lang.String organisationEntpsTypeCode, java.lang.String organisationStatusDate, java.lang.String organisationStatusEntpsTypeCode, java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> organisationClassifications, java.lang.String registeredHeadOfficeCountryEntpsCode, java.lang.String stateOwnedCompanyIndicator, java.lang.Integer taxYearEndMonth, java.lang.String tradingName, java.lang.Double annualTurnoverAmount) {
    this.establishedCountryEntpsCode = establishedCountryEntpsCode;
    this.establishedDate = establishedDate;
    this.legalResponsibilityIndicator = legalResponsibilityIndicator;
    this.operationCountryEntpsCode = operationCountryEntpsCode;
    this.operationStartDate = operationStartDate;
    this.organisationEntpsTypeCode = organisationEntpsTypeCode;
    this.organisationStatusDate = organisationStatusDate;
    this.organisationStatusEntpsTypeCode = organisationStatusEntpsTypeCode;
    this.organisationClassifications = organisationClassifications;
    this.registeredHeadOfficeCountryEntpsCode = registeredHeadOfficeCountryEntpsCode;
    this.stateOwnedCompanyIndicator = stateOwnedCompanyIndicator;
    this.taxYearEndMonth = taxYearEndMonth;
    this.tradingName = tradingName;
    this.annualTurnoverAmount = annualTurnoverAmount;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return establishedCountryEntpsCode;
    case 1: return establishedDate;
    case 2: return legalResponsibilityIndicator;
    case 3: return operationCountryEntpsCode;
    case 4: return operationStartDate;
    case 5: return organisationEntpsTypeCode;
    case 6: return organisationStatusDate;
    case 7: return organisationStatusEntpsTypeCode;
    case 8: return organisationClassifications;
    case 9: return registeredHeadOfficeCountryEntpsCode;
    case 10: return stateOwnedCompanyIndicator;
    case 11: return taxYearEndMonth;
    case 12: return tradingName;
    case 13: return annualTurnoverAmount;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: establishedCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 1: establishedDate = value$ != null ? value$.toString() : null; break;
    case 2: legalResponsibilityIndicator = value$ != null ? value$.toString() : null; break;
    case 3: operationCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 4: operationStartDate = value$ != null ? value$.toString() : null; break;
    case 5: organisationEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 6: organisationStatusDate = value$ != null ? value$.toString() : null; break;
    case 7: organisationStatusEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 8: organisationClassifications = (java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification>)value$; break;
    case 9: registeredHeadOfficeCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 10: stateOwnedCompanyIndicator = value$ != null ? value$.toString() : null; break;
    case 11: taxYearEndMonth = (java.lang.Integer)value$; break;
    case 12: tradingName = value$ != null ? value$.toString() : null; break;
    case 13: annualTurnoverAmount = (java.lang.Double)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'establishedCountryEntpsCode' field.
   * @return The value of the 'establishedCountryEntpsCode' field.
   */
  public java.lang.String getEstablishedCountryEntpsCode() {
    return establishedCountryEntpsCode;
  }


  /**
   * Sets the value of the 'establishedCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setEstablishedCountryEntpsCode(java.lang.String value) {
    this.establishedCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'establishedDate' field.
   * @return The value of the 'establishedDate' field.
   */
  public java.lang.String getEstablishedDate() {
    return establishedDate;
  }


  /**
   * Sets the value of the 'establishedDate' field.
   * @param value the value to set.
   */
  public void setEstablishedDate(java.lang.String value) {
    this.establishedDate = value;
  }

  /**
   * Gets the value of the 'legalResponsibilityIndicator' field.
   * @return The value of the 'legalResponsibilityIndicator' field.
   */
  public java.lang.String getLegalResponsibilityIndicator() {
    return legalResponsibilityIndicator;
  }


  /**
   * Sets the value of the 'legalResponsibilityIndicator' field.
   * @param value the value to set.
   */
  public void setLegalResponsibilityIndicator(java.lang.String value) {
    this.legalResponsibilityIndicator = value;
  }

  /**
   * Gets the value of the 'operationCountryEntpsCode' field.
   * @return The value of the 'operationCountryEntpsCode' field.
   */
  public java.lang.String getOperationCountryEntpsCode() {
    return operationCountryEntpsCode;
  }


  /**
   * Sets the value of the 'operationCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setOperationCountryEntpsCode(java.lang.String value) {
    this.operationCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'operationStartDate' field.
   * @return The value of the 'operationStartDate' field.
   */
  public java.lang.String getOperationStartDate() {
    return operationStartDate;
  }


  /**
   * Sets the value of the 'operationStartDate' field.
   * @param value the value to set.
   */
  public void setOperationStartDate(java.lang.String value) {
    this.operationStartDate = value;
  }

  /**
   * Gets the value of the 'organisationEntpsTypeCode' field.
   * @return The value of the 'organisationEntpsTypeCode' field.
   */
  public java.lang.String getOrganisationEntpsTypeCode() {
    return organisationEntpsTypeCode;
  }


  /**
   * Sets the value of the 'organisationEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setOrganisationEntpsTypeCode(java.lang.String value) {
    this.organisationEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'organisationStatusDate' field.
   * @return The value of the 'organisationStatusDate' field.
   */
  public java.lang.String getOrganisationStatusDate() {
    return organisationStatusDate;
  }


  /**
   * Sets the value of the 'organisationStatusDate' field.
   * @param value the value to set.
   */
  public void setOrganisationStatusDate(java.lang.String value) {
    this.organisationStatusDate = value;
  }

  /**
   * Gets the value of the 'organisationStatusEntpsTypeCode' field.
   * @return The value of the 'organisationStatusEntpsTypeCode' field.
   */
  public java.lang.String getOrganisationStatusEntpsTypeCode() {
    return organisationStatusEntpsTypeCode;
  }


  /**
   * Sets the value of the 'organisationStatusEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setOrganisationStatusEntpsTypeCode(java.lang.String value) {
    this.organisationStatusEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'organisationClassifications' field.
   * @return The value of the 'organisationClassifications' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> getOrganisationClassifications() {
    return organisationClassifications;
  }


  /**
   * Sets the value of the 'organisationClassifications' field.
   * @param value the value to set.
   */
  public void setOrganisationClassifications(java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> value) {
    this.organisationClassifications = value;
  }

  /**
   * Gets the value of the 'registeredHeadOfficeCountryEntpsCode' field.
   * @return The value of the 'registeredHeadOfficeCountryEntpsCode' field.
   */
  public java.lang.String getRegisteredHeadOfficeCountryEntpsCode() {
    return registeredHeadOfficeCountryEntpsCode;
  }


  /**
   * Sets the value of the 'registeredHeadOfficeCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setRegisteredHeadOfficeCountryEntpsCode(java.lang.String value) {
    this.registeredHeadOfficeCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'stateOwnedCompanyIndicator' field.
   * @return The value of the 'stateOwnedCompanyIndicator' field.
   */
  public java.lang.String getStateOwnedCompanyIndicator() {
    return stateOwnedCompanyIndicator;
  }


  /**
   * Sets the value of the 'stateOwnedCompanyIndicator' field.
   * @param value the value to set.
   */
  public void setStateOwnedCompanyIndicator(java.lang.String value) {
    this.stateOwnedCompanyIndicator = value;
  }

  /**
   * Gets the value of the 'taxYearEndMonth' field.
   * @return The value of the 'taxYearEndMonth' field.
   */
  public java.lang.Integer getTaxYearEndMonth() {
    return taxYearEndMonth;
  }


  /**
   * Sets the value of the 'taxYearEndMonth' field.
   * @param value the value to set.
   */
  public void setTaxYearEndMonth(java.lang.Integer value) {
    this.taxYearEndMonth = value;
  }

  /**
   * Gets the value of the 'tradingName' field.
   * @return The value of the 'tradingName' field.
   */
  public java.lang.String getTradingName() {
    return tradingName;
  }


  /**
   * Sets the value of the 'tradingName' field.
   * @param value the value to set.
   */
  public void setTradingName(java.lang.String value) {
    this.tradingName = value;
  }

  /**
   * Gets the value of the 'annualTurnoverAmount' field.
   * @return The value of the 'annualTurnoverAmount' field.
   */
  public java.lang.Double getAnnualTurnoverAmount() {
    return annualTurnoverAmount;
  }


  /**
   * Sets the value of the 'annualTurnoverAmount' field.
   * @param value the value to set.
   */
  public void setAnnualTurnoverAmount(java.lang.Double value) {
    this.annualTurnoverAmount = value;
  }

  /**
   * Creates a new Organisation RecordBuilder.
   * @return A new Organisation RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Organisation.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.Organisation.Builder();
  }

  /**
   * Creates a new Organisation RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Organisation RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Organisation.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Organisation.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Organisation.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Organisation.Builder(other);
    }
  }

  /**
   * Creates a new Organisation RecordBuilder by copying an existing Organisation instance.
   * @param other The existing instance to copy.
   * @return A new Organisation RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Organisation.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Organisation other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Organisation.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Organisation.Builder(other);
    }
  }

  /**
   * RecordBuilder for Organisation instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Organisation>
    implements org.apache.avro.data.RecordBuilder<Organisation> {

    private java.lang.String establishedCountryEntpsCode;
    private java.lang.String establishedDate;
    private java.lang.String legalResponsibilityIndicator;
    private java.lang.String operationCountryEntpsCode;
    private java.lang.String operationStartDate;
    private java.lang.String organisationEntpsTypeCode;
    private java.lang.String organisationStatusDate;
    private java.lang.String organisationStatusEntpsTypeCode;
    private java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> organisationClassifications;
    private java.lang.String registeredHeadOfficeCountryEntpsCode;
    private java.lang.String stateOwnedCompanyIndicator;
    private java.lang.Integer taxYearEndMonth;
    private java.lang.String tradingName;
    private java.lang.Double annualTurnoverAmount;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Organisation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.establishedCountryEntpsCode)) {
        this.establishedCountryEntpsCode = data().deepCopy(fields()[0].schema(), other.establishedCountryEntpsCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.establishedDate)) {
        this.establishedDate = data().deepCopy(fields()[1].schema(), other.establishedDate);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.legalResponsibilityIndicator)) {
        this.legalResponsibilityIndicator = data().deepCopy(fields()[2].schema(), other.legalResponsibilityIndicator);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.operationCountryEntpsCode)) {
        this.operationCountryEntpsCode = data().deepCopy(fields()[3].schema(), other.operationCountryEntpsCode);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.operationStartDate)) {
        this.operationStartDate = data().deepCopy(fields()[4].schema(), other.operationStartDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.organisationEntpsTypeCode)) {
        this.organisationEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.organisationEntpsTypeCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.organisationStatusDate)) {
        this.organisationStatusDate = data().deepCopy(fields()[6].schema(), other.organisationStatusDate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.organisationStatusEntpsTypeCode)) {
        this.organisationStatusEntpsTypeCode = data().deepCopy(fields()[7].schema(), other.organisationStatusEntpsTypeCode);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.organisationClassifications)) {
        this.organisationClassifications = data().deepCopy(fields()[8].schema(), other.organisationClassifications);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.registeredHeadOfficeCountryEntpsCode)) {
        this.registeredHeadOfficeCountryEntpsCode = data().deepCopy(fields()[9].schema(), other.registeredHeadOfficeCountryEntpsCode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.stateOwnedCompanyIndicator)) {
        this.stateOwnedCompanyIndicator = data().deepCopy(fields()[10].schema(), other.stateOwnedCompanyIndicator);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.taxYearEndMonth)) {
        this.taxYearEndMonth = data().deepCopy(fields()[11].schema(), other.taxYearEndMonth);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.tradingName)) {
        this.tradingName = data().deepCopy(fields()[12].schema(), other.tradingName);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.annualTurnoverAmount)) {
        this.annualTurnoverAmount = data().deepCopy(fields()[13].schema(), other.annualTurnoverAmount);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing Organisation instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Organisation other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.establishedCountryEntpsCode)) {
        this.establishedCountryEntpsCode = data().deepCopy(fields()[0].schema(), other.establishedCountryEntpsCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.establishedDate)) {
        this.establishedDate = data().deepCopy(fields()[1].schema(), other.establishedDate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.legalResponsibilityIndicator)) {
        this.legalResponsibilityIndicator = data().deepCopy(fields()[2].schema(), other.legalResponsibilityIndicator);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.operationCountryEntpsCode)) {
        this.operationCountryEntpsCode = data().deepCopy(fields()[3].schema(), other.operationCountryEntpsCode);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.operationStartDate)) {
        this.operationStartDate = data().deepCopy(fields()[4].schema(), other.operationStartDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.organisationEntpsTypeCode)) {
        this.organisationEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.organisationEntpsTypeCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.organisationStatusDate)) {
        this.organisationStatusDate = data().deepCopy(fields()[6].schema(), other.organisationStatusDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.organisationStatusEntpsTypeCode)) {
        this.organisationStatusEntpsTypeCode = data().deepCopy(fields()[7].schema(), other.organisationStatusEntpsTypeCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.organisationClassifications)) {
        this.organisationClassifications = data().deepCopy(fields()[8].schema(), other.organisationClassifications);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.registeredHeadOfficeCountryEntpsCode)) {
        this.registeredHeadOfficeCountryEntpsCode = data().deepCopy(fields()[9].schema(), other.registeredHeadOfficeCountryEntpsCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.stateOwnedCompanyIndicator)) {
        this.stateOwnedCompanyIndicator = data().deepCopy(fields()[10].schema(), other.stateOwnedCompanyIndicator);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.taxYearEndMonth)) {
        this.taxYearEndMonth = data().deepCopy(fields()[11].schema(), other.taxYearEndMonth);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.tradingName)) {
        this.tradingName = data().deepCopy(fields()[12].schema(), other.tradingName);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.annualTurnoverAmount)) {
        this.annualTurnoverAmount = data().deepCopy(fields()[13].schema(), other.annualTurnoverAmount);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'establishedCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getEstablishedCountryEntpsCode() {
      return establishedCountryEntpsCode;
    }


    /**
      * Sets the value of the 'establishedCountryEntpsCode' field.
      * @param value The value of 'establishedCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setEstablishedCountryEntpsCode(java.lang.String value) {
      validate(fields()[0], value);
      this.establishedCountryEntpsCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'establishedCountryEntpsCode' field has been set.
      * @return True if the 'establishedCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasEstablishedCountryEntpsCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'establishedCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearEstablishedCountryEntpsCode() {
      establishedCountryEntpsCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'establishedDate' field.
      * @return The value.
      */
    public java.lang.String getEstablishedDate() {
      return establishedDate;
    }


    /**
      * Sets the value of the 'establishedDate' field.
      * @param value The value of 'establishedDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setEstablishedDate(java.lang.String value) {
      validate(fields()[1], value);
      this.establishedDate = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'establishedDate' field has been set.
      * @return True if the 'establishedDate' field has been set, false otherwise.
      */
    public boolean hasEstablishedDate() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'establishedDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearEstablishedDate() {
      establishedDate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'legalResponsibilityIndicator' field.
      * @return The value.
      */
    public java.lang.String getLegalResponsibilityIndicator() {
      return legalResponsibilityIndicator;
    }


    /**
      * Sets the value of the 'legalResponsibilityIndicator' field.
      * @param value The value of 'legalResponsibilityIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setLegalResponsibilityIndicator(java.lang.String value) {
      validate(fields()[2], value);
      this.legalResponsibilityIndicator = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'legalResponsibilityIndicator' field has been set.
      * @return True if the 'legalResponsibilityIndicator' field has been set, false otherwise.
      */
    public boolean hasLegalResponsibilityIndicator() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'legalResponsibilityIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearLegalResponsibilityIndicator() {
      legalResponsibilityIndicator = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'operationCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getOperationCountryEntpsCode() {
      return operationCountryEntpsCode;
    }


    /**
      * Sets the value of the 'operationCountryEntpsCode' field.
      * @param value The value of 'operationCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setOperationCountryEntpsCode(java.lang.String value) {
      validate(fields()[3], value);
      this.operationCountryEntpsCode = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'operationCountryEntpsCode' field has been set.
      * @return True if the 'operationCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasOperationCountryEntpsCode() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'operationCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearOperationCountryEntpsCode() {
      operationCountryEntpsCode = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'operationStartDate' field.
      * @return The value.
      */
    public java.lang.String getOperationStartDate() {
      return operationStartDate;
    }


    /**
      * Sets the value of the 'operationStartDate' field.
      * @param value The value of 'operationStartDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setOperationStartDate(java.lang.String value) {
      validate(fields()[4], value);
      this.operationStartDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'operationStartDate' field has been set.
      * @return True if the 'operationStartDate' field has been set, false otherwise.
      */
    public boolean hasOperationStartDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'operationStartDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearOperationStartDate() {
      operationStartDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'organisationEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getOrganisationEntpsTypeCode() {
      return organisationEntpsTypeCode;
    }


    /**
      * Sets the value of the 'organisationEntpsTypeCode' field.
      * @param value The value of 'organisationEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setOrganisationEntpsTypeCode(java.lang.String value) {
      validate(fields()[5], value);
      this.organisationEntpsTypeCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationEntpsTypeCode' field has been set.
      * @return True if the 'organisationEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasOrganisationEntpsTypeCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'organisationEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearOrganisationEntpsTypeCode() {
      organisationEntpsTypeCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'organisationStatusDate' field.
      * @return The value.
      */
    public java.lang.String getOrganisationStatusDate() {
      return organisationStatusDate;
    }


    /**
      * Sets the value of the 'organisationStatusDate' field.
      * @param value The value of 'organisationStatusDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setOrganisationStatusDate(java.lang.String value) {
      validate(fields()[6], value);
      this.organisationStatusDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationStatusDate' field has been set.
      * @return True if the 'organisationStatusDate' field has been set, false otherwise.
      */
    public boolean hasOrganisationStatusDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'organisationStatusDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearOrganisationStatusDate() {
      organisationStatusDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'organisationStatusEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getOrganisationStatusEntpsTypeCode() {
      return organisationStatusEntpsTypeCode;
    }


    /**
      * Sets the value of the 'organisationStatusEntpsTypeCode' field.
      * @param value The value of 'organisationStatusEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setOrganisationStatusEntpsTypeCode(java.lang.String value) {
      validate(fields()[7], value);
      this.organisationStatusEntpsTypeCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationStatusEntpsTypeCode' field has been set.
      * @return True if the 'organisationStatusEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasOrganisationStatusEntpsTypeCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'organisationStatusEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearOrganisationStatusEntpsTypeCode() {
      organisationStatusEntpsTypeCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'organisationClassifications' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> getOrganisationClassifications() {
      return organisationClassifications;
    }


    /**
      * Sets the value of the 'organisationClassifications' field.
      * @param value The value of 'organisationClassifications'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setOrganisationClassifications(java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> value) {
      validate(fields()[8], value);
      this.organisationClassifications = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationClassifications' field has been set.
      * @return True if the 'organisationClassifications' field has been set, false otherwise.
      */
    public boolean hasOrganisationClassifications() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'organisationClassifications' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearOrganisationClassifications() {
      organisationClassifications = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'registeredHeadOfficeCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getRegisteredHeadOfficeCountryEntpsCode() {
      return registeredHeadOfficeCountryEntpsCode;
    }


    /**
      * Sets the value of the 'registeredHeadOfficeCountryEntpsCode' field.
      * @param value The value of 'registeredHeadOfficeCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setRegisteredHeadOfficeCountryEntpsCode(java.lang.String value) {
      validate(fields()[9], value);
      this.registeredHeadOfficeCountryEntpsCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'registeredHeadOfficeCountryEntpsCode' field has been set.
      * @return True if the 'registeredHeadOfficeCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasRegisteredHeadOfficeCountryEntpsCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'registeredHeadOfficeCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearRegisteredHeadOfficeCountryEntpsCode() {
      registeredHeadOfficeCountryEntpsCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'stateOwnedCompanyIndicator' field.
      * @return The value.
      */
    public java.lang.String getStateOwnedCompanyIndicator() {
      return stateOwnedCompanyIndicator;
    }


    /**
      * Sets the value of the 'stateOwnedCompanyIndicator' field.
      * @param value The value of 'stateOwnedCompanyIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setStateOwnedCompanyIndicator(java.lang.String value) {
      validate(fields()[10], value);
      this.stateOwnedCompanyIndicator = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'stateOwnedCompanyIndicator' field has been set.
      * @return True if the 'stateOwnedCompanyIndicator' field has been set, false otherwise.
      */
    public boolean hasStateOwnedCompanyIndicator() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'stateOwnedCompanyIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearStateOwnedCompanyIndicator() {
      stateOwnedCompanyIndicator = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'taxYearEndMonth' field.
      * @return The value.
      */
    public java.lang.Integer getTaxYearEndMonth() {
      return taxYearEndMonth;
    }


    /**
      * Sets the value of the 'taxYearEndMonth' field.
      * @param value The value of 'taxYearEndMonth'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setTaxYearEndMonth(java.lang.Integer value) {
      validate(fields()[11], value);
      this.taxYearEndMonth = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'taxYearEndMonth' field has been set.
      * @return True if the 'taxYearEndMonth' field has been set, false otherwise.
      */
    public boolean hasTaxYearEndMonth() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'taxYearEndMonth' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearTaxYearEndMonth() {
      taxYearEndMonth = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'tradingName' field.
      * @return The value.
      */
    public java.lang.String getTradingName() {
      return tradingName;
    }


    /**
      * Sets the value of the 'tradingName' field.
      * @param value The value of 'tradingName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setTradingName(java.lang.String value) {
      validate(fields()[12], value);
      this.tradingName = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'tradingName' field has been set.
      * @return True if the 'tradingName' field has been set, false otherwise.
      */
    public boolean hasTradingName() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'tradingName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearTradingName() {
      tradingName = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'annualTurnoverAmount' field.
      * @return The value.
      */
    public java.lang.Double getAnnualTurnoverAmount() {
      return annualTurnoverAmount;
    }


    /**
      * Sets the value of the 'annualTurnoverAmount' field.
      * @param value The value of 'annualTurnoverAmount'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder setAnnualTurnoverAmount(java.lang.Double value) {
      validate(fields()[13], value);
      this.annualTurnoverAmount = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'annualTurnoverAmount' field has been set.
      * @return True if the 'annualTurnoverAmount' field has been set, false otherwise.
      */
    public boolean hasAnnualTurnoverAmount() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'annualTurnoverAmount' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Organisation.Builder clearAnnualTurnoverAmount() {
      annualTurnoverAmount = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Organisation build() {
      try {
        Organisation record = new Organisation();
        record.establishedCountryEntpsCode = fieldSetFlags()[0] ? this.establishedCountryEntpsCode : (java.lang.String) defaultValue(fields()[0]);
        record.establishedDate = fieldSetFlags()[1] ? this.establishedDate : (java.lang.String) defaultValue(fields()[1]);
        record.legalResponsibilityIndicator = fieldSetFlags()[2] ? this.legalResponsibilityIndicator : (java.lang.String) defaultValue(fields()[2]);
        record.operationCountryEntpsCode = fieldSetFlags()[3] ? this.operationCountryEntpsCode : (java.lang.String) defaultValue(fields()[3]);
        record.operationStartDate = fieldSetFlags()[4] ? this.operationStartDate : (java.lang.String) defaultValue(fields()[4]);
        record.organisationEntpsTypeCode = fieldSetFlags()[5] ? this.organisationEntpsTypeCode : (java.lang.String) defaultValue(fields()[5]);
        record.organisationStatusDate = fieldSetFlags()[6] ? this.organisationStatusDate : (java.lang.String) defaultValue(fields()[6]);
        record.organisationStatusEntpsTypeCode = fieldSetFlags()[7] ? this.organisationStatusEntpsTypeCode : (java.lang.String) defaultValue(fields()[7]);
        record.organisationClassifications = fieldSetFlags()[8] ? this.organisationClassifications : (java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification>) defaultValue(fields()[8]);
        record.registeredHeadOfficeCountryEntpsCode = fieldSetFlags()[9] ? this.registeredHeadOfficeCountryEntpsCode : (java.lang.String) defaultValue(fields()[9]);
        record.stateOwnedCompanyIndicator = fieldSetFlags()[10] ? this.stateOwnedCompanyIndicator : (java.lang.String) defaultValue(fields()[10]);
        record.taxYearEndMonth = fieldSetFlags()[11] ? this.taxYearEndMonth : (java.lang.Integer) defaultValue(fields()[11]);
        record.tradingName = fieldSetFlags()[12] ? this.tradingName : (java.lang.String) defaultValue(fields()[12]);
        record.annualTurnoverAmount = fieldSetFlags()[13] ? this.annualTurnoverAmount : (java.lang.Double) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Organisation>
    WRITER$ = (org.apache.avro.io.DatumWriter<Organisation>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Organisation>
    READER$ = (org.apache.avro.io.DatumReader<Organisation>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.establishedCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.establishedCountryEntpsCode);
    }

    if (this.establishedDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.establishedDate);
    }

    if (this.legalResponsibilityIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.legalResponsibilityIndicator);
    }

    if (this.operationCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.operationCountryEntpsCode);
    }

    if (this.operationStartDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.operationStartDate);
    }

    if (this.organisationEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.organisationEntpsTypeCode);
    }

    if (this.organisationStatusDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.organisationStatusDate);
    }

    if (this.organisationStatusEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.organisationStatusEntpsTypeCode);
    }

    if (this.organisationClassifications == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.organisationClassifications.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (za.env.raw.opm.firstidmasterentity.OrganisationClassification e0: this.organisationClassifications) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.registeredHeadOfficeCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.registeredHeadOfficeCountryEntpsCode);
    }

    if (this.stateOwnedCompanyIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.stateOwnedCompanyIndicator);
    }

    if (this.taxYearEndMonth == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.taxYearEndMonth);
    }

    if (this.tradingName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.tradingName);
    }

    if (this.annualTurnoverAmount == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeDouble(this.annualTurnoverAmount);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.establishedCountryEntpsCode = null;
      } else {
        this.establishedCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.establishedDate = null;
      } else {
        this.establishedDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.legalResponsibilityIndicator = null;
      } else {
        this.legalResponsibilityIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.operationCountryEntpsCode = null;
      } else {
        this.operationCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.operationStartDate = null;
      } else {
        this.operationStartDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationEntpsTypeCode = null;
      } else {
        this.organisationEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationStatusDate = null;
      } else {
        this.organisationStatusDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationStatusEntpsTypeCode = null;
      } else {
        this.organisationStatusEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationClassifications = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> a0 = this.organisationClassifications;
        if (a0 == null) {
          a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.OrganisationClassification>((int)size0, SCHEMA$.getField("organisationClassifications").schema().getTypes().get(1));
          this.organisationClassifications = a0;
        } else a0.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.OrganisationClassification> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.OrganisationClassification>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            za.env.raw.opm.firstidmasterentity.OrganisationClassification e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new za.env.raw.opm.firstidmasterentity.OrganisationClassification();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.registeredHeadOfficeCountryEntpsCode = null;
      } else {
        this.registeredHeadOfficeCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.stateOwnedCompanyIndicator = null;
      } else {
        this.stateOwnedCompanyIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.taxYearEndMonth = null;
      } else {
        this.taxYearEndMonth = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.tradingName = null;
      } else {
        this.tradingName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.annualTurnoverAmount = null;
      } else {
        this.annualTurnoverAmount = in.readDouble();
      }

    } else {
      for (int i = 0; i < 14; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.establishedCountryEntpsCode = null;
          } else {
            this.establishedCountryEntpsCode = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.establishedDate = null;
          } else {
            this.establishedDate = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.legalResponsibilityIndicator = null;
          } else {
            this.legalResponsibilityIndicator = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.operationCountryEntpsCode = null;
          } else {
            this.operationCountryEntpsCode = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.operationStartDate = null;
          } else {
            this.operationStartDate = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationEntpsTypeCode = null;
          } else {
            this.organisationEntpsTypeCode = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationStatusDate = null;
          } else {
            this.organisationStatusDate = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationStatusEntpsTypeCode = null;
          } else {
            this.organisationStatusEntpsTypeCode = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationClassifications = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.OrganisationClassification> a0 = this.organisationClassifications;
            if (a0 == null) {
              a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.OrganisationClassification>((int)size0, SCHEMA$.getField("organisationClassifications").schema().getTypes().get(1));
              this.organisationClassifications = a0;
            } else a0.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.OrganisationClassification> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.OrganisationClassification>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                za.env.raw.opm.firstidmasterentity.OrganisationClassification e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new za.env.raw.opm.firstidmasterentity.OrganisationClassification();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.registeredHeadOfficeCountryEntpsCode = null;
          } else {
            this.registeredHeadOfficeCountryEntpsCode = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.stateOwnedCompanyIndicator = null;
          } else {
            this.stateOwnedCompanyIndicator = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.taxYearEndMonth = null;
          } else {
            this.taxYearEndMonth = in.readInt();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.tradingName = null;
          } else {
            this.tradingName = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.annualTurnoverAmount = null;
          } else {
            this.annualTurnoverAmount = in.readDouble();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










