/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Location extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7645072383051190443L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Location\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"locationActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"allArrangementStatementAddressIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"digitalAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"DigitalAddress\",\"fields\":[{\"name\":\"digitalAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"digitalAddressEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]},{\"name\":\"emailAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EmailAddress\",\"fields\":[{\"name\":\"emailAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]},{\"name\":\"geographicAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"GeographicalAddress\",\"fields\":[{\"name\":\"addressEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressLine1\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"addressLine2\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"buildingName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"careOfName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"cityName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"complexName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"countryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"floorNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"postalAreaNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"stateDistrictProvinceEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"stateDistrictProvinceName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"streetName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"streetNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"subAreaName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"suburbName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"suiteName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"unitNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"googlePlusCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]},{\"name\":\"locationEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"locationTag\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"locationUseEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephonicAddresses\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"TelephonicAddress\",\"fields\":[{\"name\":\"telephoneAreaDailCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneCountryDailCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneExtensionNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneFullNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Location> ENCODER =
      new BinaryMessageEncoder<Location>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Location> DECODER =
      new BinaryMessageDecoder<Location>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Location> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Location> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Location> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Location>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Location to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Location from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Location instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Location fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String locationActiveIndicator;
  @Deprecated public java.lang.String allArrangementStatementAddressIndicator;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> digitalAddresses;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> emailAddresses;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> geographicAddresses;
  @Deprecated public java.lang.String locationEntpsTypeCode;
  @Deprecated public java.lang.String locationTag;
  @Deprecated public java.lang.String locationUseEntpsTypeCode;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> telephonicAddresses;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Location() {}

  /**
   * All-args constructor.
   * @param locationActiveIndicator The new value for locationActiveIndicator
   * @param allArrangementStatementAddressIndicator The new value for allArrangementStatementAddressIndicator
   * @param digitalAddresses The new value for digitalAddresses
   * @param emailAddresses The new value for emailAddresses
   * @param geographicAddresses The new value for geographicAddresses
   * @param locationEntpsTypeCode The new value for locationEntpsTypeCode
   * @param locationTag The new value for locationTag
   * @param locationUseEntpsTypeCode The new value for locationUseEntpsTypeCode
   * @param telephonicAddresses The new value for telephonicAddresses
   */
  public Location(java.lang.String locationActiveIndicator, java.lang.String allArrangementStatementAddressIndicator, java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> digitalAddresses, java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> emailAddresses, java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> geographicAddresses, java.lang.String locationEntpsTypeCode, java.lang.String locationTag, java.lang.String locationUseEntpsTypeCode, java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> telephonicAddresses) {
    this.locationActiveIndicator = locationActiveIndicator;
    this.allArrangementStatementAddressIndicator = allArrangementStatementAddressIndicator;
    this.digitalAddresses = digitalAddresses;
    this.emailAddresses = emailAddresses;
    this.geographicAddresses = geographicAddresses;
    this.locationEntpsTypeCode = locationEntpsTypeCode;
    this.locationTag = locationTag;
    this.locationUseEntpsTypeCode = locationUseEntpsTypeCode;
    this.telephonicAddresses = telephonicAddresses;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return locationActiveIndicator;
    case 1: return allArrangementStatementAddressIndicator;
    case 2: return digitalAddresses;
    case 3: return emailAddresses;
    case 4: return geographicAddresses;
    case 5: return locationEntpsTypeCode;
    case 6: return locationTag;
    case 7: return locationUseEntpsTypeCode;
    case 8: return telephonicAddresses;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: locationActiveIndicator = value$ != null ? value$.toString() : null; break;
    case 1: allArrangementStatementAddressIndicator = value$ != null ? value$.toString() : null; break;
    case 2: digitalAddresses = (java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress>)value$; break;
    case 3: emailAddresses = (java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress>)value$; break;
    case 4: geographicAddresses = (java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress>)value$; break;
    case 5: locationEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 6: locationTag = value$ != null ? value$.toString() : null; break;
    case 7: locationUseEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 8: telephonicAddresses = (java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress>)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'locationActiveIndicator' field.
   * @return The value of the 'locationActiveIndicator' field.
   */
  public java.lang.String getLocationActiveIndicator() {
    return locationActiveIndicator;
  }


  /**
   * Sets the value of the 'locationActiveIndicator' field.
   * @param value the value to set.
   */
  public void setLocationActiveIndicator(java.lang.String value) {
    this.locationActiveIndicator = value;
  }

  /**
   * Gets the value of the 'allArrangementStatementAddressIndicator' field.
   * @return The value of the 'allArrangementStatementAddressIndicator' field.
   */
  public java.lang.String getAllArrangementStatementAddressIndicator() {
    return allArrangementStatementAddressIndicator;
  }


  /**
   * Sets the value of the 'allArrangementStatementAddressIndicator' field.
   * @param value the value to set.
   */
  public void setAllArrangementStatementAddressIndicator(java.lang.String value) {
    this.allArrangementStatementAddressIndicator = value;
  }

  /**
   * Gets the value of the 'digitalAddresses' field.
   * @return The value of the 'digitalAddresses' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> getDigitalAddresses() {
    return digitalAddresses;
  }


  /**
   * Sets the value of the 'digitalAddresses' field.
   * @param value the value to set.
   */
  public void setDigitalAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> value) {
    this.digitalAddresses = value;
  }

  /**
   * Gets the value of the 'emailAddresses' field.
   * @return The value of the 'emailAddresses' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> getEmailAddresses() {
    return emailAddresses;
  }


  /**
   * Sets the value of the 'emailAddresses' field.
   * @param value the value to set.
   */
  public void setEmailAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> value) {
    this.emailAddresses = value;
  }

  /**
   * Gets the value of the 'geographicAddresses' field.
   * @return The value of the 'geographicAddresses' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> getGeographicAddresses() {
    return geographicAddresses;
  }


  /**
   * Sets the value of the 'geographicAddresses' field.
   * @param value the value to set.
   */
  public void setGeographicAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> value) {
    this.geographicAddresses = value;
  }

  /**
   * Gets the value of the 'locationEntpsTypeCode' field.
   * @return The value of the 'locationEntpsTypeCode' field.
   */
  public java.lang.String getLocationEntpsTypeCode() {
    return locationEntpsTypeCode;
  }


  /**
   * Sets the value of the 'locationEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setLocationEntpsTypeCode(java.lang.String value) {
    this.locationEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'locationTag' field.
   * @return The value of the 'locationTag' field.
   */
  public java.lang.String getLocationTag() {
    return locationTag;
  }


  /**
   * Sets the value of the 'locationTag' field.
   * @param value the value to set.
   */
  public void setLocationTag(java.lang.String value) {
    this.locationTag = value;
  }

  /**
   * Gets the value of the 'locationUseEntpsTypeCode' field.
   * @return The value of the 'locationUseEntpsTypeCode' field.
   */
  public java.lang.String getLocationUseEntpsTypeCode() {
    return locationUseEntpsTypeCode;
  }


  /**
   * Sets the value of the 'locationUseEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setLocationUseEntpsTypeCode(java.lang.String value) {
    this.locationUseEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'telephonicAddresses' field.
   * @return The value of the 'telephonicAddresses' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> getTelephonicAddresses() {
    return telephonicAddresses;
  }


  /**
   * Sets the value of the 'telephonicAddresses' field.
   * @param value the value to set.
   */
  public void setTelephonicAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> value) {
    this.telephonicAddresses = value;
  }

  /**
   * Creates a new Location RecordBuilder.
   * @return A new Location RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Location.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.Location.Builder();
  }

  /**
   * Creates a new Location RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Location RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Location.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Location.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Location.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Location.Builder(other);
    }
  }

  /**
   * Creates a new Location RecordBuilder by copying an existing Location instance.
   * @param other The existing instance to copy.
   * @return A new Location RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Location.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Location other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Location.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Location.Builder(other);
    }
  }

  /**
   * RecordBuilder for Location instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Location>
    implements org.apache.avro.data.RecordBuilder<Location> {

    private java.lang.String locationActiveIndicator;
    private java.lang.String allArrangementStatementAddressIndicator;
    private java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> digitalAddresses;
    private java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> emailAddresses;
    private java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> geographicAddresses;
    private java.lang.String locationEntpsTypeCode;
    private java.lang.String locationTag;
    private java.lang.String locationUseEntpsTypeCode;
    private java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> telephonicAddresses;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Location.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.locationActiveIndicator)) {
        this.locationActiveIndicator = data().deepCopy(fields()[0].schema(), other.locationActiveIndicator);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.allArrangementStatementAddressIndicator)) {
        this.allArrangementStatementAddressIndicator = data().deepCopy(fields()[1].schema(), other.allArrangementStatementAddressIndicator);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.digitalAddresses)) {
        this.digitalAddresses = data().deepCopy(fields()[2].schema(), other.digitalAddresses);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.emailAddresses)) {
        this.emailAddresses = data().deepCopy(fields()[3].schema(), other.emailAddresses);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.geographicAddresses)) {
        this.geographicAddresses = data().deepCopy(fields()[4].schema(), other.geographicAddresses);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.locationEntpsTypeCode)) {
        this.locationEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.locationEntpsTypeCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.locationTag)) {
        this.locationTag = data().deepCopy(fields()[6].schema(), other.locationTag);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.locationUseEntpsTypeCode)) {
        this.locationUseEntpsTypeCode = data().deepCopy(fields()[7].schema(), other.locationUseEntpsTypeCode);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.telephonicAddresses)) {
        this.telephonicAddresses = data().deepCopy(fields()[8].schema(), other.telephonicAddresses);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
    }

    /**
     * Creates a Builder by copying an existing Location instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Location other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.locationActiveIndicator)) {
        this.locationActiveIndicator = data().deepCopy(fields()[0].schema(), other.locationActiveIndicator);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.allArrangementStatementAddressIndicator)) {
        this.allArrangementStatementAddressIndicator = data().deepCopy(fields()[1].schema(), other.allArrangementStatementAddressIndicator);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.digitalAddresses)) {
        this.digitalAddresses = data().deepCopy(fields()[2].schema(), other.digitalAddresses);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.emailAddresses)) {
        this.emailAddresses = data().deepCopy(fields()[3].schema(), other.emailAddresses);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.geographicAddresses)) {
        this.geographicAddresses = data().deepCopy(fields()[4].schema(), other.geographicAddresses);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.locationEntpsTypeCode)) {
        this.locationEntpsTypeCode = data().deepCopy(fields()[5].schema(), other.locationEntpsTypeCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.locationTag)) {
        this.locationTag = data().deepCopy(fields()[6].schema(), other.locationTag);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.locationUseEntpsTypeCode)) {
        this.locationUseEntpsTypeCode = data().deepCopy(fields()[7].schema(), other.locationUseEntpsTypeCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.telephonicAddresses)) {
        this.telephonicAddresses = data().deepCopy(fields()[8].schema(), other.telephonicAddresses);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'locationActiveIndicator' field.
      * @return The value.
      */
    public java.lang.String getLocationActiveIndicator() {
      return locationActiveIndicator;
    }


    /**
      * Sets the value of the 'locationActiveIndicator' field.
      * @param value The value of 'locationActiveIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setLocationActiveIndicator(java.lang.String value) {
      validate(fields()[0], value);
      this.locationActiveIndicator = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'locationActiveIndicator' field has been set.
      * @return True if the 'locationActiveIndicator' field has been set, false otherwise.
      */
    public boolean hasLocationActiveIndicator() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'locationActiveIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearLocationActiveIndicator() {
      locationActiveIndicator = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'allArrangementStatementAddressIndicator' field.
      * @return The value.
      */
    public java.lang.String getAllArrangementStatementAddressIndicator() {
      return allArrangementStatementAddressIndicator;
    }


    /**
      * Sets the value of the 'allArrangementStatementAddressIndicator' field.
      * @param value The value of 'allArrangementStatementAddressIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setAllArrangementStatementAddressIndicator(java.lang.String value) {
      validate(fields()[1], value);
      this.allArrangementStatementAddressIndicator = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'allArrangementStatementAddressIndicator' field has been set.
      * @return True if the 'allArrangementStatementAddressIndicator' field has been set, false otherwise.
      */
    public boolean hasAllArrangementStatementAddressIndicator() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'allArrangementStatementAddressIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearAllArrangementStatementAddressIndicator() {
      allArrangementStatementAddressIndicator = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'digitalAddresses' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> getDigitalAddresses() {
      return digitalAddresses;
    }


    /**
      * Sets the value of the 'digitalAddresses' field.
      * @param value The value of 'digitalAddresses'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setDigitalAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> value) {
      validate(fields()[2], value);
      this.digitalAddresses = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'digitalAddresses' field has been set.
      * @return True if the 'digitalAddresses' field has been set, false otherwise.
      */
    public boolean hasDigitalAddresses() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'digitalAddresses' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearDigitalAddresses() {
      digitalAddresses = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'emailAddresses' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> getEmailAddresses() {
      return emailAddresses;
    }


    /**
      * Sets the value of the 'emailAddresses' field.
      * @param value The value of 'emailAddresses'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setEmailAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> value) {
      validate(fields()[3], value);
      this.emailAddresses = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'emailAddresses' field has been set.
      * @return True if the 'emailAddresses' field has been set, false otherwise.
      */
    public boolean hasEmailAddresses() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'emailAddresses' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearEmailAddresses() {
      emailAddresses = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'geographicAddresses' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> getGeographicAddresses() {
      return geographicAddresses;
    }


    /**
      * Sets the value of the 'geographicAddresses' field.
      * @param value The value of 'geographicAddresses'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setGeographicAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> value) {
      validate(fields()[4], value);
      this.geographicAddresses = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'geographicAddresses' field has been set.
      * @return True if the 'geographicAddresses' field has been set, false otherwise.
      */
    public boolean hasGeographicAddresses() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'geographicAddresses' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearGeographicAddresses() {
      geographicAddresses = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getLocationEntpsTypeCode() {
      return locationEntpsTypeCode;
    }


    /**
      * Sets the value of the 'locationEntpsTypeCode' field.
      * @param value The value of 'locationEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setLocationEntpsTypeCode(java.lang.String value) {
      validate(fields()[5], value);
      this.locationEntpsTypeCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'locationEntpsTypeCode' field has been set.
      * @return True if the 'locationEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasLocationEntpsTypeCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'locationEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearLocationEntpsTypeCode() {
      locationEntpsTypeCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationTag' field.
      * @return The value.
      */
    public java.lang.String getLocationTag() {
      return locationTag;
    }


    /**
      * Sets the value of the 'locationTag' field.
      * @param value The value of 'locationTag'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setLocationTag(java.lang.String value) {
      validate(fields()[6], value);
      this.locationTag = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'locationTag' field has been set.
      * @return True if the 'locationTag' field has been set, false otherwise.
      */
    public boolean hasLocationTag() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'locationTag' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearLocationTag() {
      locationTag = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationUseEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getLocationUseEntpsTypeCode() {
      return locationUseEntpsTypeCode;
    }


    /**
      * Sets the value of the 'locationUseEntpsTypeCode' field.
      * @param value The value of 'locationUseEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setLocationUseEntpsTypeCode(java.lang.String value) {
      validate(fields()[7], value);
      this.locationUseEntpsTypeCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'locationUseEntpsTypeCode' field has been set.
      * @return True if the 'locationUseEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasLocationUseEntpsTypeCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'locationUseEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearLocationUseEntpsTypeCode() {
      locationUseEntpsTypeCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephonicAddresses' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> getTelephonicAddresses() {
      return telephonicAddresses;
    }


    /**
      * Sets the value of the 'telephonicAddresses' field.
      * @param value The value of 'telephonicAddresses'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder setTelephonicAddresses(java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> value) {
      validate(fields()[8], value);
      this.telephonicAddresses = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'telephonicAddresses' field has been set.
      * @return True if the 'telephonicAddresses' field has been set, false otherwise.
      */
    public boolean hasTelephonicAddresses() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'telephonicAddresses' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Location.Builder clearTelephonicAddresses() {
      telephonicAddresses = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Location build() {
      try {
        Location record = new Location();
        record.locationActiveIndicator = fieldSetFlags()[0] ? this.locationActiveIndicator : (java.lang.String) defaultValue(fields()[0]);
        record.allArrangementStatementAddressIndicator = fieldSetFlags()[1] ? this.allArrangementStatementAddressIndicator : (java.lang.String) defaultValue(fields()[1]);
        record.digitalAddresses = fieldSetFlags()[2] ? this.digitalAddresses : (java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress>) defaultValue(fields()[2]);
        record.emailAddresses = fieldSetFlags()[3] ? this.emailAddresses : (java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress>) defaultValue(fields()[3]);
        record.geographicAddresses = fieldSetFlags()[4] ? this.geographicAddresses : (java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress>) defaultValue(fields()[4]);
        record.locationEntpsTypeCode = fieldSetFlags()[5] ? this.locationEntpsTypeCode : (java.lang.String) defaultValue(fields()[5]);
        record.locationTag = fieldSetFlags()[6] ? this.locationTag : (java.lang.String) defaultValue(fields()[6]);
        record.locationUseEntpsTypeCode = fieldSetFlags()[7] ? this.locationUseEntpsTypeCode : (java.lang.String) defaultValue(fields()[7]);
        record.telephonicAddresses = fieldSetFlags()[8] ? this.telephonicAddresses : (java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress>) defaultValue(fields()[8]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Location>
    WRITER$ = (org.apache.avro.io.DatumWriter<Location>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Location>
    READER$ = (org.apache.avro.io.DatumReader<Location>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.locationActiveIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.locationActiveIndicator);
    }

    if (this.allArrangementStatementAddressIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.allArrangementStatementAddressIndicator);
    }

    if (this.digitalAddresses == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.digitalAddresses.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (za.env.raw.opm.firstidmasterentity.DigitalAddress e0: this.digitalAddresses) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.emailAddresses == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.emailAddresses.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (za.env.raw.opm.firstidmasterentity.EmailAddress e1: this.emailAddresses) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.geographicAddresses == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size2 = this.geographicAddresses.size();
      out.writeArrayStart();
      out.setItemCount(size2);
      long actualSize2 = 0;
      for (za.env.raw.opm.firstidmasterentity.GeographicalAddress e2: this.geographicAddresses) {
        actualSize2++;
        out.startItem();
        e2.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize2 != size2)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size2 + ", but element count was " + actualSize2 + ".");
    }

    if (this.locationEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.locationEntpsTypeCode);
    }

    if (this.locationTag == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.locationTag);
    }

    if (this.locationUseEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.locationUseEntpsTypeCode);
    }

    if (this.telephonicAddresses == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size3 = this.telephonicAddresses.size();
      out.writeArrayStart();
      out.setItemCount(size3);
      long actualSize3 = 0;
      for (za.env.raw.opm.firstidmasterentity.TelephonicAddress e3: this.telephonicAddresses) {
        actualSize3++;
        out.startItem();
        e3.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize3 != size3)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size3 + ", but element count was " + actualSize3 + ".");
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.locationActiveIndicator = null;
      } else {
        this.locationActiveIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.allArrangementStatementAddressIndicator = null;
      } else {
        this.allArrangementStatementAddressIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.digitalAddresses = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> a0 = this.digitalAddresses;
        if (a0 == null) {
          a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.DigitalAddress>((int)size0, SCHEMA$.getField("digitalAddresses").schema().getTypes().get(1));
          this.digitalAddresses = a0;
        } else a0.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.DigitalAddress> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.DigitalAddress>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            za.env.raw.opm.firstidmasterentity.DigitalAddress e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new za.env.raw.opm.firstidmasterentity.DigitalAddress();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.emailAddresses = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> a1 = this.emailAddresses;
        if (a1 == null) {
          a1 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.EmailAddress>((int)size1, SCHEMA$.getField("emailAddresses").schema().getTypes().get(1));
          this.emailAddresses = a1;
        } else a1.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.EmailAddress> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.EmailAddress>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            za.env.raw.opm.firstidmasterentity.EmailAddress e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new za.env.raw.opm.firstidmasterentity.EmailAddress();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.geographicAddresses = null;
      } else {
        long size2 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> a2 = this.geographicAddresses;
        if (a2 == null) {
          a2 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.GeographicalAddress>((int)size2, SCHEMA$.getField("geographicAddresses").schema().getTypes().get(1));
          this.geographicAddresses = a2;
        } else a2.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.GeographicalAddress> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.GeographicalAddress>)a2 : null);
        for ( ; 0 < size2; size2 = in.arrayNext()) {
          for ( ; size2 != 0; size2--) {
            za.env.raw.opm.firstidmasterentity.GeographicalAddress e2 = (ga2 != null ? ga2.peek() : null);
            if (e2 == null) {
              e2 = new za.env.raw.opm.firstidmasterentity.GeographicalAddress();
            }
            e2.customDecode(in);
            a2.add(e2);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.locationEntpsTypeCode = null;
      } else {
        this.locationEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.locationTag = null;
      } else {
        this.locationTag = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.locationUseEntpsTypeCode = null;
      } else {
        this.locationUseEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.telephonicAddresses = null;
      } else {
        long size3 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> a3 = this.telephonicAddresses;
        if (a3 == null) {
          a3 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.TelephonicAddress>((int)size3, SCHEMA$.getField("telephonicAddresses").schema().getTypes().get(1));
          this.telephonicAddresses = a3;
        } else a3.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.TelephonicAddress> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.TelephonicAddress>)a3 : null);
        for ( ; 0 < size3; size3 = in.arrayNext()) {
          for ( ; size3 != 0; size3--) {
            za.env.raw.opm.firstidmasterentity.TelephonicAddress e3 = (ga3 != null ? ga3.peek() : null);
            if (e3 == null) {
              e3 = new za.env.raw.opm.firstidmasterentity.TelephonicAddress();
            }
            e3.customDecode(in);
            a3.add(e3);
          }
        }
      }

    } else {
      for (int i = 0; i < 9; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.locationActiveIndicator = null;
          } else {
            this.locationActiveIndicator = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.allArrangementStatementAddressIndicator = null;
          } else {
            this.allArrangementStatementAddressIndicator = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.digitalAddresses = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.DigitalAddress> a0 = this.digitalAddresses;
            if (a0 == null) {
              a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.DigitalAddress>((int)size0, SCHEMA$.getField("digitalAddresses").schema().getTypes().get(1));
              this.digitalAddresses = a0;
            } else a0.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.DigitalAddress> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.DigitalAddress>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                za.env.raw.opm.firstidmasterentity.DigitalAddress e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new za.env.raw.opm.firstidmasterentity.DigitalAddress();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.emailAddresses = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.EmailAddress> a1 = this.emailAddresses;
            if (a1 == null) {
              a1 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.EmailAddress>((int)size1, SCHEMA$.getField("emailAddresses").schema().getTypes().get(1));
              this.emailAddresses = a1;
            } else a1.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.EmailAddress> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.EmailAddress>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                za.env.raw.opm.firstidmasterentity.EmailAddress e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new za.env.raw.opm.firstidmasterentity.EmailAddress();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.geographicAddresses = null;
          } else {
            long size2 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.GeographicalAddress> a2 = this.geographicAddresses;
            if (a2 == null) {
              a2 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.GeographicalAddress>((int)size2, SCHEMA$.getField("geographicAddresses").schema().getTypes().get(1));
              this.geographicAddresses = a2;
            } else a2.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.GeographicalAddress> ga2 = (a2 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.GeographicalAddress>)a2 : null);
            for ( ; 0 < size2; size2 = in.arrayNext()) {
              for ( ; size2 != 0; size2--) {
                za.env.raw.opm.firstidmasterentity.GeographicalAddress e2 = (ga2 != null ? ga2.peek() : null);
                if (e2 == null) {
                  e2 = new za.env.raw.opm.firstidmasterentity.GeographicalAddress();
                }
                e2.customDecode(in);
                a2.add(e2);
              }
            }
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.locationEntpsTypeCode = null;
          } else {
            this.locationEntpsTypeCode = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.locationTag = null;
          } else {
            this.locationTag = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.locationUseEntpsTypeCode = null;
          } else {
            this.locationUseEntpsTypeCode = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telephonicAddresses = null;
          } else {
            long size3 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.TelephonicAddress> a3 = this.telephonicAddresses;
            if (a3 == null) {
              a3 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.TelephonicAddress>((int)size3, SCHEMA$.getField("telephonicAddresses").schema().getTypes().get(1));
              this.telephonicAddresses = a3;
            } else a3.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.TelephonicAddress> ga3 = (a3 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.TelephonicAddress>)a3 : null);
            for ( ; 0 < size3; size3 = in.arrayNext()) {
              for ( ; size3 != 0; size3--) {
                za.env.raw.opm.firstidmasterentity.TelephonicAddress e3 = (ga3 != null ? ga3.peek() : null);
                if (e3 == null) {
                  e3 = new za.env.raw.opm.firstidmasterentity.TelephonicAddress();
                }
                e3.customDecode(in);
                a3.add(e3);
              }
            }
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










