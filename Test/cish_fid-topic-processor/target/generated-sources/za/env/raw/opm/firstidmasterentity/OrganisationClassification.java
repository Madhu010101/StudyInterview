/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OrganisationClassification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -3936675441037431839L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrganisationClassification\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"organisationClassificationTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationClassificationAttributeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationClassificationValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"organisationClassificationActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrganisationClassification> ENCODER =
      new BinaryMessageEncoder<OrganisationClassification>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrganisationClassification> DECODER =
      new BinaryMessageDecoder<OrganisationClassification>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrganisationClassification> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrganisationClassification> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrganisationClassification> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrganisationClassification>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrganisationClassification to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrganisationClassification from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrganisationClassification instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrganisationClassification fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String organisationClassificationTypeCode;
  @Deprecated public java.lang.String organisationClassificationAttributeName;
  @Deprecated public java.lang.String organisationClassificationValue;
  @Deprecated public java.lang.String organisationClassificationActiveIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrganisationClassification() {}

  /**
   * All-args constructor.
   * @param organisationClassificationTypeCode The new value for organisationClassificationTypeCode
   * @param organisationClassificationAttributeName The new value for organisationClassificationAttributeName
   * @param organisationClassificationValue The new value for organisationClassificationValue
   * @param organisationClassificationActiveIndicator The new value for organisationClassificationActiveIndicator
   */
  public OrganisationClassification(java.lang.String organisationClassificationTypeCode, java.lang.String organisationClassificationAttributeName, java.lang.String organisationClassificationValue, java.lang.String organisationClassificationActiveIndicator) {
    this.organisationClassificationTypeCode = organisationClassificationTypeCode;
    this.organisationClassificationAttributeName = organisationClassificationAttributeName;
    this.organisationClassificationValue = organisationClassificationValue;
    this.organisationClassificationActiveIndicator = organisationClassificationActiveIndicator;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return organisationClassificationTypeCode;
    case 1: return organisationClassificationAttributeName;
    case 2: return organisationClassificationValue;
    case 3: return organisationClassificationActiveIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: organisationClassificationTypeCode = value$ != null ? value$.toString() : null; break;
    case 1: organisationClassificationAttributeName = value$ != null ? value$.toString() : null; break;
    case 2: organisationClassificationValue = value$ != null ? value$.toString() : null; break;
    case 3: organisationClassificationActiveIndicator = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'organisationClassificationTypeCode' field.
   * @return The value of the 'organisationClassificationTypeCode' field.
   */
  public java.lang.String getOrganisationClassificationTypeCode() {
    return organisationClassificationTypeCode;
  }


  /**
   * Sets the value of the 'organisationClassificationTypeCode' field.
   * @param value the value to set.
   */
  public void setOrganisationClassificationTypeCode(java.lang.String value) {
    this.organisationClassificationTypeCode = value;
  }

  /**
   * Gets the value of the 'organisationClassificationAttributeName' field.
   * @return The value of the 'organisationClassificationAttributeName' field.
   */
  public java.lang.String getOrganisationClassificationAttributeName() {
    return organisationClassificationAttributeName;
  }


  /**
   * Sets the value of the 'organisationClassificationAttributeName' field.
   * @param value the value to set.
   */
  public void setOrganisationClassificationAttributeName(java.lang.String value) {
    this.organisationClassificationAttributeName = value;
  }

  /**
   * Gets the value of the 'organisationClassificationValue' field.
   * @return The value of the 'organisationClassificationValue' field.
   */
  public java.lang.String getOrganisationClassificationValue() {
    return organisationClassificationValue;
  }


  /**
   * Sets the value of the 'organisationClassificationValue' field.
   * @param value the value to set.
   */
  public void setOrganisationClassificationValue(java.lang.String value) {
    this.organisationClassificationValue = value;
  }

  /**
   * Gets the value of the 'organisationClassificationActiveIndicator' field.
   * @return The value of the 'organisationClassificationActiveIndicator' field.
   */
  public java.lang.String getOrganisationClassificationActiveIndicator() {
    return organisationClassificationActiveIndicator;
  }


  /**
   * Sets the value of the 'organisationClassificationActiveIndicator' field.
   * @param value the value to set.
   */
  public void setOrganisationClassificationActiveIndicator(java.lang.String value) {
    this.organisationClassificationActiveIndicator = value;
  }

  /**
   * Creates a new OrganisationClassification RecordBuilder.
   * @return A new OrganisationClassification RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder();
  }

  /**
   * Creates a new OrganisationClassification RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrganisationClassification RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder newBuilder(za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder(other);
    }
  }

  /**
   * Creates a new OrganisationClassification RecordBuilder by copying an existing OrganisationClassification instance.
   * @param other The existing instance to copy.
   * @return A new OrganisationClassification RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder newBuilder(za.env.raw.opm.firstidmasterentity.OrganisationClassification other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrganisationClassification instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrganisationClassification>
    implements org.apache.avro.data.RecordBuilder<OrganisationClassification> {

    private java.lang.String organisationClassificationTypeCode;
    private java.lang.String organisationClassificationAttributeName;
    private java.lang.String organisationClassificationValue;
    private java.lang.String organisationClassificationActiveIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.organisationClassificationTypeCode)) {
        this.organisationClassificationTypeCode = data().deepCopy(fields()[0].schema(), other.organisationClassificationTypeCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.organisationClassificationAttributeName)) {
        this.organisationClassificationAttributeName = data().deepCopy(fields()[1].schema(), other.organisationClassificationAttributeName);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.organisationClassificationValue)) {
        this.organisationClassificationValue = data().deepCopy(fields()[2].schema(), other.organisationClassificationValue);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.organisationClassificationActiveIndicator)) {
        this.organisationClassificationActiveIndicator = data().deepCopy(fields()[3].schema(), other.organisationClassificationActiveIndicator);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing OrganisationClassification instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.OrganisationClassification other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.organisationClassificationTypeCode)) {
        this.organisationClassificationTypeCode = data().deepCopy(fields()[0].schema(), other.organisationClassificationTypeCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.organisationClassificationAttributeName)) {
        this.organisationClassificationAttributeName = data().deepCopy(fields()[1].schema(), other.organisationClassificationAttributeName);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.organisationClassificationValue)) {
        this.organisationClassificationValue = data().deepCopy(fields()[2].schema(), other.organisationClassificationValue);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.organisationClassificationActiveIndicator)) {
        this.organisationClassificationActiveIndicator = data().deepCopy(fields()[3].schema(), other.organisationClassificationActiveIndicator);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'organisationClassificationTypeCode' field.
      * @return The value.
      */
    public java.lang.String getOrganisationClassificationTypeCode() {
      return organisationClassificationTypeCode;
    }


    /**
      * Sets the value of the 'organisationClassificationTypeCode' field.
      * @param value The value of 'organisationClassificationTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder setOrganisationClassificationTypeCode(java.lang.String value) {
      validate(fields()[0], value);
      this.organisationClassificationTypeCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationClassificationTypeCode' field has been set.
      * @return True if the 'organisationClassificationTypeCode' field has been set, false otherwise.
      */
    public boolean hasOrganisationClassificationTypeCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'organisationClassificationTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder clearOrganisationClassificationTypeCode() {
      organisationClassificationTypeCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'organisationClassificationAttributeName' field.
      * @return The value.
      */
    public java.lang.String getOrganisationClassificationAttributeName() {
      return organisationClassificationAttributeName;
    }


    /**
      * Sets the value of the 'organisationClassificationAttributeName' field.
      * @param value The value of 'organisationClassificationAttributeName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder setOrganisationClassificationAttributeName(java.lang.String value) {
      validate(fields()[1], value);
      this.organisationClassificationAttributeName = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationClassificationAttributeName' field has been set.
      * @return True if the 'organisationClassificationAttributeName' field has been set, false otherwise.
      */
    public boolean hasOrganisationClassificationAttributeName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'organisationClassificationAttributeName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder clearOrganisationClassificationAttributeName() {
      organisationClassificationAttributeName = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'organisationClassificationValue' field.
      * @return The value.
      */
    public java.lang.String getOrganisationClassificationValue() {
      return organisationClassificationValue;
    }


    /**
      * Sets the value of the 'organisationClassificationValue' field.
      * @param value The value of 'organisationClassificationValue'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder setOrganisationClassificationValue(java.lang.String value) {
      validate(fields()[2], value);
      this.organisationClassificationValue = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationClassificationValue' field has been set.
      * @return True if the 'organisationClassificationValue' field has been set, false otherwise.
      */
    public boolean hasOrganisationClassificationValue() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'organisationClassificationValue' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder clearOrganisationClassificationValue() {
      organisationClassificationValue = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'organisationClassificationActiveIndicator' field.
      * @return The value.
      */
    public java.lang.String getOrganisationClassificationActiveIndicator() {
      return organisationClassificationActiveIndicator;
    }


    /**
      * Sets the value of the 'organisationClassificationActiveIndicator' field.
      * @param value The value of 'organisationClassificationActiveIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder setOrganisationClassificationActiveIndicator(java.lang.String value) {
      validate(fields()[3], value);
      this.organisationClassificationActiveIndicator = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'organisationClassificationActiveIndicator' field has been set.
      * @return True if the 'organisationClassificationActiveIndicator' field has been set, false otherwise.
      */
    public boolean hasOrganisationClassificationActiveIndicator() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'organisationClassificationActiveIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.OrganisationClassification.Builder clearOrganisationClassificationActiveIndicator() {
      organisationClassificationActiveIndicator = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrganisationClassification build() {
      try {
        OrganisationClassification record = new OrganisationClassification();
        record.organisationClassificationTypeCode = fieldSetFlags()[0] ? this.organisationClassificationTypeCode : (java.lang.String) defaultValue(fields()[0]);
        record.organisationClassificationAttributeName = fieldSetFlags()[1] ? this.organisationClassificationAttributeName : (java.lang.String) defaultValue(fields()[1]);
        record.organisationClassificationValue = fieldSetFlags()[2] ? this.organisationClassificationValue : (java.lang.String) defaultValue(fields()[2]);
        record.organisationClassificationActiveIndicator = fieldSetFlags()[3] ? this.organisationClassificationActiveIndicator : (java.lang.String) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrganisationClassification>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrganisationClassification>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrganisationClassification>
    READER$ = (org.apache.avro.io.DatumReader<OrganisationClassification>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.organisationClassificationTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.organisationClassificationTypeCode);
    }

    if (this.organisationClassificationAttributeName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.organisationClassificationAttributeName);
    }

    if (this.organisationClassificationValue == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.organisationClassificationValue);
    }

    if (this.organisationClassificationActiveIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.organisationClassificationActiveIndicator);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationClassificationTypeCode = null;
      } else {
        this.organisationClassificationTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationClassificationAttributeName = null;
      } else {
        this.organisationClassificationAttributeName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationClassificationValue = null;
      } else {
        this.organisationClassificationValue = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.organisationClassificationActiveIndicator = null;
      } else {
        this.organisationClassificationActiveIndicator = in.readString();
      }

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationClassificationTypeCode = null;
          } else {
            this.organisationClassificationTypeCode = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationClassificationAttributeName = null;
          } else {
            this.organisationClassificationAttributeName = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationClassificationValue = null;
          } else {
            this.organisationClassificationValue = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.organisationClassificationActiveIndicator = null;
          } else {
            this.organisationClassificationActiveIndicator = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










