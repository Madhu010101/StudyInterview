/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class TelephonicAddress extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 2148119625684819004L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"TelephonicAddress\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"telephoneAreaDailCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneCountryDailCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneExtensionNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneFullNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"telephoneNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<TelephonicAddress> ENCODER =
      new BinaryMessageEncoder<TelephonicAddress>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<TelephonicAddress> DECODER =
      new BinaryMessageDecoder<TelephonicAddress>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<TelephonicAddress> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<TelephonicAddress> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<TelephonicAddress> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<TelephonicAddress>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this TelephonicAddress to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a TelephonicAddress from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a TelephonicAddress instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static TelephonicAddress fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String telephoneAreaDailCode;
  @Deprecated public java.lang.String telephoneCountryDailCode;
  @Deprecated public java.lang.String telephoneEntpsTypeCode;
  @Deprecated public java.lang.String telephoneExtensionNumber;
  @Deprecated public java.lang.String telephoneFullNumber;
  @Deprecated public java.lang.String telephoneNumber;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public TelephonicAddress() {}

  /**
   * All-args constructor.
   * @param telephoneAreaDailCode The new value for telephoneAreaDailCode
   * @param telephoneCountryDailCode The new value for telephoneCountryDailCode
   * @param telephoneEntpsTypeCode The new value for telephoneEntpsTypeCode
   * @param telephoneExtensionNumber The new value for telephoneExtensionNumber
   * @param telephoneFullNumber The new value for telephoneFullNumber
   * @param telephoneNumber The new value for telephoneNumber
   */
  public TelephonicAddress(java.lang.String telephoneAreaDailCode, java.lang.String telephoneCountryDailCode, java.lang.String telephoneEntpsTypeCode, java.lang.String telephoneExtensionNumber, java.lang.String telephoneFullNumber, java.lang.String telephoneNumber) {
    this.telephoneAreaDailCode = telephoneAreaDailCode;
    this.telephoneCountryDailCode = telephoneCountryDailCode;
    this.telephoneEntpsTypeCode = telephoneEntpsTypeCode;
    this.telephoneExtensionNumber = telephoneExtensionNumber;
    this.telephoneFullNumber = telephoneFullNumber;
    this.telephoneNumber = telephoneNumber;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return telephoneAreaDailCode;
    case 1: return telephoneCountryDailCode;
    case 2: return telephoneEntpsTypeCode;
    case 3: return telephoneExtensionNumber;
    case 4: return telephoneFullNumber;
    case 5: return telephoneNumber;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: telephoneAreaDailCode = value$ != null ? value$.toString() : null; break;
    case 1: telephoneCountryDailCode = value$ != null ? value$.toString() : null; break;
    case 2: telephoneEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 3: telephoneExtensionNumber = value$ != null ? value$.toString() : null; break;
    case 4: telephoneFullNumber = value$ != null ? value$.toString() : null; break;
    case 5: telephoneNumber = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'telephoneAreaDailCode' field.
   * @return The value of the 'telephoneAreaDailCode' field.
   */
  public java.lang.String getTelephoneAreaDailCode() {
    return telephoneAreaDailCode;
  }


  /**
   * Sets the value of the 'telephoneAreaDailCode' field.
   * @param value the value to set.
   */
  public void setTelephoneAreaDailCode(java.lang.String value) {
    this.telephoneAreaDailCode = value;
  }

  /**
   * Gets the value of the 'telephoneCountryDailCode' field.
   * @return The value of the 'telephoneCountryDailCode' field.
   */
  public java.lang.String getTelephoneCountryDailCode() {
    return telephoneCountryDailCode;
  }


  /**
   * Sets the value of the 'telephoneCountryDailCode' field.
   * @param value the value to set.
   */
  public void setTelephoneCountryDailCode(java.lang.String value) {
    this.telephoneCountryDailCode = value;
  }

  /**
   * Gets the value of the 'telephoneEntpsTypeCode' field.
   * @return The value of the 'telephoneEntpsTypeCode' field.
   */
  public java.lang.String getTelephoneEntpsTypeCode() {
    return telephoneEntpsTypeCode;
  }


  /**
   * Sets the value of the 'telephoneEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setTelephoneEntpsTypeCode(java.lang.String value) {
    this.telephoneEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'telephoneExtensionNumber' field.
   * @return The value of the 'telephoneExtensionNumber' field.
   */
  public java.lang.String getTelephoneExtensionNumber() {
    return telephoneExtensionNumber;
  }


  /**
   * Sets the value of the 'telephoneExtensionNumber' field.
   * @param value the value to set.
   */
  public void setTelephoneExtensionNumber(java.lang.String value) {
    this.telephoneExtensionNumber = value;
  }

  /**
   * Gets the value of the 'telephoneFullNumber' field.
   * @return The value of the 'telephoneFullNumber' field.
   */
  public java.lang.String getTelephoneFullNumber() {
    return telephoneFullNumber;
  }


  /**
   * Sets the value of the 'telephoneFullNumber' field.
   * @param value the value to set.
   */
  public void setTelephoneFullNumber(java.lang.String value) {
    this.telephoneFullNumber = value;
  }

  /**
   * Gets the value of the 'telephoneNumber' field.
   * @return The value of the 'telephoneNumber' field.
   */
  public java.lang.String getTelephoneNumber() {
    return telephoneNumber;
  }


  /**
   * Sets the value of the 'telephoneNumber' field.
   * @param value the value to set.
   */
  public void setTelephoneNumber(java.lang.String value) {
    this.telephoneNumber = value;
  }

  /**
   * Creates a new TelephonicAddress RecordBuilder.
   * @return A new TelephonicAddress RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder();
  }

  /**
   * Creates a new TelephonicAddress RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new TelephonicAddress RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder newBuilder(za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder(other);
    }
  }

  /**
   * Creates a new TelephonicAddress RecordBuilder by copying an existing TelephonicAddress instance.
   * @param other The existing instance to copy.
   * @return A new TelephonicAddress RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder newBuilder(za.env.raw.opm.firstidmasterentity.TelephonicAddress other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder(other);
    }
  }

  /**
   * RecordBuilder for TelephonicAddress instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<TelephonicAddress>
    implements org.apache.avro.data.RecordBuilder<TelephonicAddress> {

    private java.lang.String telephoneAreaDailCode;
    private java.lang.String telephoneCountryDailCode;
    private java.lang.String telephoneEntpsTypeCode;
    private java.lang.String telephoneExtensionNumber;
    private java.lang.String telephoneFullNumber;
    private java.lang.String telephoneNumber;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.telephoneAreaDailCode)) {
        this.telephoneAreaDailCode = data().deepCopy(fields()[0].schema(), other.telephoneAreaDailCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.telephoneCountryDailCode)) {
        this.telephoneCountryDailCode = data().deepCopy(fields()[1].schema(), other.telephoneCountryDailCode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.telephoneEntpsTypeCode)) {
        this.telephoneEntpsTypeCode = data().deepCopy(fields()[2].schema(), other.telephoneEntpsTypeCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.telephoneExtensionNumber)) {
        this.telephoneExtensionNumber = data().deepCopy(fields()[3].schema(), other.telephoneExtensionNumber);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.telephoneFullNumber)) {
        this.telephoneFullNumber = data().deepCopy(fields()[4].schema(), other.telephoneFullNumber);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.telephoneNumber)) {
        this.telephoneNumber = data().deepCopy(fields()[5].schema(), other.telephoneNumber);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
    }

    /**
     * Creates a Builder by copying an existing TelephonicAddress instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.TelephonicAddress other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.telephoneAreaDailCode)) {
        this.telephoneAreaDailCode = data().deepCopy(fields()[0].schema(), other.telephoneAreaDailCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.telephoneCountryDailCode)) {
        this.telephoneCountryDailCode = data().deepCopy(fields()[1].schema(), other.telephoneCountryDailCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.telephoneEntpsTypeCode)) {
        this.telephoneEntpsTypeCode = data().deepCopy(fields()[2].schema(), other.telephoneEntpsTypeCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.telephoneExtensionNumber)) {
        this.telephoneExtensionNumber = data().deepCopy(fields()[3].schema(), other.telephoneExtensionNumber);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.telephoneFullNumber)) {
        this.telephoneFullNumber = data().deepCopy(fields()[4].schema(), other.telephoneFullNumber);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.telephoneNumber)) {
        this.telephoneNumber = data().deepCopy(fields()[5].schema(), other.telephoneNumber);
        fieldSetFlags()[5] = true;
      }
    }

    /**
      * Gets the value of the 'telephoneAreaDailCode' field.
      * @return The value.
      */
    public java.lang.String getTelephoneAreaDailCode() {
      return telephoneAreaDailCode;
    }


    /**
      * Sets the value of the 'telephoneAreaDailCode' field.
      * @param value The value of 'telephoneAreaDailCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder setTelephoneAreaDailCode(java.lang.String value) {
      validate(fields()[0], value);
      this.telephoneAreaDailCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'telephoneAreaDailCode' field has been set.
      * @return True if the 'telephoneAreaDailCode' field has been set, false otherwise.
      */
    public boolean hasTelephoneAreaDailCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'telephoneAreaDailCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder clearTelephoneAreaDailCode() {
      telephoneAreaDailCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephoneCountryDailCode' field.
      * @return The value.
      */
    public java.lang.String getTelephoneCountryDailCode() {
      return telephoneCountryDailCode;
    }


    /**
      * Sets the value of the 'telephoneCountryDailCode' field.
      * @param value The value of 'telephoneCountryDailCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder setTelephoneCountryDailCode(java.lang.String value) {
      validate(fields()[1], value);
      this.telephoneCountryDailCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'telephoneCountryDailCode' field has been set.
      * @return True if the 'telephoneCountryDailCode' field has been set, false otherwise.
      */
    public boolean hasTelephoneCountryDailCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'telephoneCountryDailCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder clearTelephoneCountryDailCode() {
      telephoneCountryDailCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephoneEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getTelephoneEntpsTypeCode() {
      return telephoneEntpsTypeCode;
    }


    /**
      * Sets the value of the 'telephoneEntpsTypeCode' field.
      * @param value The value of 'telephoneEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder setTelephoneEntpsTypeCode(java.lang.String value) {
      validate(fields()[2], value);
      this.telephoneEntpsTypeCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'telephoneEntpsTypeCode' field has been set.
      * @return True if the 'telephoneEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasTelephoneEntpsTypeCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'telephoneEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder clearTelephoneEntpsTypeCode() {
      telephoneEntpsTypeCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephoneExtensionNumber' field.
      * @return The value.
      */
    public java.lang.String getTelephoneExtensionNumber() {
      return telephoneExtensionNumber;
    }


    /**
      * Sets the value of the 'telephoneExtensionNumber' field.
      * @param value The value of 'telephoneExtensionNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder setTelephoneExtensionNumber(java.lang.String value) {
      validate(fields()[3], value);
      this.telephoneExtensionNumber = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'telephoneExtensionNumber' field has been set.
      * @return True if the 'telephoneExtensionNumber' field has been set, false otherwise.
      */
    public boolean hasTelephoneExtensionNumber() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'telephoneExtensionNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder clearTelephoneExtensionNumber() {
      telephoneExtensionNumber = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephoneFullNumber' field.
      * @return The value.
      */
    public java.lang.String getTelephoneFullNumber() {
      return telephoneFullNumber;
    }


    /**
      * Sets the value of the 'telephoneFullNumber' field.
      * @param value The value of 'telephoneFullNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder setTelephoneFullNumber(java.lang.String value) {
      validate(fields()[4], value);
      this.telephoneFullNumber = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'telephoneFullNumber' field has been set.
      * @return True if the 'telephoneFullNumber' field has been set, false otherwise.
      */
    public boolean hasTelephoneFullNumber() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'telephoneFullNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder clearTelephoneFullNumber() {
      telephoneFullNumber = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'telephoneNumber' field.
      * @return The value.
      */
    public java.lang.String getTelephoneNumber() {
      return telephoneNumber;
    }


    /**
      * Sets the value of the 'telephoneNumber' field.
      * @param value The value of 'telephoneNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder setTelephoneNumber(java.lang.String value) {
      validate(fields()[5], value);
      this.telephoneNumber = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'telephoneNumber' field has been set.
      * @return True if the 'telephoneNumber' field has been set, false otherwise.
      */
    public boolean hasTelephoneNumber() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'telephoneNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.TelephonicAddress.Builder clearTelephoneNumber() {
      telephoneNumber = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public TelephonicAddress build() {
      try {
        TelephonicAddress record = new TelephonicAddress();
        record.telephoneAreaDailCode = fieldSetFlags()[0] ? this.telephoneAreaDailCode : (java.lang.String) defaultValue(fields()[0]);
        record.telephoneCountryDailCode = fieldSetFlags()[1] ? this.telephoneCountryDailCode : (java.lang.String) defaultValue(fields()[1]);
        record.telephoneEntpsTypeCode = fieldSetFlags()[2] ? this.telephoneEntpsTypeCode : (java.lang.String) defaultValue(fields()[2]);
        record.telephoneExtensionNumber = fieldSetFlags()[3] ? this.telephoneExtensionNumber : (java.lang.String) defaultValue(fields()[3]);
        record.telephoneFullNumber = fieldSetFlags()[4] ? this.telephoneFullNumber : (java.lang.String) defaultValue(fields()[4]);
        record.telephoneNumber = fieldSetFlags()[5] ? this.telephoneNumber : (java.lang.String) defaultValue(fields()[5]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<TelephonicAddress>
    WRITER$ = (org.apache.avro.io.DatumWriter<TelephonicAddress>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<TelephonicAddress>
    READER$ = (org.apache.avro.io.DatumReader<TelephonicAddress>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.telephoneAreaDailCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.telephoneAreaDailCode);
    }

    if (this.telephoneCountryDailCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.telephoneCountryDailCode);
    }

    if (this.telephoneEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.telephoneEntpsTypeCode);
    }

    if (this.telephoneExtensionNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.telephoneExtensionNumber);
    }

    if (this.telephoneFullNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.telephoneFullNumber);
    }

    if (this.telephoneNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.telephoneNumber);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.telephoneAreaDailCode = null;
      } else {
        this.telephoneAreaDailCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.telephoneCountryDailCode = null;
      } else {
        this.telephoneCountryDailCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.telephoneEntpsTypeCode = null;
      } else {
        this.telephoneEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.telephoneExtensionNumber = null;
      } else {
        this.telephoneExtensionNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.telephoneFullNumber = null;
      } else {
        this.telephoneFullNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.telephoneNumber = null;
      } else {
        this.telephoneNumber = in.readString();
      }

    } else {
      for (int i = 0; i < 6; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telephoneAreaDailCode = null;
          } else {
            this.telephoneAreaDailCode = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telephoneCountryDailCode = null;
          } else {
            this.telephoneCountryDailCode = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telephoneEntpsTypeCode = null;
          } else {
            this.telephoneEntpsTypeCode = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telephoneExtensionNumber = null;
          } else {
            this.telephoneExtensionNumber = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telephoneFullNumber = null;
          } else {
            this.telephoneFullNumber = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.telephoneNumber = null;
          } else {
            this.telephoneNumber = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










