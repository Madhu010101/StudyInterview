/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class EventHeader extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5188100423898860907L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"EventHeader\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"correlations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Correlation\",\"fields\":[{\"name\":\"correlationName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"correlationValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"java-class\":\"java.util.Set\"}]},{\"name\":\"eventAction\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventArchContext\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventDateTime\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventOrigins\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"EventOrigin\",\"fields\":[{\"name\":\"eventOriginName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventOriginSourceSystemCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"eventOriginType\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]},\"java-class\":\"java.util.Set\"}]},{\"name\":\"eventUUID\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"sourceSystemCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<EventHeader> ENCODER =
      new BinaryMessageEncoder<EventHeader>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<EventHeader> DECODER =
      new BinaryMessageDecoder<EventHeader>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<EventHeader> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<EventHeader> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<EventHeader> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<EventHeader>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this EventHeader to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a EventHeader from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a EventHeader instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static EventHeader fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> correlations;
  @Deprecated public java.lang.String eventAction;
  @Deprecated public java.lang.String eventArchContext;
  @Deprecated public java.lang.String eventDateTime;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> eventOrigins;
  @Deprecated public java.lang.String eventUUID;
  @Deprecated public java.lang.String sourceSystemCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public EventHeader() {}

  /**
   * All-args constructor.
   * @param correlations The new value for correlations
   * @param eventAction The new value for eventAction
   * @param eventArchContext The new value for eventArchContext
   * @param eventDateTime The new value for eventDateTime
   * @param eventOrigins The new value for eventOrigins
   * @param eventUUID The new value for eventUUID
   * @param sourceSystemCode The new value for sourceSystemCode
   */
  public EventHeader(java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> correlations, java.lang.String eventAction, java.lang.String eventArchContext, java.lang.String eventDateTime, java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> eventOrigins, java.lang.String eventUUID, java.lang.String sourceSystemCode) {
    this.correlations = correlations;
    this.eventAction = eventAction;
    this.eventArchContext = eventArchContext;
    this.eventDateTime = eventDateTime;
    this.eventOrigins = eventOrigins;
    this.eventUUID = eventUUID;
    this.sourceSystemCode = sourceSystemCode;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return correlations;
    case 1: return eventAction;
    case 2: return eventArchContext;
    case 3: return eventDateTime;
    case 4: return eventOrigins;
    case 5: return eventUUID;
    case 6: return sourceSystemCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: correlations = (java.util.List<za.env.raw.opm.firstidmasterentity.Correlation>)value$; break;
    case 1: eventAction = value$ != null ? value$.toString() : null; break;
    case 2: eventArchContext = value$ != null ? value$.toString() : null; break;
    case 3: eventDateTime = value$ != null ? value$.toString() : null; break;
    case 4: eventOrigins = (java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin>)value$; break;
    case 5: eventUUID = value$ != null ? value$.toString() : null; break;
    case 6: sourceSystemCode = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'correlations' field.
   * @return The value of the 'correlations' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> getCorrelations() {
    return correlations;
  }


  /**
   * Sets the value of the 'correlations' field.
   * @param value the value to set.
   */
  public void setCorrelations(java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> value) {
    this.correlations = value;
  }

  /**
   * Gets the value of the 'eventAction' field.
   * @return The value of the 'eventAction' field.
   */
  public java.lang.String getEventAction() {
    return eventAction;
  }


  /**
   * Sets the value of the 'eventAction' field.
   * @param value the value to set.
   */
  public void setEventAction(java.lang.String value) {
    this.eventAction = value;
  }

  /**
   * Gets the value of the 'eventArchContext' field.
   * @return The value of the 'eventArchContext' field.
   */
  public java.lang.String getEventArchContext() {
    return eventArchContext;
  }


  /**
   * Sets the value of the 'eventArchContext' field.
   * @param value the value to set.
   */
  public void setEventArchContext(java.lang.String value) {
    this.eventArchContext = value;
  }

  /**
   * Gets the value of the 'eventDateTime' field.
   * @return The value of the 'eventDateTime' field.
   */
  public java.lang.String getEventDateTime() {
    return eventDateTime;
  }


  /**
   * Sets the value of the 'eventDateTime' field.
   * @param value the value to set.
   */
  public void setEventDateTime(java.lang.String value) {
    this.eventDateTime = value;
  }

  /**
   * Gets the value of the 'eventOrigins' field.
   * @return The value of the 'eventOrigins' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> getEventOrigins() {
    return eventOrigins;
  }


  /**
   * Sets the value of the 'eventOrigins' field.
   * @param value the value to set.
   */
  public void setEventOrigins(java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> value) {
    this.eventOrigins = value;
  }

  /**
   * Gets the value of the 'eventUUID' field.
   * @return The value of the 'eventUUID' field.
   */
  public java.lang.String getEventUUID() {
    return eventUUID;
  }


  /**
   * Sets the value of the 'eventUUID' field.
   * @param value the value to set.
   */
  public void setEventUUID(java.lang.String value) {
    this.eventUUID = value;
  }

  /**
   * Gets the value of the 'sourceSystemCode' field.
   * @return The value of the 'sourceSystemCode' field.
   */
  public java.lang.String getSourceSystemCode() {
    return sourceSystemCode;
  }


  /**
   * Sets the value of the 'sourceSystemCode' field.
   * @param value the value to set.
   */
  public void setSourceSystemCode(java.lang.String value) {
    this.sourceSystemCode = value;
  }

  /**
   * Creates a new EventHeader RecordBuilder.
   * @return A new EventHeader RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.EventHeader.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.EventHeader.Builder();
  }

  /**
   * Creates a new EventHeader RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new EventHeader RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.EventHeader.Builder newBuilder(za.env.raw.opm.firstidmasterentity.EventHeader.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.EventHeader.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.EventHeader.Builder(other);
    }
  }

  /**
   * Creates a new EventHeader RecordBuilder by copying an existing EventHeader instance.
   * @param other The existing instance to copy.
   * @return A new EventHeader RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.EventHeader.Builder newBuilder(za.env.raw.opm.firstidmasterentity.EventHeader other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.EventHeader.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.EventHeader.Builder(other);
    }
  }

  /**
   * RecordBuilder for EventHeader instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<EventHeader>
    implements org.apache.avro.data.RecordBuilder<EventHeader> {

    private java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> correlations;
    private java.lang.String eventAction;
    private java.lang.String eventArchContext;
    private java.lang.String eventDateTime;
    private java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> eventOrigins;
    private java.lang.String eventUUID;
    private java.lang.String sourceSystemCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.EventHeader.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.correlations)) {
        this.correlations = data().deepCopy(fields()[0].schema(), other.correlations);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.eventAction)) {
        this.eventAction = data().deepCopy(fields()[1].schema(), other.eventAction);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.eventArchContext)) {
        this.eventArchContext = data().deepCopy(fields()[2].schema(), other.eventArchContext);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.eventDateTime)) {
        this.eventDateTime = data().deepCopy(fields()[3].schema(), other.eventDateTime);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.eventOrigins)) {
        this.eventOrigins = data().deepCopy(fields()[4].schema(), other.eventOrigins);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.eventUUID)) {
        this.eventUUID = data().deepCopy(fields()[5].schema(), other.eventUUID);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.sourceSystemCode)) {
        this.sourceSystemCode = data().deepCopy(fields()[6].schema(), other.sourceSystemCode);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
    }

    /**
     * Creates a Builder by copying an existing EventHeader instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.EventHeader other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.correlations)) {
        this.correlations = data().deepCopy(fields()[0].schema(), other.correlations);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.eventAction)) {
        this.eventAction = data().deepCopy(fields()[1].schema(), other.eventAction);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.eventArchContext)) {
        this.eventArchContext = data().deepCopy(fields()[2].schema(), other.eventArchContext);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.eventDateTime)) {
        this.eventDateTime = data().deepCopy(fields()[3].schema(), other.eventDateTime);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.eventOrigins)) {
        this.eventOrigins = data().deepCopy(fields()[4].schema(), other.eventOrigins);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.eventUUID)) {
        this.eventUUID = data().deepCopy(fields()[5].schema(), other.eventUUID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.sourceSystemCode)) {
        this.sourceSystemCode = data().deepCopy(fields()[6].schema(), other.sourceSystemCode);
        fieldSetFlags()[6] = true;
      }
    }

    /**
      * Gets the value of the 'correlations' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> getCorrelations() {
      return correlations;
    }


    /**
      * Sets the value of the 'correlations' field.
      * @param value The value of 'correlations'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder setCorrelations(java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> value) {
      validate(fields()[0], value);
      this.correlations = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'correlations' field has been set.
      * @return True if the 'correlations' field has been set, false otherwise.
      */
    public boolean hasCorrelations() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'correlations' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder clearCorrelations() {
      correlations = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventAction' field.
      * @return The value.
      */
    public java.lang.String getEventAction() {
      return eventAction;
    }


    /**
      * Sets the value of the 'eventAction' field.
      * @param value The value of 'eventAction'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder setEventAction(java.lang.String value) {
      validate(fields()[1], value);
      this.eventAction = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'eventAction' field has been set.
      * @return True if the 'eventAction' field has been set, false otherwise.
      */
    public boolean hasEventAction() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'eventAction' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder clearEventAction() {
      eventAction = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventArchContext' field.
      * @return The value.
      */
    public java.lang.String getEventArchContext() {
      return eventArchContext;
    }


    /**
      * Sets the value of the 'eventArchContext' field.
      * @param value The value of 'eventArchContext'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder setEventArchContext(java.lang.String value) {
      validate(fields()[2], value);
      this.eventArchContext = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'eventArchContext' field has been set.
      * @return True if the 'eventArchContext' field has been set, false otherwise.
      */
    public boolean hasEventArchContext() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'eventArchContext' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder clearEventArchContext() {
      eventArchContext = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventDateTime' field.
      * @return The value.
      */
    public java.lang.String getEventDateTime() {
      return eventDateTime;
    }


    /**
      * Sets the value of the 'eventDateTime' field.
      * @param value The value of 'eventDateTime'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder setEventDateTime(java.lang.String value) {
      validate(fields()[3], value);
      this.eventDateTime = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'eventDateTime' field has been set.
      * @return True if the 'eventDateTime' field has been set, false otherwise.
      */
    public boolean hasEventDateTime() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'eventDateTime' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder clearEventDateTime() {
      eventDateTime = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventOrigins' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> getEventOrigins() {
      return eventOrigins;
    }


    /**
      * Sets the value of the 'eventOrigins' field.
      * @param value The value of 'eventOrigins'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder setEventOrigins(java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> value) {
      validate(fields()[4], value);
      this.eventOrigins = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'eventOrigins' field has been set.
      * @return True if the 'eventOrigins' field has been set, false otherwise.
      */
    public boolean hasEventOrigins() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'eventOrigins' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder clearEventOrigins() {
      eventOrigins = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'eventUUID' field.
      * @return The value.
      */
    public java.lang.String getEventUUID() {
      return eventUUID;
    }


    /**
      * Sets the value of the 'eventUUID' field.
      * @param value The value of 'eventUUID'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder setEventUUID(java.lang.String value) {
      validate(fields()[5], value);
      this.eventUUID = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'eventUUID' field has been set.
      * @return True if the 'eventUUID' field has been set, false otherwise.
      */
    public boolean hasEventUUID() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'eventUUID' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder clearEventUUID() {
      eventUUID = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'sourceSystemCode' field.
      * @return The value.
      */
    public java.lang.String getSourceSystemCode() {
      return sourceSystemCode;
    }


    /**
      * Sets the value of the 'sourceSystemCode' field.
      * @param value The value of 'sourceSystemCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder setSourceSystemCode(java.lang.String value) {
      validate(fields()[6], value);
      this.sourceSystemCode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'sourceSystemCode' field has been set.
      * @return True if the 'sourceSystemCode' field has been set, false otherwise.
      */
    public boolean hasSourceSystemCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'sourceSystemCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.EventHeader.Builder clearSourceSystemCode() {
      sourceSystemCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public EventHeader build() {
      try {
        EventHeader record = new EventHeader();
        record.correlations = fieldSetFlags()[0] ? this.correlations : (java.util.List<za.env.raw.opm.firstidmasterentity.Correlation>) defaultValue(fields()[0]);
        record.eventAction = fieldSetFlags()[1] ? this.eventAction : (java.lang.String) defaultValue(fields()[1]);
        record.eventArchContext = fieldSetFlags()[2] ? this.eventArchContext : (java.lang.String) defaultValue(fields()[2]);
        record.eventDateTime = fieldSetFlags()[3] ? this.eventDateTime : (java.lang.String) defaultValue(fields()[3]);
        record.eventOrigins = fieldSetFlags()[4] ? this.eventOrigins : (java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin>) defaultValue(fields()[4]);
        record.eventUUID = fieldSetFlags()[5] ? this.eventUUID : (java.lang.String) defaultValue(fields()[5]);
        record.sourceSystemCode = fieldSetFlags()[6] ? this.sourceSystemCode : (java.lang.String) defaultValue(fields()[6]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<EventHeader>
    WRITER$ = (org.apache.avro.io.DatumWriter<EventHeader>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<EventHeader>
    READER$ = (org.apache.avro.io.DatumReader<EventHeader>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.correlations == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.correlations.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (za.env.raw.opm.firstidmasterentity.Correlation e0: this.correlations) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.eventAction == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.eventAction);
    }

    if (this.eventArchContext == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.eventArchContext);
    }

    if (this.eventDateTime == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.eventDateTime);
    }

    if (this.eventOrigins == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.eventOrigins.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (za.env.raw.opm.firstidmasterentity.EventOrigin e1: this.eventOrigins) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.eventUUID == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.eventUUID);
    }

    if (this.sourceSystemCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.sourceSystemCode);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.correlations = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> a0 = this.correlations;
        if (a0 == null) {
          a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.Correlation>((int)size0, SCHEMA$.getField("correlations").schema().getTypes().get(1));
          this.correlations = a0;
        } else a0.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.Correlation> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.Correlation>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            za.env.raw.opm.firstidmasterentity.Correlation e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new za.env.raw.opm.firstidmasterentity.Correlation();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.eventAction = null;
      } else {
        this.eventAction = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.eventArchContext = null;
      } else {
        this.eventArchContext = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.eventDateTime = null;
      } else {
        this.eventDateTime = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.eventOrigins = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> a1 = this.eventOrigins;
        if (a1 == null) {
          a1 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.EventOrigin>((int)size1, SCHEMA$.getField("eventOrigins").schema().getTypes().get(1));
          this.eventOrigins = a1;
        } else a1.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.EventOrigin> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.EventOrigin>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            za.env.raw.opm.firstidmasterentity.EventOrigin e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new za.env.raw.opm.firstidmasterentity.EventOrigin();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.eventUUID = null;
      } else {
        this.eventUUID = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.sourceSystemCode = null;
      } else {
        this.sourceSystemCode = in.readString();
      }

    } else {
      for (int i = 0; i < 7; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.correlations = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.Correlation> a0 = this.correlations;
            if (a0 == null) {
              a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.Correlation>((int)size0, SCHEMA$.getField("correlations").schema().getTypes().get(1));
              this.correlations = a0;
            } else a0.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.Correlation> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.Correlation>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                za.env.raw.opm.firstidmasterentity.Correlation e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new za.env.raw.opm.firstidmasterentity.Correlation();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.eventAction = null;
          } else {
            this.eventAction = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.eventArchContext = null;
          } else {
            this.eventArchContext = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.eventDateTime = null;
          } else {
            this.eventDateTime = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.eventOrigins = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.EventOrigin> a1 = this.eventOrigins;
            if (a1 == null) {
              a1 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.EventOrigin>((int)size1, SCHEMA$.getField("eventOrigins").schema().getTypes().get(1));
              this.eventOrigins = a1;
            } else a1.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.EventOrigin> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.EventOrigin>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                za.env.raw.opm.firstidmasterentity.EventOrigin e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new za.env.raw.opm.firstidmasterentity.EventOrigin();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.eventUUID = null;
          } else {
            this.eventUUID = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.sourceSystemCode = null;
          } else {
            this.sourceSystemCode = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










