/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Identification extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 5040046213740060991L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Identification\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"citizenshipCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationBarcodeNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationExpiryDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationIssueDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationIssuerCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationIssuerEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationNames\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"IdentificationName\",\"fields\":[{\"name\":\"identificationNameValue\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationNameAttributeName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nameEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]},{\"name\":\"identificationNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationReferenceNumber\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationStatusDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationStatusEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"residencyStatusEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"identificationActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"primaryIdentificationIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Identification> ENCODER =
      new BinaryMessageEncoder<Identification>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Identification> DECODER =
      new BinaryMessageDecoder<Identification>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Identification> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Identification> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Identification> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Identification>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Identification to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Identification from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Identification instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Identification fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String citizenshipCountryEntpsCode;
  @Deprecated public java.lang.String identificationBarcodeNumber;
  @Deprecated public java.lang.String identificationEntpsTypeCode;
  @Deprecated public java.lang.String identificationExpiryDate;
  @Deprecated public java.lang.String identificationIssueDate;
  @Deprecated public java.lang.String identificationIssuerCountryEntpsCode;
  @Deprecated public java.lang.String identificationIssuerEntpsTypeCode;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> identificationNames;
  @Deprecated public java.lang.String identificationNumber;
  @Deprecated public java.lang.String identificationReferenceNumber;
  @Deprecated public java.lang.String identificationStatusDate;
  @Deprecated public java.lang.String identificationStatusEntpsTypeCode;
  @Deprecated public java.lang.String residencyStatusEntpsTypeCode;
  @Deprecated public java.lang.String identificationActiveIndicator;
  @Deprecated public java.lang.String primaryIdentificationIndicator;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Identification() {}

  /**
   * All-args constructor.
   * @param citizenshipCountryEntpsCode The new value for citizenshipCountryEntpsCode
   * @param identificationBarcodeNumber The new value for identificationBarcodeNumber
   * @param identificationEntpsTypeCode The new value for identificationEntpsTypeCode
   * @param identificationExpiryDate The new value for identificationExpiryDate
   * @param identificationIssueDate The new value for identificationIssueDate
   * @param identificationIssuerCountryEntpsCode The new value for identificationIssuerCountryEntpsCode
   * @param identificationIssuerEntpsTypeCode The new value for identificationIssuerEntpsTypeCode
   * @param identificationNames The new value for identificationNames
   * @param identificationNumber The new value for identificationNumber
   * @param identificationReferenceNumber The new value for identificationReferenceNumber
   * @param identificationStatusDate The new value for identificationStatusDate
   * @param identificationStatusEntpsTypeCode The new value for identificationStatusEntpsTypeCode
   * @param residencyStatusEntpsTypeCode The new value for residencyStatusEntpsTypeCode
   * @param identificationActiveIndicator The new value for identificationActiveIndicator
   * @param primaryIdentificationIndicator The new value for primaryIdentificationIndicator
   */
  public Identification(java.lang.String citizenshipCountryEntpsCode, java.lang.String identificationBarcodeNumber, java.lang.String identificationEntpsTypeCode, java.lang.String identificationExpiryDate, java.lang.String identificationIssueDate, java.lang.String identificationIssuerCountryEntpsCode, java.lang.String identificationIssuerEntpsTypeCode, java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> identificationNames, java.lang.String identificationNumber, java.lang.String identificationReferenceNumber, java.lang.String identificationStatusDate, java.lang.String identificationStatusEntpsTypeCode, java.lang.String residencyStatusEntpsTypeCode, java.lang.String identificationActiveIndicator, java.lang.String primaryIdentificationIndicator) {
    this.citizenshipCountryEntpsCode = citizenshipCountryEntpsCode;
    this.identificationBarcodeNumber = identificationBarcodeNumber;
    this.identificationEntpsTypeCode = identificationEntpsTypeCode;
    this.identificationExpiryDate = identificationExpiryDate;
    this.identificationIssueDate = identificationIssueDate;
    this.identificationIssuerCountryEntpsCode = identificationIssuerCountryEntpsCode;
    this.identificationIssuerEntpsTypeCode = identificationIssuerEntpsTypeCode;
    this.identificationNames = identificationNames;
    this.identificationNumber = identificationNumber;
    this.identificationReferenceNumber = identificationReferenceNumber;
    this.identificationStatusDate = identificationStatusDate;
    this.identificationStatusEntpsTypeCode = identificationStatusEntpsTypeCode;
    this.residencyStatusEntpsTypeCode = residencyStatusEntpsTypeCode;
    this.identificationActiveIndicator = identificationActiveIndicator;
    this.primaryIdentificationIndicator = primaryIdentificationIndicator;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return citizenshipCountryEntpsCode;
    case 1: return identificationBarcodeNumber;
    case 2: return identificationEntpsTypeCode;
    case 3: return identificationExpiryDate;
    case 4: return identificationIssueDate;
    case 5: return identificationIssuerCountryEntpsCode;
    case 6: return identificationIssuerEntpsTypeCode;
    case 7: return identificationNames;
    case 8: return identificationNumber;
    case 9: return identificationReferenceNumber;
    case 10: return identificationStatusDate;
    case 11: return identificationStatusEntpsTypeCode;
    case 12: return residencyStatusEntpsTypeCode;
    case 13: return identificationActiveIndicator;
    case 14: return primaryIdentificationIndicator;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: citizenshipCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 1: identificationBarcodeNumber = value$ != null ? value$.toString() : null; break;
    case 2: identificationEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 3: identificationExpiryDate = value$ != null ? value$.toString() : null; break;
    case 4: identificationIssueDate = value$ != null ? value$.toString() : null; break;
    case 5: identificationIssuerCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 6: identificationIssuerEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 7: identificationNames = (java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName>)value$; break;
    case 8: identificationNumber = value$ != null ? value$.toString() : null; break;
    case 9: identificationReferenceNumber = value$ != null ? value$.toString() : null; break;
    case 10: identificationStatusDate = value$ != null ? value$.toString() : null; break;
    case 11: identificationStatusEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 12: residencyStatusEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 13: identificationActiveIndicator = value$ != null ? value$.toString() : null; break;
    case 14: primaryIdentificationIndicator = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'citizenshipCountryEntpsCode' field.
   * @return The value of the 'citizenshipCountryEntpsCode' field.
   */
  public java.lang.String getCitizenshipCountryEntpsCode() {
    return citizenshipCountryEntpsCode;
  }


  /**
   * Sets the value of the 'citizenshipCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setCitizenshipCountryEntpsCode(java.lang.String value) {
    this.citizenshipCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'identificationBarcodeNumber' field.
   * @return The value of the 'identificationBarcodeNumber' field.
   */
  public java.lang.String getIdentificationBarcodeNumber() {
    return identificationBarcodeNumber;
  }


  /**
   * Sets the value of the 'identificationBarcodeNumber' field.
   * @param value the value to set.
   */
  public void setIdentificationBarcodeNumber(java.lang.String value) {
    this.identificationBarcodeNumber = value;
  }

  /**
   * Gets the value of the 'identificationEntpsTypeCode' field.
   * @return The value of the 'identificationEntpsTypeCode' field.
   */
  public java.lang.String getIdentificationEntpsTypeCode() {
    return identificationEntpsTypeCode;
  }


  /**
   * Sets the value of the 'identificationEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setIdentificationEntpsTypeCode(java.lang.String value) {
    this.identificationEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'identificationExpiryDate' field.
   * @return The value of the 'identificationExpiryDate' field.
   */
  public java.lang.String getIdentificationExpiryDate() {
    return identificationExpiryDate;
  }


  /**
   * Sets the value of the 'identificationExpiryDate' field.
   * @param value the value to set.
   */
  public void setIdentificationExpiryDate(java.lang.String value) {
    this.identificationExpiryDate = value;
  }

  /**
   * Gets the value of the 'identificationIssueDate' field.
   * @return The value of the 'identificationIssueDate' field.
   */
  public java.lang.String getIdentificationIssueDate() {
    return identificationIssueDate;
  }


  /**
   * Sets the value of the 'identificationIssueDate' field.
   * @param value the value to set.
   */
  public void setIdentificationIssueDate(java.lang.String value) {
    this.identificationIssueDate = value;
  }

  /**
   * Gets the value of the 'identificationIssuerCountryEntpsCode' field.
   * @return The value of the 'identificationIssuerCountryEntpsCode' field.
   */
  public java.lang.String getIdentificationIssuerCountryEntpsCode() {
    return identificationIssuerCountryEntpsCode;
  }


  /**
   * Sets the value of the 'identificationIssuerCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setIdentificationIssuerCountryEntpsCode(java.lang.String value) {
    this.identificationIssuerCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'identificationIssuerEntpsTypeCode' field.
   * @return The value of the 'identificationIssuerEntpsTypeCode' field.
   */
  public java.lang.String getIdentificationIssuerEntpsTypeCode() {
    return identificationIssuerEntpsTypeCode;
  }


  /**
   * Sets the value of the 'identificationIssuerEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setIdentificationIssuerEntpsTypeCode(java.lang.String value) {
    this.identificationIssuerEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'identificationNames' field.
   * @return The value of the 'identificationNames' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> getIdentificationNames() {
    return identificationNames;
  }


  /**
   * Sets the value of the 'identificationNames' field.
   * @param value the value to set.
   */
  public void setIdentificationNames(java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> value) {
    this.identificationNames = value;
  }

  /**
   * Gets the value of the 'identificationNumber' field.
   * @return The value of the 'identificationNumber' field.
   */
  public java.lang.String getIdentificationNumber() {
    return identificationNumber;
  }


  /**
   * Sets the value of the 'identificationNumber' field.
   * @param value the value to set.
   */
  public void setIdentificationNumber(java.lang.String value) {
    this.identificationNumber = value;
  }

  /**
   * Gets the value of the 'identificationReferenceNumber' field.
   * @return The value of the 'identificationReferenceNumber' field.
   */
  public java.lang.String getIdentificationReferenceNumber() {
    return identificationReferenceNumber;
  }


  /**
   * Sets the value of the 'identificationReferenceNumber' field.
   * @param value the value to set.
   */
  public void setIdentificationReferenceNumber(java.lang.String value) {
    this.identificationReferenceNumber = value;
  }

  /**
   * Gets the value of the 'identificationStatusDate' field.
   * @return The value of the 'identificationStatusDate' field.
   */
  public java.lang.String getIdentificationStatusDate() {
    return identificationStatusDate;
  }


  /**
   * Sets the value of the 'identificationStatusDate' field.
   * @param value the value to set.
   */
  public void setIdentificationStatusDate(java.lang.String value) {
    this.identificationStatusDate = value;
  }

  /**
   * Gets the value of the 'identificationStatusEntpsTypeCode' field.
   * @return The value of the 'identificationStatusEntpsTypeCode' field.
   */
  public java.lang.String getIdentificationStatusEntpsTypeCode() {
    return identificationStatusEntpsTypeCode;
  }


  /**
   * Sets the value of the 'identificationStatusEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setIdentificationStatusEntpsTypeCode(java.lang.String value) {
    this.identificationStatusEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'residencyStatusEntpsTypeCode' field.
   * @return The value of the 'residencyStatusEntpsTypeCode' field.
   */
  public java.lang.String getResidencyStatusEntpsTypeCode() {
    return residencyStatusEntpsTypeCode;
  }


  /**
   * Sets the value of the 'residencyStatusEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setResidencyStatusEntpsTypeCode(java.lang.String value) {
    this.residencyStatusEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'identificationActiveIndicator' field.
   * @return The value of the 'identificationActiveIndicator' field.
   */
  public java.lang.String getIdentificationActiveIndicator() {
    return identificationActiveIndicator;
  }


  /**
   * Sets the value of the 'identificationActiveIndicator' field.
   * @param value the value to set.
   */
  public void setIdentificationActiveIndicator(java.lang.String value) {
    this.identificationActiveIndicator = value;
  }

  /**
   * Gets the value of the 'primaryIdentificationIndicator' field.
   * @return The value of the 'primaryIdentificationIndicator' field.
   */
  public java.lang.String getPrimaryIdentificationIndicator() {
    return primaryIdentificationIndicator;
  }


  /**
   * Sets the value of the 'primaryIdentificationIndicator' field.
   * @param value the value to set.
   */
  public void setPrimaryIdentificationIndicator(java.lang.String value) {
    this.primaryIdentificationIndicator = value;
  }

  /**
   * Creates a new Identification RecordBuilder.
   * @return A new Identification RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Identification.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.Identification.Builder();
  }

  /**
   * Creates a new Identification RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Identification RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Identification.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Identification.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Identification.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Identification.Builder(other);
    }
  }

  /**
   * Creates a new Identification RecordBuilder by copying an existing Identification instance.
   * @param other The existing instance to copy.
   * @return A new Identification RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Identification.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Identification other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Identification.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Identification.Builder(other);
    }
  }

  /**
   * RecordBuilder for Identification instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Identification>
    implements org.apache.avro.data.RecordBuilder<Identification> {

    private java.lang.String citizenshipCountryEntpsCode;
    private java.lang.String identificationBarcodeNumber;
    private java.lang.String identificationEntpsTypeCode;
    private java.lang.String identificationExpiryDate;
    private java.lang.String identificationIssueDate;
    private java.lang.String identificationIssuerCountryEntpsCode;
    private java.lang.String identificationIssuerEntpsTypeCode;
    private java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> identificationNames;
    private java.lang.String identificationNumber;
    private java.lang.String identificationReferenceNumber;
    private java.lang.String identificationStatusDate;
    private java.lang.String identificationStatusEntpsTypeCode;
    private java.lang.String residencyStatusEntpsTypeCode;
    private java.lang.String identificationActiveIndicator;
    private java.lang.String primaryIdentificationIndicator;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Identification.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.citizenshipCountryEntpsCode)) {
        this.citizenshipCountryEntpsCode = data().deepCopy(fields()[0].schema(), other.citizenshipCountryEntpsCode);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.identificationBarcodeNumber)) {
        this.identificationBarcodeNumber = data().deepCopy(fields()[1].schema(), other.identificationBarcodeNumber);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.identificationEntpsTypeCode)) {
        this.identificationEntpsTypeCode = data().deepCopy(fields()[2].schema(), other.identificationEntpsTypeCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.identificationExpiryDate)) {
        this.identificationExpiryDate = data().deepCopy(fields()[3].schema(), other.identificationExpiryDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.identificationIssueDate)) {
        this.identificationIssueDate = data().deepCopy(fields()[4].schema(), other.identificationIssueDate);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.identificationIssuerCountryEntpsCode)) {
        this.identificationIssuerCountryEntpsCode = data().deepCopy(fields()[5].schema(), other.identificationIssuerCountryEntpsCode);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.identificationIssuerEntpsTypeCode)) {
        this.identificationIssuerEntpsTypeCode = data().deepCopy(fields()[6].schema(), other.identificationIssuerEntpsTypeCode);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.identificationNames)) {
        this.identificationNames = data().deepCopy(fields()[7].schema(), other.identificationNames);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.identificationNumber)) {
        this.identificationNumber = data().deepCopy(fields()[8].schema(), other.identificationNumber);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.identificationReferenceNumber)) {
        this.identificationReferenceNumber = data().deepCopy(fields()[9].schema(), other.identificationReferenceNumber);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.identificationStatusDate)) {
        this.identificationStatusDate = data().deepCopy(fields()[10].schema(), other.identificationStatusDate);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.identificationStatusEntpsTypeCode)) {
        this.identificationStatusEntpsTypeCode = data().deepCopy(fields()[11].schema(), other.identificationStatusEntpsTypeCode);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.residencyStatusEntpsTypeCode)) {
        this.residencyStatusEntpsTypeCode = data().deepCopy(fields()[12].schema(), other.residencyStatusEntpsTypeCode);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.identificationActiveIndicator)) {
        this.identificationActiveIndicator = data().deepCopy(fields()[13].schema(), other.identificationActiveIndicator);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.primaryIdentificationIndicator)) {
        this.primaryIdentificationIndicator = data().deepCopy(fields()[14].schema(), other.primaryIdentificationIndicator);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
    }

    /**
     * Creates a Builder by copying an existing Identification instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Identification other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.citizenshipCountryEntpsCode)) {
        this.citizenshipCountryEntpsCode = data().deepCopy(fields()[0].schema(), other.citizenshipCountryEntpsCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.identificationBarcodeNumber)) {
        this.identificationBarcodeNumber = data().deepCopy(fields()[1].schema(), other.identificationBarcodeNumber);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.identificationEntpsTypeCode)) {
        this.identificationEntpsTypeCode = data().deepCopy(fields()[2].schema(), other.identificationEntpsTypeCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.identificationExpiryDate)) {
        this.identificationExpiryDate = data().deepCopy(fields()[3].schema(), other.identificationExpiryDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.identificationIssueDate)) {
        this.identificationIssueDate = data().deepCopy(fields()[4].schema(), other.identificationIssueDate);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.identificationIssuerCountryEntpsCode)) {
        this.identificationIssuerCountryEntpsCode = data().deepCopy(fields()[5].schema(), other.identificationIssuerCountryEntpsCode);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.identificationIssuerEntpsTypeCode)) {
        this.identificationIssuerEntpsTypeCode = data().deepCopy(fields()[6].schema(), other.identificationIssuerEntpsTypeCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.identificationNames)) {
        this.identificationNames = data().deepCopy(fields()[7].schema(), other.identificationNames);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.identificationNumber)) {
        this.identificationNumber = data().deepCopy(fields()[8].schema(), other.identificationNumber);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.identificationReferenceNumber)) {
        this.identificationReferenceNumber = data().deepCopy(fields()[9].schema(), other.identificationReferenceNumber);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.identificationStatusDate)) {
        this.identificationStatusDate = data().deepCopy(fields()[10].schema(), other.identificationStatusDate);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.identificationStatusEntpsTypeCode)) {
        this.identificationStatusEntpsTypeCode = data().deepCopy(fields()[11].schema(), other.identificationStatusEntpsTypeCode);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.residencyStatusEntpsTypeCode)) {
        this.residencyStatusEntpsTypeCode = data().deepCopy(fields()[12].schema(), other.residencyStatusEntpsTypeCode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.identificationActiveIndicator)) {
        this.identificationActiveIndicator = data().deepCopy(fields()[13].schema(), other.identificationActiveIndicator);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.primaryIdentificationIndicator)) {
        this.primaryIdentificationIndicator = data().deepCopy(fields()[14].schema(), other.primaryIdentificationIndicator);
        fieldSetFlags()[14] = true;
      }
    }

    /**
      * Gets the value of the 'citizenshipCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getCitizenshipCountryEntpsCode() {
      return citizenshipCountryEntpsCode;
    }


    /**
      * Sets the value of the 'citizenshipCountryEntpsCode' field.
      * @param value The value of 'citizenshipCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setCitizenshipCountryEntpsCode(java.lang.String value) {
      validate(fields()[0], value);
      this.citizenshipCountryEntpsCode = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'citizenshipCountryEntpsCode' field has been set.
      * @return True if the 'citizenshipCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasCitizenshipCountryEntpsCode() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'citizenshipCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearCitizenshipCountryEntpsCode() {
      citizenshipCountryEntpsCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationBarcodeNumber' field.
      * @return The value.
      */
    public java.lang.String getIdentificationBarcodeNumber() {
      return identificationBarcodeNumber;
    }


    /**
      * Sets the value of the 'identificationBarcodeNumber' field.
      * @param value The value of 'identificationBarcodeNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationBarcodeNumber(java.lang.String value) {
      validate(fields()[1], value);
      this.identificationBarcodeNumber = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationBarcodeNumber' field has been set.
      * @return True if the 'identificationBarcodeNumber' field has been set, false otherwise.
      */
    public boolean hasIdentificationBarcodeNumber() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'identificationBarcodeNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationBarcodeNumber() {
      identificationBarcodeNumber = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getIdentificationEntpsTypeCode() {
      return identificationEntpsTypeCode;
    }


    /**
      * Sets the value of the 'identificationEntpsTypeCode' field.
      * @param value The value of 'identificationEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationEntpsTypeCode(java.lang.String value) {
      validate(fields()[2], value);
      this.identificationEntpsTypeCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationEntpsTypeCode' field has been set.
      * @return True if the 'identificationEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasIdentificationEntpsTypeCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'identificationEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationEntpsTypeCode() {
      identificationEntpsTypeCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationExpiryDate' field.
      * @return The value.
      */
    public java.lang.String getIdentificationExpiryDate() {
      return identificationExpiryDate;
    }


    /**
      * Sets the value of the 'identificationExpiryDate' field.
      * @param value The value of 'identificationExpiryDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationExpiryDate(java.lang.String value) {
      validate(fields()[3], value);
      this.identificationExpiryDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationExpiryDate' field has been set.
      * @return True if the 'identificationExpiryDate' field has been set, false otherwise.
      */
    public boolean hasIdentificationExpiryDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'identificationExpiryDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationExpiryDate() {
      identificationExpiryDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationIssueDate' field.
      * @return The value.
      */
    public java.lang.String getIdentificationIssueDate() {
      return identificationIssueDate;
    }


    /**
      * Sets the value of the 'identificationIssueDate' field.
      * @param value The value of 'identificationIssueDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationIssueDate(java.lang.String value) {
      validate(fields()[4], value);
      this.identificationIssueDate = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationIssueDate' field has been set.
      * @return True if the 'identificationIssueDate' field has been set, false otherwise.
      */
    public boolean hasIdentificationIssueDate() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'identificationIssueDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationIssueDate() {
      identificationIssueDate = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationIssuerCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getIdentificationIssuerCountryEntpsCode() {
      return identificationIssuerCountryEntpsCode;
    }


    /**
      * Sets the value of the 'identificationIssuerCountryEntpsCode' field.
      * @param value The value of 'identificationIssuerCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationIssuerCountryEntpsCode(java.lang.String value) {
      validate(fields()[5], value);
      this.identificationIssuerCountryEntpsCode = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationIssuerCountryEntpsCode' field has been set.
      * @return True if the 'identificationIssuerCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasIdentificationIssuerCountryEntpsCode() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'identificationIssuerCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationIssuerCountryEntpsCode() {
      identificationIssuerCountryEntpsCode = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationIssuerEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getIdentificationIssuerEntpsTypeCode() {
      return identificationIssuerEntpsTypeCode;
    }


    /**
      * Sets the value of the 'identificationIssuerEntpsTypeCode' field.
      * @param value The value of 'identificationIssuerEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationIssuerEntpsTypeCode(java.lang.String value) {
      validate(fields()[6], value);
      this.identificationIssuerEntpsTypeCode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationIssuerEntpsTypeCode' field has been set.
      * @return True if the 'identificationIssuerEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasIdentificationIssuerEntpsTypeCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'identificationIssuerEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationIssuerEntpsTypeCode() {
      identificationIssuerEntpsTypeCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationNames' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> getIdentificationNames() {
      return identificationNames;
    }


    /**
      * Sets the value of the 'identificationNames' field.
      * @param value The value of 'identificationNames'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationNames(java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> value) {
      validate(fields()[7], value);
      this.identificationNames = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationNames' field has been set.
      * @return True if the 'identificationNames' field has been set, false otherwise.
      */
    public boolean hasIdentificationNames() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'identificationNames' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationNames() {
      identificationNames = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationNumber' field.
      * @return The value.
      */
    public java.lang.String getIdentificationNumber() {
      return identificationNumber;
    }


    /**
      * Sets the value of the 'identificationNumber' field.
      * @param value The value of 'identificationNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationNumber(java.lang.String value) {
      validate(fields()[8], value);
      this.identificationNumber = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationNumber' field has been set.
      * @return True if the 'identificationNumber' field has been set, false otherwise.
      */
    public boolean hasIdentificationNumber() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'identificationNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationNumber() {
      identificationNumber = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationReferenceNumber' field.
      * @return The value.
      */
    public java.lang.String getIdentificationReferenceNumber() {
      return identificationReferenceNumber;
    }


    /**
      * Sets the value of the 'identificationReferenceNumber' field.
      * @param value The value of 'identificationReferenceNumber'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationReferenceNumber(java.lang.String value) {
      validate(fields()[9], value);
      this.identificationReferenceNumber = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationReferenceNumber' field has been set.
      * @return True if the 'identificationReferenceNumber' field has been set, false otherwise.
      */
    public boolean hasIdentificationReferenceNumber() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'identificationReferenceNumber' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationReferenceNumber() {
      identificationReferenceNumber = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationStatusDate' field.
      * @return The value.
      */
    public java.lang.String getIdentificationStatusDate() {
      return identificationStatusDate;
    }


    /**
      * Sets the value of the 'identificationStatusDate' field.
      * @param value The value of 'identificationStatusDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationStatusDate(java.lang.String value) {
      validate(fields()[10], value);
      this.identificationStatusDate = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationStatusDate' field has been set.
      * @return True if the 'identificationStatusDate' field has been set, false otherwise.
      */
    public boolean hasIdentificationStatusDate() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'identificationStatusDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationStatusDate() {
      identificationStatusDate = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationStatusEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getIdentificationStatusEntpsTypeCode() {
      return identificationStatusEntpsTypeCode;
    }


    /**
      * Sets the value of the 'identificationStatusEntpsTypeCode' field.
      * @param value The value of 'identificationStatusEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationStatusEntpsTypeCode(java.lang.String value) {
      validate(fields()[11], value);
      this.identificationStatusEntpsTypeCode = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationStatusEntpsTypeCode' field has been set.
      * @return True if the 'identificationStatusEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasIdentificationStatusEntpsTypeCode() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'identificationStatusEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationStatusEntpsTypeCode() {
      identificationStatusEntpsTypeCode = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'residencyStatusEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getResidencyStatusEntpsTypeCode() {
      return residencyStatusEntpsTypeCode;
    }


    /**
      * Sets the value of the 'residencyStatusEntpsTypeCode' field.
      * @param value The value of 'residencyStatusEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setResidencyStatusEntpsTypeCode(java.lang.String value) {
      validate(fields()[12], value);
      this.residencyStatusEntpsTypeCode = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'residencyStatusEntpsTypeCode' field has been set.
      * @return True if the 'residencyStatusEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasResidencyStatusEntpsTypeCode() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'residencyStatusEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearResidencyStatusEntpsTypeCode() {
      residencyStatusEntpsTypeCode = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'identificationActiveIndicator' field.
      * @return The value.
      */
    public java.lang.String getIdentificationActiveIndicator() {
      return identificationActiveIndicator;
    }


    /**
      * Sets the value of the 'identificationActiveIndicator' field.
      * @param value The value of 'identificationActiveIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setIdentificationActiveIndicator(java.lang.String value) {
      validate(fields()[13], value);
      this.identificationActiveIndicator = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'identificationActiveIndicator' field has been set.
      * @return True if the 'identificationActiveIndicator' field has been set, false otherwise.
      */
    public boolean hasIdentificationActiveIndicator() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'identificationActiveIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearIdentificationActiveIndicator() {
      identificationActiveIndicator = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'primaryIdentificationIndicator' field.
      * @return The value.
      */
    public java.lang.String getPrimaryIdentificationIndicator() {
      return primaryIdentificationIndicator;
    }


    /**
      * Sets the value of the 'primaryIdentificationIndicator' field.
      * @param value The value of 'primaryIdentificationIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder setPrimaryIdentificationIndicator(java.lang.String value) {
      validate(fields()[14], value);
      this.primaryIdentificationIndicator = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'primaryIdentificationIndicator' field has been set.
      * @return True if the 'primaryIdentificationIndicator' field has been set, false otherwise.
      */
    public boolean hasPrimaryIdentificationIndicator() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'primaryIdentificationIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Identification.Builder clearPrimaryIdentificationIndicator() {
      primaryIdentificationIndicator = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Identification build() {
      try {
        Identification record = new Identification();
        record.citizenshipCountryEntpsCode = fieldSetFlags()[0] ? this.citizenshipCountryEntpsCode : (java.lang.String) defaultValue(fields()[0]);
        record.identificationBarcodeNumber = fieldSetFlags()[1] ? this.identificationBarcodeNumber : (java.lang.String) defaultValue(fields()[1]);
        record.identificationEntpsTypeCode = fieldSetFlags()[2] ? this.identificationEntpsTypeCode : (java.lang.String) defaultValue(fields()[2]);
        record.identificationExpiryDate = fieldSetFlags()[3] ? this.identificationExpiryDate : (java.lang.String) defaultValue(fields()[3]);
        record.identificationIssueDate = fieldSetFlags()[4] ? this.identificationIssueDate : (java.lang.String) defaultValue(fields()[4]);
        record.identificationIssuerCountryEntpsCode = fieldSetFlags()[5] ? this.identificationIssuerCountryEntpsCode : (java.lang.String) defaultValue(fields()[5]);
        record.identificationIssuerEntpsTypeCode = fieldSetFlags()[6] ? this.identificationIssuerEntpsTypeCode : (java.lang.String) defaultValue(fields()[6]);
        record.identificationNames = fieldSetFlags()[7] ? this.identificationNames : (java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName>) defaultValue(fields()[7]);
        record.identificationNumber = fieldSetFlags()[8] ? this.identificationNumber : (java.lang.String) defaultValue(fields()[8]);
        record.identificationReferenceNumber = fieldSetFlags()[9] ? this.identificationReferenceNumber : (java.lang.String) defaultValue(fields()[9]);
        record.identificationStatusDate = fieldSetFlags()[10] ? this.identificationStatusDate : (java.lang.String) defaultValue(fields()[10]);
        record.identificationStatusEntpsTypeCode = fieldSetFlags()[11] ? this.identificationStatusEntpsTypeCode : (java.lang.String) defaultValue(fields()[11]);
        record.residencyStatusEntpsTypeCode = fieldSetFlags()[12] ? this.residencyStatusEntpsTypeCode : (java.lang.String) defaultValue(fields()[12]);
        record.identificationActiveIndicator = fieldSetFlags()[13] ? this.identificationActiveIndicator : (java.lang.String) defaultValue(fields()[13]);
        record.primaryIdentificationIndicator = fieldSetFlags()[14] ? this.primaryIdentificationIndicator : (java.lang.String) defaultValue(fields()[14]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Identification>
    WRITER$ = (org.apache.avro.io.DatumWriter<Identification>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Identification>
    READER$ = (org.apache.avro.io.DatumReader<Identification>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.citizenshipCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.citizenshipCountryEntpsCode);
    }

    if (this.identificationBarcodeNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationBarcodeNumber);
    }

    if (this.identificationEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationEntpsTypeCode);
    }

    if (this.identificationExpiryDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationExpiryDate);
    }

    if (this.identificationIssueDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationIssueDate);
    }

    if (this.identificationIssuerCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationIssuerCountryEntpsCode);
    }

    if (this.identificationIssuerEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationIssuerEntpsTypeCode);
    }

    if (this.identificationNames == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.identificationNames.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (za.env.raw.opm.firstidmasterentity.IdentificationName e0: this.identificationNames) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.identificationNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationNumber);
    }

    if (this.identificationReferenceNumber == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationReferenceNumber);
    }

    if (this.identificationStatusDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationStatusDate);
    }

    if (this.identificationStatusEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationStatusEntpsTypeCode);
    }

    if (this.residencyStatusEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.residencyStatusEntpsTypeCode);
    }

    if (this.identificationActiveIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.identificationActiveIndicator);
    }

    if (this.primaryIdentificationIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.primaryIdentificationIndicator);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.citizenshipCountryEntpsCode = null;
      } else {
        this.citizenshipCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationBarcodeNumber = null;
      } else {
        this.identificationBarcodeNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationEntpsTypeCode = null;
      } else {
        this.identificationEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationExpiryDate = null;
      } else {
        this.identificationExpiryDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationIssueDate = null;
      } else {
        this.identificationIssueDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationIssuerCountryEntpsCode = null;
      } else {
        this.identificationIssuerCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationIssuerEntpsTypeCode = null;
      } else {
        this.identificationIssuerEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationNames = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> a0 = this.identificationNames;
        if (a0 == null) {
          a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.IdentificationName>((int)size0, SCHEMA$.getField("identificationNames").schema().getTypes().get(1));
          this.identificationNames = a0;
        } else a0.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.IdentificationName> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.IdentificationName>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            za.env.raw.opm.firstidmasterentity.IdentificationName e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new za.env.raw.opm.firstidmasterentity.IdentificationName();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationNumber = null;
      } else {
        this.identificationNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationReferenceNumber = null;
      } else {
        this.identificationReferenceNumber = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationStatusDate = null;
      } else {
        this.identificationStatusDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationStatusEntpsTypeCode = null;
      } else {
        this.identificationStatusEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.residencyStatusEntpsTypeCode = null;
      } else {
        this.residencyStatusEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.identificationActiveIndicator = null;
      } else {
        this.identificationActiveIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.primaryIdentificationIndicator = null;
      } else {
        this.primaryIdentificationIndicator = in.readString();
      }

    } else {
      for (int i = 0; i < 15; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.citizenshipCountryEntpsCode = null;
          } else {
            this.citizenshipCountryEntpsCode = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationBarcodeNumber = null;
          } else {
            this.identificationBarcodeNumber = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationEntpsTypeCode = null;
          } else {
            this.identificationEntpsTypeCode = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationExpiryDate = null;
          } else {
            this.identificationExpiryDate = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationIssueDate = null;
          } else {
            this.identificationIssueDate = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationIssuerCountryEntpsCode = null;
          } else {
            this.identificationIssuerCountryEntpsCode = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationIssuerEntpsTypeCode = null;
          } else {
            this.identificationIssuerEntpsTypeCode = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationNames = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.IdentificationName> a0 = this.identificationNames;
            if (a0 == null) {
              a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.IdentificationName>((int)size0, SCHEMA$.getField("identificationNames").schema().getTypes().get(1));
              this.identificationNames = a0;
            } else a0.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.IdentificationName> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.IdentificationName>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                za.env.raw.opm.firstidmasterentity.IdentificationName e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new za.env.raw.opm.firstidmasterentity.IdentificationName();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationNumber = null;
          } else {
            this.identificationNumber = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationReferenceNumber = null;
          } else {
            this.identificationReferenceNumber = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationStatusDate = null;
          } else {
            this.identificationStatusDate = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationStatusEntpsTypeCode = null;
          } else {
            this.identificationStatusEntpsTypeCode = in.readString();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.residencyStatusEntpsTypeCode = null;
          } else {
            this.residencyStatusEntpsTypeCode = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.identificationActiveIndicator = null;
          } else {
            this.identificationActiveIndicator = in.readString();
          }
          break;

        case 14:
          if (in.readIndex() != 1) {
            in.readNull();
            this.primaryIdentificationIndicator = null;
          } else {
            this.primaryIdentificationIndicator = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










