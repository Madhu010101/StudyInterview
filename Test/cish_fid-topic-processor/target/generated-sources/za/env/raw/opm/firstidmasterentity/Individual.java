/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package za.env.raw.opm.firstidmasterentity;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class Individual extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4390150323776634056L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Individual\",\"namespace\":\"za.env.raw.opm.firstidmasterentity\",\"fields\":[{\"name\":\"birthCityName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"birthCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"birthDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"deceasedDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"educations\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Education\",\"fields\":[{\"name\":\"highestQualificationEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"qualificationDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"qualificationSpecialityEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"qualificationProofIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"qualificationStartDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"educationActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}}]},{\"name\":\"employments\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Employment\",\"fields\":[{\"name\":\"annualGrossIncomeAmount\",\"type\":[\"null\",{\"type\":\"double\",\"java-class\":\"java.lang.Double\"}]},{\"name\":\"employerName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentEndDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentStartDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"occupationEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentStatusEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"employmentActiveIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"primaryEmploymentIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nettIncomeAmount\",\"type\":[\"null\",{\"type\":\"double\",\"java-class\":\"java.lang.Double\"}]},{\"name\":\"nettIncomeCurrencyEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nettIncomeFrequencyEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nettIncomePaymentDay\",\"type\":[\"null\",{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}],\"default\":null}]}}]},{\"name\":\"genderEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"maritalConsentIndicator\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"maritalContractEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"maritalStatusEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"nationalityCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"numberOfDependants\",\"type\":[\"null\",{\"type\":\"int\",\"java-class\":\"java.lang.Integer\"}],\"default\":null},{\"name\":\"permanentResidenceCountryEntpsCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null},{\"name\":\"titleEntpsTypeCode\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<Individual> ENCODER =
      new BinaryMessageEncoder<Individual>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<Individual> DECODER =
      new BinaryMessageDecoder<Individual>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<Individual> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<Individual> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<Individual> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<Individual>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this Individual to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a Individual from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a Individual instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static Individual fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.String birthCityName;
  @Deprecated public java.lang.String birthCountryEntpsCode;
  @Deprecated public java.lang.String birthDate;
  @Deprecated public java.lang.String deceasedDate;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.Education> educations;
  @Deprecated public java.util.List<za.env.raw.opm.firstidmasterentity.Employment> employments;
  @Deprecated public java.lang.String genderEntpsTypeCode;
  @Deprecated public java.lang.String maritalConsentIndicator;
  @Deprecated public java.lang.String maritalContractEntpsTypeCode;
  @Deprecated public java.lang.String maritalStatusEntpsTypeCode;
  @Deprecated public java.lang.String nationalityCountryEntpsCode;
  @Deprecated public java.lang.Integer numberOfDependants;
  @Deprecated public java.lang.String permanentResidenceCountryEntpsCode;
  @Deprecated public java.lang.String titleEntpsTypeCode;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public Individual() {}

  /**
   * All-args constructor.
   * @param birthCityName The new value for birthCityName
   * @param birthCountryEntpsCode The new value for birthCountryEntpsCode
   * @param birthDate The new value for birthDate
   * @param deceasedDate The new value for deceasedDate
   * @param educations The new value for educations
   * @param employments The new value for employments
   * @param genderEntpsTypeCode The new value for genderEntpsTypeCode
   * @param maritalConsentIndicator The new value for maritalConsentIndicator
   * @param maritalContractEntpsTypeCode The new value for maritalContractEntpsTypeCode
   * @param maritalStatusEntpsTypeCode The new value for maritalStatusEntpsTypeCode
   * @param nationalityCountryEntpsCode The new value for nationalityCountryEntpsCode
   * @param numberOfDependants The new value for numberOfDependants
   * @param permanentResidenceCountryEntpsCode The new value for permanentResidenceCountryEntpsCode
   * @param titleEntpsTypeCode The new value for titleEntpsTypeCode
   */
  public Individual(java.lang.String birthCityName, java.lang.String birthCountryEntpsCode, java.lang.String birthDate, java.lang.String deceasedDate, java.util.List<za.env.raw.opm.firstidmasterentity.Education> educations, java.util.List<za.env.raw.opm.firstidmasterentity.Employment> employments, java.lang.String genderEntpsTypeCode, java.lang.String maritalConsentIndicator, java.lang.String maritalContractEntpsTypeCode, java.lang.String maritalStatusEntpsTypeCode, java.lang.String nationalityCountryEntpsCode, java.lang.Integer numberOfDependants, java.lang.String permanentResidenceCountryEntpsCode, java.lang.String titleEntpsTypeCode) {
    this.birthCityName = birthCityName;
    this.birthCountryEntpsCode = birthCountryEntpsCode;
    this.birthDate = birthDate;
    this.deceasedDate = deceasedDate;
    this.educations = educations;
    this.employments = employments;
    this.genderEntpsTypeCode = genderEntpsTypeCode;
    this.maritalConsentIndicator = maritalConsentIndicator;
    this.maritalContractEntpsTypeCode = maritalContractEntpsTypeCode;
    this.maritalStatusEntpsTypeCode = maritalStatusEntpsTypeCode;
    this.nationalityCountryEntpsCode = nationalityCountryEntpsCode;
    this.numberOfDependants = numberOfDependants;
    this.permanentResidenceCountryEntpsCode = permanentResidenceCountryEntpsCode;
    this.titleEntpsTypeCode = titleEntpsTypeCode;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return birthCityName;
    case 1: return birthCountryEntpsCode;
    case 2: return birthDate;
    case 3: return deceasedDate;
    case 4: return educations;
    case 5: return employments;
    case 6: return genderEntpsTypeCode;
    case 7: return maritalConsentIndicator;
    case 8: return maritalContractEntpsTypeCode;
    case 9: return maritalStatusEntpsTypeCode;
    case 10: return nationalityCountryEntpsCode;
    case 11: return numberOfDependants;
    case 12: return permanentResidenceCountryEntpsCode;
    case 13: return titleEntpsTypeCode;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: birthCityName = value$ != null ? value$.toString() : null; break;
    case 1: birthCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 2: birthDate = value$ != null ? value$.toString() : null; break;
    case 3: deceasedDate = value$ != null ? value$.toString() : null; break;
    case 4: educations = (java.util.List<za.env.raw.opm.firstidmasterentity.Education>)value$; break;
    case 5: employments = (java.util.List<za.env.raw.opm.firstidmasterentity.Employment>)value$; break;
    case 6: genderEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 7: maritalConsentIndicator = value$ != null ? value$.toString() : null; break;
    case 8: maritalContractEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 9: maritalStatusEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    case 10: nationalityCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 11: numberOfDependants = (java.lang.Integer)value$; break;
    case 12: permanentResidenceCountryEntpsCode = value$ != null ? value$.toString() : null; break;
    case 13: titleEntpsTypeCode = value$ != null ? value$.toString() : null; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'birthCityName' field.
   * @return The value of the 'birthCityName' field.
   */
  public java.lang.String getBirthCityName() {
    return birthCityName;
  }


  /**
   * Sets the value of the 'birthCityName' field.
   * @param value the value to set.
   */
  public void setBirthCityName(java.lang.String value) {
    this.birthCityName = value;
  }

  /**
   * Gets the value of the 'birthCountryEntpsCode' field.
   * @return The value of the 'birthCountryEntpsCode' field.
   */
  public java.lang.String getBirthCountryEntpsCode() {
    return birthCountryEntpsCode;
  }


  /**
   * Sets the value of the 'birthCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setBirthCountryEntpsCode(java.lang.String value) {
    this.birthCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'birthDate' field.
   * @return The value of the 'birthDate' field.
   */
  public java.lang.String getBirthDate() {
    return birthDate;
  }


  /**
   * Sets the value of the 'birthDate' field.
   * @param value the value to set.
   */
  public void setBirthDate(java.lang.String value) {
    this.birthDate = value;
  }

  /**
   * Gets the value of the 'deceasedDate' field.
   * @return The value of the 'deceasedDate' field.
   */
  public java.lang.String getDeceasedDate() {
    return deceasedDate;
  }


  /**
   * Sets the value of the 'deceasedDate' field.
   * @param value the value to set.
   */
  public void setDeceasedDate(java.lang.String value) {
    this.deceasedDate = value;
  }

  /**
   * Gets the value of the 'educations' field.
   * @return The value of the 'educations' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.Education> getEducations() {
    return educations;
  }


  /**
   * Sets the value of the 'educations' field.
   * @param value the value to set.
   */
  public void setEducations(java.util.List<za.env.raw.opm.firstidmasterentity.Education> value) {
    this.educations = value;
  }

  /**
   * Gets the value of the 'employments' field.
   * @return The value of the 'employments' field.
   */
  public java.util.List<za.env.raw.opm.firstidmasterentity.Employment> getEmployments() {
    return employments;
  }


  /**
   * Sets the value of the 'employments' field.
   * @param value the value to set.
   */
  public void setEmployments(java.util.List<za.env.raw.opm.firstidmasterentity.Employment> value) {
    this.employments = value;
  }

  /**
   * Gets the value of the 'genderEntpsTypeCode' field.
   * @return The value of the 'genderEntpsTypeCode' field.
   */
  public java.lang.String getGenderEntpsTypeCode() {
    return genderEntpsTypeCode;
  }


  /**
   * Sets the value of the 'genderEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setGenderEntpsTypeCode(java.lang.String value) {
    this.genderEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'maritalConsentIndicator' field.
   * @return The value of the 'maritalConsentIndicator' field.
   */
  public java.lang.String getMaritalConsentIndicator() {
    return maritalConsentIndicator;
  }


  /**
   * Sets the value of the 'maritalConsentIndicator' field.
   * @param value the value to set.
   */
  public void setMaritalConsentIndicator(java.lang.String value) {
    this.maritalConsentIndicator = value;
  }

  /**
   * Gets the value of the 'maritalContractEntpsTypeCode' field.
   * @return The value of the 'maritalContractEntpsTypeCode' field.
   */
  public java.lang.String getMaritalContractEntpsTypeCode() {
    return maritalContractEntpsTypeCode;
  }


  /**
   * Sets the value of the 'maritalContractEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setMaritalContractEntpsTypeCode(java.lang.String value) {
    this.maritalContractEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'maritalStatusEntpsTypeCode' field.
   * @return The value of the 'maritalStatusEntpsTypeCode' field.
   */
  public java.lang.String getMaritalStatusEntpsTypeCode() {
    return maritalStatusEntpsTypeCode;
  }


  /**
   * Sets the value of the 'maritalStatusEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setMaritalStatusEntpsTypeCode(java.lang.String value) {
    this.maritalStatusEntpsTypeCode = value;
  }

  /**
   * Gets the value of the 'nationalityCountryEntpsCode' field.
   * @return The value of the 'nationalityCountryEntpsCode' field.
   */
  public java.lang.String getNationalityCountryEntpsCode() {
    return nationalityCountryEntpsCode;
  }


  /**
   * Sets the value of the 'nationalityCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setNationalityCountryEntpsCode(java.lang.String value) {
    this.nationalityCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'numberOfDependants' field.
   * @return The value of the 'numberOfDependants' field.
   */
  public java.lang.Integer getNumberOfDependants() {
    return numberOfDependants;
  }


  /**
   * Sets the value of the 'numberOfDependants' field.
   * @param value the value to set.
   */
  public void setNumberOfDependants(java.lang.Integer value) {
    this.numberOfDependants = value;
  }

  /**
   * Gets the value of the 'permanentResidenceCountryEntpsCode' field.
   * @return The value of the 'permanentResidenceCountryEntpsCode' field.
   */
  public java.lang.String getPermanentResidenceCountryEntpsCode() {
    return permanentResidenceCountryEntpsCode;
  }


  /**
   * Sets the value of the 'permanentResidenceCountryEntpsCode' field.
   * @param value the value to set.
   */
  public void setPermanentResidenceCountryEntpsCode(java.lang.String value) {
    this.permanentResidenceCountryEntpsCode = value;
  }

  /**
   * Gets the value of the 'titleEntpsTypeCode' field.
   * @return The value of the 'titleEntpsTypeCode' field.
   */
  public java.lang.String getTitleEntpsTypeCode() {
    return titleEntpsTypeCode;
  }


  /**
   * Sets the value of the 'titleEntpsTypeCode' field.
   * @param value the value to set.
   */
  public void setTitleEntpsTypeCode(java.lang.String value) {
    this.titleEntpsTypeCode = value;
  }

  /**
   * Creates a new Individual RecordBuilder.
   * @return A new Individual RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Individual.Builder newBuilder() {
    return new za.env.raw.opm.firstidmasterentity.Individual.Builder();
  }

  /**
   * Creates a new Individual RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new Individual RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Individual.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Individual.Builder other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Individual.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Individual.Builder(other);
    }
  }

  /**
   * Creates a new Individual RecordBuilder by copying an existing Individual instance.
   * @param other The existing instance to copy.
   * @return A new Individual RecordBuilder
   */
  public static za.env.raw.opm.firstidmasterentity.Individual.Builder newBuilder(za.env.raw.opm.firstidmasterentity.Individual other) {
    if (other == null) {
      return new za.env.raw.opm.firstidmasterentity.Individual.Builder();
    } else {
      return new za.env.raw.opm.firstidmasterentity.Individual.Builder(other);
    }
  }

  /**
   * RecordBuilder for Individual instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Individual>
    implements org.apache.avro.data.RecordBuilder<Individual> {

    private java.lang.String birthCityName;
    private java.lang.String birthCountryEntpsCode;
    private java.lang.String birthDate;
    private java.lang.String deceasedDate;
    private java.util.List<za.env.raw.opm.firstidmasterentity.Education> educations;
    private java.util.List<za.env.raw.opm.firstidmasterentity.Employment> employments;
    private java.lang.String genderEntpsTypeCode;
    private java.lang.String maritalConsentIndicator;
    private java.lang.String maritalContractEntpsTypeCode;
    private java.lang.String maritalStatusEntpsTypeCode;
    private java.lang.String nationalityCountryEntpsCode;
    private java.lang.Integer numberOfDependants;
    private java.lang.String permanentResidenceCountryEntpsCode;
    private java.lang.String titleEntpsTypeCode;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Individual.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.birthCityName)) {
        this.birthCityName = data().deepCopy(fields()[0].schema(), other.birthCityName);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.birthCountryEntpsCode)) {
        this.birthCountryEntpsCode = data().deepCopy(fields()[1].schema(), other.birthCountryEntpsCode);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[2].schema(), other.birthDate);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.deceasedDate)) {
        this.deceasedDate = data().deepCopy(fields()[3].schema(), other.deceasedDate);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.educations)) {
        this.educations = data().deepCopy(fields()[4].schema(), other.educations);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.employments)) {
        this.employments = data().deepCopy(fields()[5].schema(), other.employments);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.genderEntpsTypeCode)) {
        this.genderEntpsTypeCode = data().deepCopy(fields()[6].schema(), other.genderEntpsTypeCode);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.maritalConsentIndicator)) {
        this.maritalConsentIndicator = data().deepCopy(fields()[7].schema(), other.maritalConsentIndicator);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.maritalContractEntpsTypeCode)) {
        this.maritalContractEntpsTypeCode = data().deepCopy(fields()[8].schema(), other.maritalContractEntpsTypeCode);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.maritalStatusEntpsTypeCode)) {
        this.maritalStatusEntpsTypeCode = data().deepCopy(fields()[9].schema(), other.maritalStatusEntpsTypeCode);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.nationalityCountryEntpsCode)) {
        this.nationalityCountryEntpsCode = data().deepCopy(fields()[10].schema(), other.nationalityCountryEntpsCode);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.numberOfDependants)) {
        this.numberOfDependants = data().deepCopy(fields()[11].schema(), other.numberOfDependants);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.permanentResidenceCountryEntpsCode)) {
        this.permanentResidenceCountryEntpsCode = data().deepCopy(fields()[12].schema(), other.permanentResidenceCountryEntpsCode);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.titleEntpsTypeCode)) {
        this.titleEntpsTypeCode = data().deepCopy(fields()[13].schema(), other.titleEntpsTypeCode);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
    }

    /**
     * Creates a Builder by copying an existing Individual instance
     * @param other The existing instance to copy.
     */
    private Builder(za.env.raw.opm.firstidmasterentity.Individual other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.birthCityName)) {
        this.birthCityName = data().deepCopy(fields()[0].schema(), other.birthCityName);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.birthCountryEntpsCode)) {
        this.birthCountryEntpsCode = data().deepCopy(fields()[1].schema(), other.birthCountryEntpsCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.birthDate)) {
        this.birthDate = data().deepCopy(fields()[2].schema(), other.birthDate);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.deceasedDate)) {
        this.deceasedDate = data().deepCopy(fields()[3].schema(), other.deceasedDate);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.educations)) {
        this.educations = data().deepCopy(fields()[4].schema(), other.educations);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.employments)) {
        this.employments = data().deepCopy(fields()[5].schema(), other.employments);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.genderEntpsTypeCode)) {
        this.genderEntpsTypeCode = data().deepCopy(fields()[6].schema(), other.genderEntpsTypeCode);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.maritalConsentIndicator)) {
        this.maritalConsentIndicator = data().deepCopy(fields()[7].schema(), other.maritalConsentIndicator);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.maritalContractEntpsTypeCode)) {
        this.maritalContractEntpsTypeCode = data().deepCopy(fields()[8].schema(), other.maritalContractEntpsTypeCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.maritalStatusEntpsTypeCode)) {
        this.maritalStatusEntpsTypeCode = data().deepCopy(fields()[9].schema(), other.maritalStatusEntpsTypeCode);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.nationalityCountryEntpsCode)) {
        this.nationalityCountryEntpsCode = data().deepCopy(fields()[10].schema(), other.nationalityCountryEntpsCode);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.numberOfDependants)) {
        this.numberOfDependants = data().deepCopy(fields()[11].schema(), other.numberOfDependants);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.permanentResidenceCountryEntpsCode)) {
        this.permanentResidenceCountryEntpsCode = data().deepCopy(fields()[12].schema(), other.permanentResidenceCountryEntpsCode);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.titleEntpsTypeCode)) {
        this.titleEntpsTypeCode = data().deepCopy(fields()[13].schema(), other.titleEntpsTypeCode);
        fieldSetFlags()[13] = true;
      }
    }

    /**
      * Gets the value of the 'birthCityName' field.
      * @return The value.
      */
    public java.lang.String getBirthCityName() {
      return birthCityName;
    }


    /**
      * Sets the value of the 'birthCityName' field.
      * @param value The value of 'birthCityName'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setBirthCityName(java.lang.String value) {
      validate(fields()[0], value);
      this.birthCityName = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'birthCityName' field has been set.
      * @return True if the 'birthCityName' field has been set, false otherwise.
      */
    public boolean hasBirthCityName() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'birthCityName' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearBirthCityName() {
      birthCityName = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getBirthCountryEntpsCode() {
      return birthCountryEntpsCode;
    }


    /**
      * Sets the value of the 'birthCountryEntpsCode' field.
      * @param value The value of 'birthCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setBirthCountryEntpsCode(java.lang.String value) {
      validate(fields()[1], value);
      this.birthCountryEntpsCode = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'birthCountryEntpsCode' field has been set.
      * @return True if the 'birthCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasBirthCountryEntpsCode() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'birthCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearBirthCountryEntpsCode() {
      birthCountryEntpsCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'birthDate' field.
      * @return The value.
      */
    public java.lang.String getBirthDate() {
      return birthDate;
    }


    /**
      * Sets the value of the 'birthDate' field.
      * @param value The value of 'birthDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setBirthDate(java.lang.String value) {
      validate(fields()[2], value);
      this.birthDate = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'birthDate' field has been set.
      * @return True if the 'birthDate' field has been set, false otherwise.
      */
    public boolean hasBirthDate() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'birthDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearBirthDate() {
      birthDate = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'deceasedDate' field.
      * @return The value.
      */
    public java.lang.String getDeceasedDate() {
      return deceasedDate;
    }


    /**
      * Sets the value of the 'deceasedDate' field.
      * @param value The value of 'deceasedDate'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setDeceasedDate(java.lang.String value) {
      validate(fields()[3], value);
      this.deceasedDate = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'deceasedDate' field has been set.
      * @return True if the 'deceasedDate' field has been set, false otherwise.
      */
    public boolean hasDeceasedDate() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'deceasedDate' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearDeceasedDate() {
      deceasedDate = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'educations' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.Education> getEducations() {
      return educations;
    }


    /**
      * Sets the value of the 'educations' field.
      * @param value The value of 'educations'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setEducations(java.util.List<za.env.raw.opm.firstidmasterentity.Education> value) {
      validate(fields()[4], value);
      this.educations = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'educations' field has been set.
      * @return True if the 'educations' field has been set, false otherwise.
      */
    public boolean hasEducations() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'educations' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearEducations() {
      educations = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'employments' field.
      * @return The value.
      */
    public java.util.List<za.env.raw.opm.firstidmasterentity.Employment> getEmployments() {
      return employments;
    }


    /**
      * Sets the value of the 'employments' field.
      * @param value The value of 'employments'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setEmployments(java.util.List<za.env.raw.opm.firstidmasterentity.Employment> value) {
      validate(fields()[5], value);
      this.employments = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'employments' field has been set.
      * @return True if the 'employments' field has been set, false otherwise.
      */
    public boolean hasEmployments() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'employments' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearEmployments() {
      employments = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'genderEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getGenderEntpsTypeCode() {
      return genderEntpsTypeCode;
    }


    /**
      * Sets the value of the 'genderEntpsTypeCode' field.
      * @param value The value of 'genderEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setGenderEntpsTypeCode(java.lang.String value) {
      validate(fields()[6], value);
      this.genderEntpsTypeCode = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'genderEntpsTypeCode' field has been set.
      * @return True if the 'genderEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasGenderEntpsTypeCode() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'genderEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearGenderEntpsTypeCode() {
      genderEntpsTypeCode = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'maritalConsentIndicator' field.
      * @return The value.
      */
    public java.lang.String getMaritalConsentIndicator() {
      return maritalConsentIndicator;
    }


    /**
      * Sets the value of the 'maritalConsentIndicator' field.
      * @param value The value of 'maritalConsentIndicator'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setMaritalConsentIndicator(java.lang.String value) {
      validate(fields()[7], value);
      this.maritalConsentIndicator = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'maritalConsentIndicator' field has been set.
      * @return True if the 'maritalConsentIndicator' field has been set, false otherwise.
      */
    public boolean hasMaritalConsentIndicator() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'maritalConsentIndicator' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearMaritalConsentIndicator() {
      maritalConsentIndicator = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'maritalContractEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getMaritalContractEntpsTypeCode() {
      return maritalContractEntpsTypeCode;
    }


    /**
      * Sets the value of the 'maritalContractEntpsTypeCode' field.
      * @param value The value of 'maritalContractEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setMaritalContractEntpsTypeCode(java.lang.String value) {
      validate(fields()[8], value);
      this.maritalContractEntpsTypeCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'maritalContractEntpsTypeCode' field has been set.
      * @return True if the 'maritalContractEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasMaritalContractEntpsTypeCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'maritalContractEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearMaritalContractEntpsTypeCode() {
      maritalContractEntpsTypeCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'maritalStatusEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getMaritalStatusEntpsTypeCode() {
      return maritalStatusEntpsTypeCode;
    }


    /**
      * Sets the value of the 'maritalStatusEntpsTypeCode' field.
      * @param value The value of 'maritalStatusEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setMaritalStatusEntpsTypeCode(java.lang.String value) {
      validate(fields()[9], value);
      this.maritalStatusEntpsTypeCode = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'maritalStatusEntpsTypeCode' field has been set.
      * @return True if the 'maritalStatusEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasMaritalStatusEntpsTypeCode() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'maritalStatusEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearMaritalStatusEntpsTypeCode() {
      maritalStatusEntpsTypeCode = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'nationalityCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getNationalityCountryEntpsCode() {
      return nationalityCountryEntpsCode;
    }


    /**
      * Sets the value of the 'nationalityCountryEntpsCode' field.
      * @param value The value of 'nationalityCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setNationalityCountryEntpsCode(java.lang.String value) {
      validate(fields()[10], value);
      this.nationalityCountryEntpsCode = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'nationalityCountryEntpsCode' field has been set.
      * @return True if the 'nationalityCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasNationalityCountryEntpsCode() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'nationalityCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearNationalityCountryEntpsCode() {
      nationalityCountryEntpsCode = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'numberOfDependants' field.
      * @return The value.
      */
    public java.lang.Integer getNumberOfDependants() {
      return numberOfDependants;
    }


    /**
      * Sets the value of the 'numberOfDependants' field.
      * @param value The value of 'numberOfDependants'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setNumberOfDependants(java.lang.Integer value) {
      validate(fields()[11], value);
      this.numberOfDependants = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'numberOfDependants' field has been set.
      * @return True if the 'numberOfDependants' field has been set, false otherwise.
      */
    public boolean hasNumberOfDependants() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'numberOfDependants' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearNumberOfDependants() {
      numberOfDependants = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'permanentResidenceCountryEntpsCode' field.
      * @return The value.
      */
    public java.lang.String getPermanentResidenceCountryEntpsCode() {
      return permanentResidenceCountryEntpsCode;
    }


    /**
      * Sets the value of the 'permanentResidenceCountryEntpsCode' field.
      * @param value The value of 'permanentResidenceCountryEntpsCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setPermanentResidenceCountryEntpsCode(java.lang.String value) {
      validate(fields()[12], value);
      this.permanentResidenceCountryEntpsCode = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'permanentResidenceCountryEntpsCode' field has been set.
      * @return True if the 'permanentResidenceCountryEntpsCode' field has been set, false otherwise.
      */
    public boolean hasPermanentResidenceCountryEntpsCode() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'permanentResidenceCountryEntpsCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearPermanentResidenceCountryEntpsCode() {
      permanentResidenceCountryEntpsCode = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'titleEntpsTypeCode' field.
      * @return The value.
      */
    public java.lang.String getTitleEntpsTypeCode() {
      return titleEntpsTypeCode;
    }


    /**
      * Sets the value of the 'titleEntpsTypeCode' field.
      * @param value The value of 'titleEntpsTypeCode'.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder setTitleEntpsTypeCode(java.lang.String value) {
      validate(fields()[13], value);
      this.titleEntpsTypeCode = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'titleEntpsTypeCode' field has been set.
      * @return True if the 'titleEntpsTypeCode' field has been set, false otherwise.
      */
    public boolean hasTitleEntpsTypeCode() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'titleEntpsTypeCode' field.
      * @return This builder.
      */
    public za.env.raw.opm.firstidmasterentity.Individual.Builder clearTitleEntpsTypeCode() {
      titleEntpsTypeCode = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public Individual build() {
      try {
        Individual record = new Individual();
        record.birthCityName = fieldSetFlags()[0] ? this.birthCityName : (java.lang.String) defaultValue(fields()[0]);
        record.birthCountryEntpsCode = fieldSetFlags()[1] ? this.birthCountryEntpsCode : (java.lang.String) defaultValue(fields()[1]);
        record.birthDate = fieldSetFlags()[2] ? this.birthDate : (java.lang.String) defaultValue(fields()[2]);
        record.deceasedDate = fieldSetFlags()[3] ? this.deceasedDate : (java.lang.String) defaultValue(fields()[3]);
        record.educations = fieldSetFlags()[4] ? this.educations : (java.util.List<za.env.raw.opm.firstidmasterentity.Education>) defaultValue(fields()[4]);
        record.employments = fieldSetFlags()[5] ? this.employments : (java.util.List<za.env.raw.opm.firstidmasterentity.Employment>) defaultValue(fields()[5]);
        record.genderEntpsTypeCode = fieldSetFlags()[6] ? this.genderEntpsTypeCode : (java.lang.String) defaultValue(fields()[6]);
        record.maritalConsentIndicator = fieldSetFlags()[7] ? this.maritalConsentIndicator : (java.lang.String) defaultValue(fields()[7]);
        record.maritalContractEntpsTypeCode = fieldSetFlags()[8] ? this.maritalContractEntpsTypeCode : (java.lang.String) defaultValue(fields()[8]);
        record.maritalStatusEntpsTypeCode = fieldSetFlags()[9] ? this.maritalStatusEntpsTypeCode : (java.lang.String) defaultValue(fields()[9]);
        record.nationalityCountryEntpsCode = fieldSetFlags()[10] ? this.nationalityCountryEntpsCode : (java.lang.String) defaultValue(fields()[10]);
        record.numberOfDependants = fieldSetFlags()[11] ? this.numberOfDependants : (java.lang.Integer) defaultValue(fields()[11]);
        record.permanentResidenceCountryEntpsCode = fieldSetFlags()[12] ? this.permanentResidenceCountryEntpsCode : (java.lang.String) defaultValue(fields()[12]);
        record.titleEntpsTypeCode = fieldSetFlags()[13] ? this.titleEntpsTypeCode : (java.lang.String) defaultValue(fields()[13]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<Individual>
    WRITER$ = (org.apache.avro.io.DatumWriter<Individual>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<Individual>
    READER$ = (org.apache.avro.io.DatumReader<Individual>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.birthCityName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.birthCityName);
    }

    if (this.birthCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.birthCountryEntpsCode);
    }

    if (this.birthDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.birthDate);
    }

    if (this.deceasedDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deceasedDate);
    }

    if (this.educations == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size0 = this.educations.size();
      out.writeArrayStart();
      out.setItemCount(size0);
      long actualSize0 = 0;
      for (za.env.raw.opm.firstidmasterentity.Education e0: this.educations) {
        actualSize0++;
        out.startItem();
        e0.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize0 != size0)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size0 + ", but element count was " + actualSize0 + ".");
    }

    if (this.employments == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      long size1 = this.employments.size();
      out.writeArrayStart();
      out.setItemCount(size1);
      long actualSize1 = 0;
      for (za.env.raw.opm.firstidmasterentity.Employment e1: this.employments) {
        actualSize1++;
        out.startItem();
        e1.customEncode(out);
      }
      out.writeArrayEnd();
      if (actualSize1 != size1)
        throw new java.util.ConcurrentModificationException("Array-size written was " + size1 + ", but element count was " + actualSize1 + ".");
    }

    if (this.genderEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.genderEntpsTypeCode);
    }

    if (this.maritalConsentIndicator == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.maritalConsentIndicator);
    }

    if (this.maritalContractEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.maritalContractEntpsTypeCode);
    }

    if (this.maritalStatusEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.maritalStatusEntpsTypeCode);
    }

    if (this.nationalityCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.nationalityCountryEntpsCode);
    }

    if (this.numberOfDependants == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.numberOfDependants);
    }

    if (this.permanentResidenceCountryEntpsCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.permanentResidenceCountryEntpsCode);
    }

    if (this.titleEntpsTypeCode == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.titleEntpsTypeCode);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.birthCityName = null;
      } else {
        this.birthCityName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.birthCountryEntpsCode = null;
      } else {
        this.birthCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.birthDate = null;
      } else {
        this.birthDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.deceasedDate = null;
      } else {
        this.deceasedDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.educations = null;
      } else {
        long size0 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.Education> a0 = this.educations;
        if (a0 == null) {
          a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.Education>((int)size0, SCHEMA$.getField("educations").schema().getTypes().get(1));
          this.educations = a0;
        } else a0.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.Education> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.Education>)a0 : null);
        for ( ; 0 < size0; size0 = in.arrayNext()) {
          for ( ; size0 != 0; size0--) {
            za.env.raw.opm.firstidmasterentity.Education e0 = (ga0 != null ? ga0.peek() : null);
            if (e0 == null) {
              e0 = new za.env.raw.opm.firstidmasterentity.Education();
            }
            e0.customDecode(in);
            a0.add(e0);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.employments = null;
      } else {
        long size1 = in.readArrayStart();
        java.util.List<za.env.raw.opm.firstidmasterentity.Employment> a1 = this.employments;
        if (a1 == null) {
          a1 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.Employment>((int)size1, SCHEMA$.getField("employments").schema().getTypes().get(1));
          this.employments = a1;
        } else a1.clear();
        SpecificData.Array<za.env.raw.opm.firstidmasterentity.Employment> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.Employment>)a1 : null);
        for ( ; 0 < size1; size1 = in.arrayNext()) {
          for ( ; size1 != 0; size1--) {
            za.env.raw.opm.firstidmasterentity.Employment e1 = (ga1 != null ? ga1.peek() : null);
            if (e1 == null) {
              e1 = new za.env.raw.opm.firstidmasterentity.Employment();
            }
            e1.customDecode(in);
            a1.add(e1);
          }
        }
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.genderEntpsTypeCode = null;
      } else {
        this.genderEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.maritalConsentIndicator = null;
      } else {
        this.maritalConsentIndicator = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.maritalContractEntpsTypeCode = null;
      } else {
        this.maritalContractEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.maritalStatusEntpsTypeCode = null;
      } else {
        this.maritalStatusEntpsTypeCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.nationalityCountryEntpsCode = null;
      } else {
        this.nationalityCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.numberOfDependants = null;
      } else {
        this.numberOfDependants = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.permanentResidenceCountryEntpsCode = null;
      } else {
        this.permanentResidenceCountryEntpsCode = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.titleEntpsTypeCode = null;
      } else {
        this.titleEntpsTypeCode = in.readString();
      }

    } else {
      for (int i = 0; i < 14; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.birthCityName = null;
          } else {
            this.birthCityName = in.readString();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.birthCountryEntpsCode = null;
          } else {
            this.birthCountryEntpsCode = in.readString();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.birthDate = null;
          } else {
            this.birthDate = in.readString();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deceasedDate = null;
          } else {
            this.deceasedDate = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.educations = null;
          } else {
            long size0 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.Education> a0 = this.educations;
            if (a0 == null) {
              a0 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.Education>((int)size0, SCHEMA$.getField("educations").schema().getTypes().get(1));
              this.educations = a0;
            } else a0.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.Education> ga0 = (a0 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.Education>)a0 : null);
            for ( ; 0 < size0; size0 = in.arrayNext()) {
              for ( ; size0 != 0; size0--) {
                za.env.raw.opm.firstidmasterentity.Education e0 = (ga0 != null ? ga0.peek() : null);
                if (e0 == null) {
                  e0 = new za.env.raw.opm.firstidmasterentity.Education();
                }
                e0.customDecode(in);
                a0.add(e0);
              }
            }
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.employments = null;
          } else {
            long size1 = in.readArrayStart();
            java.util.List<za.env.raw.opm.firstidmasterentity.Employment> a1 = this.employments;
            if (a1 == null) {
              a1 = new SpecificData.Array<za.env.raw.opm.firstidmasterentity.Employment>((int)size1, SCHEMA$.getField("employments").schema().getTypes().get(1));
              this.employments = a1;
            } else a1.clear();
            SpecificData.Array<za.env.raw.opm.firstidmasterentity.Employment> ga1 = (a1 instanceof SpecificData.Array ? (SpecificData.Array<za.env.raw.opm.firstidmasterentity.Employment>)a1 : null);
            for ( ; 0 < size1; size1 = in.arrayNext()) {
              for ( ; size1 != 0; size1--) {
                za.env.raw.opm.firstidmasterentity.Employment e1 = (ga1 != null ? ga1.peek() : null);
                if (e1 == null) {
                  e1 = new za.env.raw.opm.firstidmasterentity.Employment();
                }
                e1.customDecode(in);
                a1.add(e1);
              }
            }
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.genderEntpsTypeCode = null;
          } else {
            this.genderEntpsTypeCode = in.readString();
          }
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.maritalConsentIndicator = null;
          } else {
            this.maritalConsentIndicator = in.readString();
          }
          break;

        case 8:
          if (in.readIndex() != 1) {
            in.readNull();
            this.maritalContractEntpsTypeCode = null;
          } else {
            this.maritalContractEntpsTypeCode = in.readString();
          }
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.maritalStatusEntpsTypeCode = null;
          } else {
            this.maritalStatusEntpsTypeCode = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.nationalityCountryEntpsCode = null;
          } else {
            this.nationalityCountryEntpsCode = in.readString();
          }
          break;

        case 11:
          if (in.readIndex() != 1) {
            in.readNull();
            this.numberOfDependants = null;
          } else {
            this.numberOfDependants = in.readInt();
          }
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.permanentResidenceCountryEntpsCode = null;
          } else {
            this.permanentResidenceCountryEntpsCode = in.readString();
          }
          break;

        case 13:
          if (in.readIndex() != 1) {
            in.readNull();
            this.titleEntpsTypeCode = null;
          } else {
            this.titleEntpsTypeCode = in.readString();
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










