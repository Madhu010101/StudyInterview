server:
  port: 9080
spring:
  environment: dev
  kinit:
    keyTabPath: /opt/cdcsvc/Customer/readKafka/SVC_hadoop_cdc_dev.keytab
    principal: SVC_hadoop_cdc_dev@FNB.CO.ZA
  kafka:
    bootstrap-servers:
      - dna-r1eehdkaf01.fnb.co.za:9093
      - dna-r1eehdkaf02.fnb.co.za:9094
      - dna-r1eehdkaf03.fnb.co.za:9092
    properties:
      schema.registry.url: http://dna-r1eehddoc01.fnb.co.za:9090
      basic.auth.credentials.source: USER_INFO
      schema.registry.basic.auth.user.info: "${krb.user}:${krb.pass}"
      specific.avro.reader: false
      sasl:
        jaas:
          config: com.sun.security.auth.module.Krb5LoginModule required
                  useKeyTab=true
                  keyTab="/opt/cdcsvc/Customer/readKafka/SVC_hadoop_cdc_dev.keytab"
                  principal="SVC_hadoop_cdc_dev@FNB.CO.ZA"
                  debug=true;
        kerberos:
            service:
                name: svc_idna_eeh_kk_dev
      security:
          protocol: SASL_PLAINTEXT
    consumer:
      topics: za.dev.raw.cis.ims.hg0cifp1.s0024301,za.dev.raw.cis.ims.hg0cifp1.s0024302,za.dev.raw.cis.ims.hg0cifp1.s0024303,za.dev.raw.cis.ims.hg0cifp1.s0024306,za.dev.raw.cis.ims.hg0cifp1.s0024372
      group-id: CustomerCacheGroup
      client-id: CustomerCacheClient1
      auto-offset-reset: earliest
      key-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      bootstrap-servers:
            - dna-r1eehdkaf01.fnb.co.za:9093
            - dna-r1eehdkaf02.fnb.co.za:9094
            - dna-r1eehdkaf03.fnb.co.za:9092
  activemq:
      pooled: false
      broker-url: failover://tcp://cii-devmsg01.fnb.co.za:61616
      password: ENC(6lj6TUv/4GCVz5of8GB8kg==)

jasypt:
  encryptor:
    password: LocalCustomerCache
    algorithm: PBEWithMD5AndTripleDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator

logging:
  file:
    max-history: 7
    name: server.log
  level:
    za.co.fnb: debug

filter:
  key: eventHeader
  value: CRE

customer:
  cache:
    kafka_reader:
      concurrent_consumers: 5
        
